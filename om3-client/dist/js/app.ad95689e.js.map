{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/mutations.ts","webpack:///./src/store/index.ts","webpack:///./src/components/DeviceControlPanel.vue?8ce9","webpack:///./src/global_state/state.ts","webpack:///./src/model/level-index-obj.ts","webpack:///./src/helper/tend-query-tree.ts","webpack:///./src/model/uniform-gap-obj.ts","webpack:///./src/api/load_data.ts","webpack:///./src/api/build_tree.ts","webpack:///./src/model/level-data-manager.ts","webpack:///./src/helper/wavlet-decoder.ts","webpack:///./src/components/GlobalHeader.vue?59bf","webpack:///./src/components/LeftSideDataControlPanel.vue?7299","webpack:///./src/model/non-uniform-col-obj.ts","webpack:///./src/helper/util.ts","webpack:///./src/helper/format-data.ts","webpack:///./src/App.vue?bd44","webpack:///./src/components/GlobalHeader.vue","webpack:///./src/components/GlobalHeader.vue?de89","webpack:///./src/components/LeftSideDataControlPanel.vue","webpack:///./src/components/LeftSideDataControlPanel.vue?77b5","webpack:///./src/components/DisplayContentPanel.vue","webpack:///./src/components/DeviceControlPanel.vue","webpack:///./src/components/DeviceControlPanel.vue?ab6c","webpack:///./src/helper/distortion.ts","webpack:///./src/application/draw-svg-panel.ts","webpack:///./src/constant/index.ts","webpack:///./src/batch/m5batch.ts","webpack:///./src/application/multi-interaction.ts","webpack:///./src/application/m4interaction.ts","webpack:///./src/application/haarinteraction.ts","webpack:///./src/components/DisplayContentPanel.vue?7d81","webpack:///./src/App.vue","webpack:///./src/App.vue?ae2f","webpack:///./src/views/Home.vue?0027","webpack:///./src/components/HelloWorld.vue?0086","webpack:///./src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?775e","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?7720","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/application/line-interaction.ts","webpack:///./src/components/DisplayContentPanel.vue?7783","webpack:///./src/components/HelloWorld.vue?a198","webpack:///./src/store/actions.ts","webpack:///./src/indexdb/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","addSimpleBrushLineChartObj","state","info","sampleBrushLineChartObj","id","width","height","x","Math","random","y","rowData","val","min","v","max","timeRange","startTime","endTime","algorithm","isSample","isChoosed","simpleBrushLineChartObjs","set","emitter","emit","updateBrushLineChartObj","addViewChangeQueryNoPowLineChartObj","nonUniformRenderData","dataManager","maxLevel","maxV","minV","forEach","Infinity","viewChangeQueryObj","root","trendTree","powRenderData","noPowRenderData","minv","maxv","params","historyQueryStack","levelIndexObjs","currentLevel","ceil","log2","isPow","nonUniformColObjs","maxLen","addTimeBoxQueryLineChartObjs","dataManagers","floor","firstNodes","renderData","timeBoxQueryObj","addMultiTimeSeriesObj","multiTImeSeriesObj","columnInfos","pow","className","lineAmount","startTimeStamp","endTimeStamp","timeIntervalMs","updateMultiTimeSeriesM4Obj","allRenderData","res","tn","alterAlgorithm","algoritem","currentAlgorithm","alterSampleMethod","method","controlParams","currentSampleMethod","alterMode","currentMode","alterTable","table","currentTable","_value","splitArray","split","tableMaxLevel","store","tableMaxLevels","alterCustomTable","alterLineType","lineType","currentLineType","updateDisplayChanel","chanel","currentChanel","updateDenoiseMethod","currentDenoiseMethod","updateAllTables","allTables","tables","updateAllFlags","flags","log","updateMultiLineClassInfo","multiClassInfoMap","Map","allMultiLineClassInfoMap","allCustomMultiLineClassInfoMap","alterCurrentMulitLineClass","currentMultiLineClass","updateCustomTableAndInfo","tableInfoMap","customTableInfo","customTableMap","allCustomTables","customTables","map","updateDefaultTableAndInfo","tableInfo","defaultTableMap","allDefaultTables","alterProgressive","progresive","progressive","allTimeStore","pushTimeArray","curTimeArray","newA","mitt","ws","WebSocket","onopen","rdpThreshold","allAlgoritem","allFlags","lineChartObjs","simpleLineChartObjs","waveletLineChartObjs","currentCustomTable","currentTimeBoxType","sampleMethods","displayChanel","isDenoise","denoiseMethods","denoiseThreshold","realStart","semanticInterval","semanticType","mutations","actions","flagMap","isFlagSet","setFlagMap","curflagMap","keys","getFlag","finalName","includes","level","isFull","this","loadedDataRange","isSelfCheck","node","index","nextSibling","previousSibling","firstNode","range","loadedDataRangeLen","minHead","unshift","start","end","yArray","has","needDataRange","needCheckedNodeIndex","needDeleteNodeIndex","nextCheckNodeIndex","intersectRes","isIntersect","pos","lastNode","idx","checkRange","minMax","hasType3","TOTAL_LEVELS","parent","leftChild","dif","nodeType","_leftChild","_rightChild","difference","nextP","preP","trendRange","gapFlag","globalDataLen","nodeDataRange","startIndex","node1","node2","canUseT","isOk","tOne","tTwo","leftMax","leftMin","rightMax","rightMin","secondNode","midMin","midMax","losedDataInfo","manager","a","post","table_name","dataName","JSON","stringify","line_type","resultArray","batchLoadDifWidthPostRawMinMax","batchLoadDifWidthPost1","resultData","batchLoadWithWs","url","tagName","sendData","Date","getTime","send","onmessage","parse","batchLoadMinMaxMissWithWs","user_cookie","batchLoadMinMaxMissWithPostForMultiLineType","batchLoadDataForRangeLevel1","losedRange","difVals","count","startNode","getTreeNodeStartIndex","newTreeNode","yArray1","yArray2","cacheMap","addLoadedDataRange","nodeNum","k1","k2","addNodeNum","batchLoadDataForRangeLevelRawMinMax","difVal","currentNum","currentTag","batchLoadDataForRangeLevel1WS","lruCache","batchLoadDataForRangeLevel1MinMaxMiss","curNodeType","batchLoadDataForRangeLevel2MinMaxMiss","allTimes","allSumTimes","realDataRowNum","isShow","curNodeNum","dataCache","Array","cacheHead","cacheTail","maxCacheNodeNum","initCache","deleteQueue","isIntering","isEvicting","internalLevel","outterLevel","nextLevel","offset","focusPoint","nextStart","nextEnd","getData","noRet","lastFullLevel","checkLoadedDataInSingalLevel","extraDataLevel","curExtraLevel","fakeRowNum","lastIndex","getDataByIndex","processLosedDataInfo","tempInfo","hasData","hasDataForRange","losedDataOtherLevel","levelHasData","preIndexArray","needLoadDifNodes","first","last","pL","pTRange","pTimeS","pTimeE","k","b","mergeLast","mergeFirst","yScale","needLoadDifNode","colIndex","firtIndexTimeRange","getIndexTime","lastIndexTimeRange","startT","endT","isContain","currentLevelLosedRange","tempNeedLoadDifNodes","tempQue","preColIndex","con1","addLastVal","forceMerge","addFirstVal","reduce","pre","cur","gap","options","maxSize","sizeCalculation","dispose","reason","disposeAfter","ttl","allowStale","updateAgeOnGet","updateAgeOnHas","evictTreeNode","setInterval","curNode","delete","deleteNodeWhithChild","curLS","curRS","curLLoadedRange","curFirstNodes","newFirstNodes","newLoadDataRanges","curRange0","curP","size","needDeleteNum","levelObj","gapNeedNodes","times","timeNum","groups","groupIdx","group","secGroup","levelTime","columnGapArray","columnGap","group1","group2","updateLeftMinMax","updateRighetMinMax","con","isFinish","isCut","canCut","colGap","lastLevelUpdateMinMax","updateTwoNode","endV","startV","props","rootT","sumTime","currentFlagInfo","isMissContain","containColumnRange","nodeFlag1","nodeFlag2","checkIsMis","drawer","initWaveletDecode","diffData","minT","mintd","minvd","maxvd","maxT","maxtd","tempMaxV","tempMaxT","tempMinV","tempMinT","m4Data","mint","maxt","initHaarDecode","waveletDecode","histroryData","historyMinT","historyMinV","historyMaxV","historyMaxT","difMinT","difMinV","difMaxV","difMaxT","nowMinT","nowMinV","nowMaxV","nowMaxT","constructTrendTree","tableName","levelIndex","minid","maxid","tempLast","pop","lastLevelNodes","currentLevelNodes","levelDataManager","constructMinMaxMissTrendTree","initLevel","difIndex","NoUniformColObj","col","tStart","tEnd","isMis","minVTimeRange","maxVTimeRange","vRange","semanticTStart","semanticTEnd","endIndex","positionInfo","startX","endX","minX","maxX","shapeMinMax","shapeMinT","shapeMaxT","minNodes","maxNodes","sementicInterval","interval","tRange","getLevelData","temp","second","headMax","tailMin","computeDifRange","computeNeedLoadDataRange","needRange","loadedSet","currentNeedSet","nextNeedSet","checkSetType","timeBoxRange","chartRange","computeTimeRangeChild","computeTimeSE","timeRangeLength","minSegmentIndex","maxSegmentIndex","relativeStartTime","relativeEndTime","segmentStart","segmentEnd","setTStart","setTEnd","computeColTimeRange","tR","tS","next","computeLosedDataRange","parents","losedDataRange","computeLosedDataRangeV1","col1","col2","nodeRange0","nodeRange1","computeTimeFilterBaseLevelInfo","viewWidth","nodeTimeRange","timeStartIndex","timeEndIndex","userCookie","getUserCookie","localStorage","getItem","arrayBufferToBase64","arrayBuffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","base64ToArrayBuffer","base64","binaryString","atob","charCodeAt","buffer","openLoading","msg","loading","service","lock","text","background","getX","tE","formatDataForWaveletBrush","levelInfo","formatToRenderDataForTrend","indexTime","midX1","midX2","getGlobalMinMaxInfo","formatNonPowDataForViewChange","formatDataForMultiM4","_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_global_header","_component_left_side_data_control_panel","_component_dispaly_content_panel","href","components","setup","isVisible","closePanel","openImportPanel","__exports__","chooseMode","handleModeChange","label","isOpenDbSetup","customDBHostName","placeholder","customUserName","customDBPassword","customDBName","handleTestConn","testConnectResult","createCustomDBConn","createDBConn","initOM3DBEnv","initOm3DB","title","clearOM3DBEnv","reference","clearOm3DB","clearIndexFlag","isOpenTransform","chooseLineType","dialogFormVisible","footer","performTransformForSingeLine","fullscreenLoading","singleLineTableName","allCustomDBTables","item","lineDateRange","start-placeholder","end-placeholder","default-value","lineStartTime","arrow-control","lineEndTime","multiLineTransformDialogVisible","perfromTransformForMulitLine","multiLineTableNames","multiple","customMultiLineClassName","clearable","handleLineTypeChange","handleProgressiveChange","handleTableChange","loadCustomTableAndInfo","currentMultiClass","handleMultiLineClassChange","from","allMultLineClass","allCustomMultiLineClass","methods","updateTestConnRes","updateDBCreateConn","updateInitDB","updateClearDB","openFullScreenLoading","closeFullScreenLoading","openNotification","dispatch","hostName","possword","dbName","userName","then","storeDBConfig","setItem","restoreDBConfig","startDateStr","toISOString","endDateStr","startTimeStr","endTimeStr","startFullTime","endFullTime","tableNames","values","multiLineClassName","watch","newV","oldV","currentSampleAlgorithm","allSampleAlgoritem","handleSampleMethodChange","commit","handleCustomTableChange","style","xmlns","fill","viewBox","fill-rule","widthRef","heightRef","handleCreatePanel","dateRangeRef","currentDB","payload","AxisDistortion","scale","cacheSumDistortion","cacheDistortion","fisheye","_","sumDistortion","cols","concat","pointer","sumD","ratio","findIndex","changeDistortion","copy","domain","nice","ticks","tickFormat","FisheyeDistortion","left","abs","distortion","arguments","focus","drawWaveletContent","waveletObj","interactiveInfo","startY","offsetX","offsetY","isMouseDown","isMove","padding","top","bottom","right","clearListeners","xScale","xAxis","yAxis","distortionCache","cacheData","svg","append","attr","rerender","previous","arr","mergedDistortion","dd","select","distortionSlice","getDetailData","partialData","filter","sort","zoomDetail","calDistortion","pointerX","refresh","fishRes","round","distortionEdgeValue","zoomIn","zoomOut","on","which","denoiseMethod","preventDefault","stopPropagation","line","lineG","drawToSvg","remove","datum","batchViewChange","multiTimeSeriesObj","allPromises","rej","viewChangeInteractionFinal1","nonCol","batchGetData","inter","getDataMinMaxMiss","renderDatas","nameMap","namedMap","showInfo","interactionStack","drawMultiTimeSeries","realTimeStampRange","nodeIndexRange","isInit","isResizing","isRebacking","pading","foreignId","foreigG","foreignObj","canvas","__data__","getElementById","ctx","getContext","indexToTimeStampScale","showTimeXScale","xReScale","showXTimeScale","zoomAxis","timeBrushObj","extent","timeBoxBrushObj","timeBoxBrushed","brushed","timeBoxG","move","zoomAxisG","xAxisG","yAxisG","updateCanvasWidth","tempReScale","lengendG","drawLengend","leftOffset","colorArray","nameStrs","showNum","showName","md5Num","draw","colorArray1","curMinMax","computeMinMax","clearRect","beginPath","strokeStyle","strokeWidth","columnInfo","moveTo","lineTo","stack","co","stroke","resizeW","allColumnInfos","selection","interInfo","setRangeW","lastRes","setShowInfo","vMinY","vMaxY","vMin","invert","vMax","isChoose","isMouseover","startOffsetX","dragRect","body","cursor","addEventListener","preWidth","curStats","columInfo","drawMultiTimeSeriesM4","initTimeRange","allSum","sum","redraw","multObj","timeBox","time","flag","timeEnd","doTimeBox","allTime","getMilliseconds","toFixed","drawMultiHaarTimeSeries","DeviceControlPanel","drawContent","lineChartObj","GlobalHeader","LeftSideDataControlPanel","DispalyContentPanel","_component_HelloWorld","HelloWorld","routes","path","component","Home","router","history","defaults","baseURL","myCookie","headers","common","App","use","mount","InteractionInfo","drawViewChangeLineChart","columnsInfos","getBuffer","cacheFlag","flagBuffer","responseType","loadViewChangeQueryWSMinMaxMissDataInitData","context","lineInfo","start_time","end_time","combinedUrl","tempRes","finalRes","loadMultiTimeSeriesInitData","currentMulitLineClass","lineClassInfo","globalMaxV","globalMinV","parseInt","columnsInfoArray","noUniformColObjs","catch","timeInterval","amount","getAllTables","getAllFlagsFunc","isLoading","combinedUrl1","allFlagNames","combinedUrl2","tempFlagInfo","Buffer","close","getAllFlags","getAllMultiLineClassInfo","testCustomDBConn","host_name","user_name","password","db_name","initOM3DB","clearOM3Table","getAllCustomTables","performTransformForMultiLine","loadDefaultTableAndInfo","isOpen","base64StringToArray","str","byteCharacters","byteNumbers","byteArray","indexDb","initIndexDB","indexedDB","open","onupgradeneeded","db","createObjectStore","keyPath","onsuccess","indexPutData","transaction","objectStore","dta","binaryData","put","indexGetData","getRequest","byte","join","base64String","clearFlagDB","deleteDatabase","warn"],"mappings":"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","file":"js/app.ad95689e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"2c2bd732\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import store, { GlobalState, LineChartObj, emitter, SimpleLineChartObj, WaveletLineChartObj, SimpleBrushChartObj, TrendQueryLineChartObj, TimeBoxQueryLineChartObj, ViewChangeLineChartObj, AngularQueryLineChartObj, MultiTimeSeriesObj, MultiTimeSeriesM4Obj, MultiHaarTimeSeriesObj } from \".\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as d3 from 'd3';\n\nimport { constructTrendTree } from '../helper/wavlet-decoder'\nimport { getLevelData } from \"@/helper/util\";\nimport { formatToRenderDataForTrend, formatRenderDataForViewChange, formatNonPowDataForViewChange, formatDataForMultiM4 } from \"@/helper/format-data\";\nimport { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport { setFlagMap } from \"@/global_state/state\";\n\n\nfunction formatData(data: Array<any>, params: { startTime: string, endTime: string, width: number, height: number, algroithm: string }) {\n    const tStart = new Date(params.startTime).getTime();\n    const tEnd = new Date(params.endTime).getTime();\n    const timeRange = tEnd - tStart;\n\n    const vMin = d3.min(data, d => d.v);\n    const vMax = d3.max(data, d => d.v);\n    //const sortedArray=data;\n\n    const sortedArray = data.sort((a, b) => {\n        return new Date(a.t).getTime() - new Date(b.t).getTime();\n    });\n\n    sortedArray.forEach(item => {\n        item.x = Math.round(params.width * (new Date(item.t).getTime() - tStart) / timeRange),\n            item.y = Math.round(params.height * (item.v - vMin) / (vMax - vMin))\n    });\n    let resultArray = sortedArray;\n    if (params.algroithm.toLocaleLowerCase() === 'rdp') {\n        const threshold = store.state.rdpThreshold;\n        // resultArray = simple.simplify(sortedArray, threshold);\n\n    }\n    return {\n        val: resultArray, min: vMin, max: vMax\n    }\n}\n\n\nfunction addSimpleBrushLineChartObj(state: GlobalState, info: { data: Array<any>, rowData: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const sampleBrushLineChartObj: SimpleBrushChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data: { rowData: [[0, 0], ...info.rowData], val: info.data, min: d3.min(info.data, d => d.v), max: d3.max(info.data, d => d.v) },\n        timeRange: [info.startTime, info.endTime],\n        algorithm: info.algorithm,\n        isSample: true,\n        isChoosed: false,\n    }\n    //console.log(sampleBrushLineChartObj);\n    state.simpleBrushLineChartObjs.set(sampleBrushLineChartObj.id, sampleBrushLineChartObj);\n    emitter.emit(\"add_brush_line_chart_obj\", sampleBrushLineChartObj);\n}\n\nfunction updateBrushLineChartObj(state: GlobalState, info: SimpleBrushChartObj) {\n    state.simpleBrushLineChartObjs.set(info.id, info);\n}\n\n\n\nfunction addViewChangeQueryNoPowLineChartObj(state: GlobalState, info: { dataManager: LevelDataManager, trendTree: TrendTree, data: Array<NoUniformColObj>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const nonUniformRenderData = formatNonPowDataForViewChange(info.data, info.width, 2 ** info.dataManager.maxLevel, null);\n    let maxV = nonUniformRenderData[0].v;\n    let minV = nonUniformRenderData[0].v\n    nonUniformRenderData.forEach((v) => {\n        //@ts-ignore\n        maxV = Math.max((v.v === Infinity) ? maxV : v.v, maxV!);\n        //@ts-ignore\n        minV = Math.min((v.v === -Infinity) ? minV : v.v, minV!);\n    });\n    const viewChangeQueryObj: ViewChangeLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        root: info.trendTree,\n        data: { powRenderData: [], noPowRenderData: nonUniformRenderData, minv: minV!, maxv: maxV! },\n        timeRange: [0, info.width - 1],\n        algorithm: info.algorithm,\n        dataManager: info.dataManager,\n        params: [0, 0],\n        historyQueryStack: [[info.dataManager.levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        isPow: false,\n        nonUniformColObjs: info.data,\n        maxLen:0,\n        startTime:0,\n        endTime:0\n    }\n    emitter.emit(\"add_view_change_query_obj\", viewChangeQueryObj);\n}\n\nfunction addTimeBoxQueryLineChartObjs(state: GlobalState, info: { data: Array<any>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number }) {\n    const data = [];\n    const dataManagers = [];\n    for (let i = 0; i < info.data.length; i++) {\n        const { trendTree, dataManager } = constructTrendTree(info.data[i]);\n        const { renderData, minv, maxv } = formatToRenderDataForTrend([dataManager.maxLevel, Math.floor(Math.log2(info.width))], getLevelData(dataManager.levelIndexObjs[dataManager.levelIndexObjs.length - 1].firstNodes[0]), info.width);\n        data.push({ renderData, minv, maxv });\n        dataManagers.push(dataManager);\n    }\n    const timeBoxQueryObj: TimeBoxQueryLineChartObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        data,\n        timeRange: [0, info.width - 1],\n        algorithm: info.algorithm,\n        dataManagers,\n        params: [0, 0],\n        historyQueryStack: [[dataManagers[0].levelIndexObjs.length - 1, 0, info.width - 1]],\n        currentLevel: dataManagers[0].levelIndexObjs.length\n    }\n    if (data.length > 0) {\n        emitter.emit(\"add_time_box_query_obj\", timeBoxQueryObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\nfunction addMultiTimeSeriesObj(state: GlobalState, info: {\n    className: string,\n    lineAmount: number,\n    startTimeStamp: number,\n    endTimeStamp: number,\n    timeIntervalMs: number, dataManagers: Array<LevelDataManager>, powRenderData: Array<{ renderData: Array<any>, minv: number, maxv: number }>, columnInfos: Array<Array<NoUniformColObj>>, url: string, startTime: number, endTime: number, algorithm: string, width: number, height: number, pow: boolean, minv: number, maxv: number, maxLevel: number\n}) {\n    const multiTImeSeriesObj: MultiTimeSeriesObj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        powRenderData: info.powRenderData,\n        columnInfos: info.columnInfos,\n        timeRange: [0, info.endTime],\n        algorithm: info.algorithm,\n        dataManagers: info.dataManagers,\n        params: [0, 0],\n        currentLevel: Math.ceil(Math.log2(info.width)),\n        pow: info.pow,\n        minv: info.minv,\n        maxv: info.maxv,\n        maxLevel: info.maxLevel,\n        className: info.className,\n        lineAmount: info.lineAmount,\n        startTimeStamp: info.startTimeStamp,\n        endTimeStamp: info.endTimeStamp,\n        timeIntervalMs: info.timeIntervalMs\n    }\n    if (info.dataManagers.length > 0) {\n        emitter.emit(\"add_multi_timeseries_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot load time box data from server\");\n    }\n}\n\n\nfunction updateMultiTimeSeriesM4Obj(state: GlobalState, info: { width: number, height: number, data: Array<{ tn: string, res: Array<{ t: number, v: number }> }>, maxLevel: number, type: string, timeRange: [number, number] }) {\n    const allRenderData = [];\n    let maxV = -Infinity;\n    let minV = Infinity;\n    for (let i = 0; i < info.data.length; i++) {\n        const { res, minv, maxv } = formatDataForMultiM4(info.data[i].res, info.width, 0, 2 ** info.maxLevel - 1);\n        allRenderData.push({ tn: info.data[i].tn, data: res });\n        maxV = Math.max(maxv, maxV);\n        minV = Math.min(minv, minV);\n    }\n    const multiTImeSeriesObj: MultiTimeSeriesM4Obj = {\n        id: uuidv4(),\n        width: info.width,\n        height: info.height,\n        x: Math.random() * 60,\n        y: Math.random() * 60,\n        timeRange: info.timeRange,\n        algorithm: \"multiTimeSeriesM4\",\n        renderData: allRenderData,\n        params: [0, 0],\n        minv: minV,\n        maxv: maxV,\n        maxLevel: info.maxLevel,\n    }\n    if (allRenderData.length > 0) {\n        emitter.emit(\"update_multi_timeseries_m4_obj\", multiTImeSeriesObj);\n    } else {\n        throw new Error(\"cannot get m4 time series data\");\n    }\n}\n\nfunction alterAlgorithm(state: GlobalState, algoritem: string) {\n    state.currentAlgorithm = algoritem;\n}\n\nfunction alterSampleMethod(state: GlobalState, method: string) {\n    state.controlParams.currentSampleMethod = method;\n}\n\n\n\nfunction alterMode(state: GlobalState, mode: 'Default' | 'Custom') {\n    state.controlParams.currentMode = mode\n}\n\nfunction alterTable(state: GlobalState, table: string) {\n    //@ts-ignore\n    state.controlParams.currentTable = table._value;\n\n    //@ts-ignore\n    const splitArray = table._value.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterCustomTable(state: GlobalState, table: string){\n\n    state.controlParams.currentTable = table;\n    const splitArray = table.split(\"_\")\n    state.controlParams.tableMaxLevel = store.state.tableMaxLevels[splitArray[splitArray.length - 1]];\n}\n\nfunction alterLineType(state: GlobalState, lineType: 'Single' | 'Multi') {\n    state.controlParams.currentLineType = lineType;\n}\n\n\n\n\n\nfunction updateDisplayChanel(state: GlobalState, chanel: string) {\n    state.controlParams.currentChanel = chanel;\n}\nfunction updateDenoiseMethod(state: GlobalState, method: string) {\n    state.controlParams.currentDenoiseMethod = method;\n}\n\nfunction updateAllTables(state: GlobalState, info: { tables: Array<string> }) {\n    state.allTables = info.tables;\n    if (info.tables.length > 0) {\n        state.controlParams.currentTable = info.tables[0];\n    }\n}\n\nfunction updateAllFlags(state: GlobalState, info: { flags: any }) {\n    // state.allFlags = info.flags;\n    setFlagMap(info.flags)\n    console.log(\"load flags finish\");\n}\n\nfunction updateMultiLineClassInfo(state: GlobalState, info: { info: any }) {\n    const multiClassInfoMap = new Map<string, any>();\n    for (let i = 0; i < info.info['data'].length; i++) {\n        multiClassInfoMap.set(info.info['data'][i]['name'], info.info['data'][i]);\n    }\n    if(state.controlParams.currentMode==='Default'){\n        state.allMultiLineClassInfoMap = multiClassInfoMap;\n    }else{\n        state.allCustomMultiLineClassInfoMap=multiClassInfoMap;\n    }\n    \n}\n\nfunction alterCurrentMulitLineClass(state: GlobalState, className: string) {\n    state.controlParams.currentMultiLineClass = className\n    //console.log(\"load flags finish\");\n}\n\nfunction updateCustomTableAndInfo(state: GlobalState, info: { customTables: Array<string>,customTableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.customTableInfo.length;i++){\n        tableInfoMap.set(info.customTableInfo[i]['name'],info.customTableInfo[i]);\n    }\n    state.customTableMap=tableInfoMap;\n    state.allCustomTables=info.customTables.map(v=>v.split(\".\")[1]);\n}\n\nfunction updateDefaultTableAndInfo(state: GlobalState, info: { tables: Array<string>,tableInfo:Array<any> }){\n    const tableInfoMap=new Map<string,any>()\n    for(let i=0;i<info.tableInfo.length;i++){\n        tableInfoMap.set(info.tableInfo[i]['name'],info.tableInfo[i]);\n    }\n    state.defaultTableMap=tableInfoMap;\n    state.allDefaultTables=info.tables.map(v=>v.split(\".\")[1]);\n    if(state.allDefaultTables.length>0){\n        state.controlParams.currentTable=state.allDefaultTables[0];\n    }\n    \n}\n\nfunction alterProgressive(state: GlobalState, progresive: boolean){\n    state.controlParams.progressive=progresive;\n}\n\nexport {\n    alterAlgorithm,\n    alterMode,\n    alterLineType,\n    alterSampleMethod,\n    alterTable,\n    updateDisplayChanel,\n    updateDenoiseMethod,\n    addSimpleBrushLineChartObj,\n    updateBrushLineChartObj,\n    addTimeBoxQueryLineChartObjs,\n    updateAllTables,\n    addViewChangeQueryNoPowLineChartObj,\n    addMultiTimeSeriesObj,\n    updateMultiTimeSeriesM4Obj,\n    updateAllFlags,\n    updateMultiLineClassInfo,\n    alterCurrentMulitLineClass,\n    alterCustomTable,\n    updateCustomTableAndInfo,\n    updateDefaultTableAndInfo,\n    alterProgressive,\n}\n\n","import { createStore } from 'vuex';\nimport * as mutations from './mutations';\nimport * as actions from './actions';\nimport mitt from 'mitt';\nimport { WaveletTree } from '@/helper/tree';\nimport TrendTree from '@/helper/tend-query-tree';\nimport LevelDataManager from '@/model/level-data-manager';\nimport { NoUniformColObj } from '@/model/non-uniform-col-obj';\nimport HaarDataManager from '@/model/haar-data-manager';\n//import WebSocket from 'ws'\n\n\n\nlet allTimeStore: Array<Array<number>> = [];\nexport function pushTimeArray(curTimeArray: Array<number>) {\n  const newA = curTimeArray.map(v => v)\n  allTimeStore.push(newA);\n}\n\nexport function getAvgTime() {\n  const avgTimeArray = new Array(allTimeStore[0].length);\n  // debugger\n  for (let j = 0; j < allTimeStore[0].length; j++) {\n    let curMin = Infinity;\n    let curMax = -Infinity\n    let sum = 0;\n    for (let i = 0; i < allTimeStore.length; i++) {\n      const curV = allTimeStore[i][j];\n      sum += curV;\n\n    }\n    avgTimeArray[j] = (Math.floor(sum / (allTimeStore.length)))\n  }\n  allTimeStore = [];\n  return avgTimeArray;\n}\n\nexport function getMultAvgTime() {\n  const avgTimeArray = [];\n  for (let i = 0; i < allTimeStore.length; i++) {\n    let sum = 0\n    for (let j = 0; j < allTimeStore[0].length; j++) {\n      sum += allTimeStore[i][j]\n    }\n    avgTimeArray.push(Math.floor(sum / allTimeStore[0].length))\n  }\n  return avgTimeArray\n}\n\nexport const emitter = mitt();\nexport const ws = new WebSocket('ws://127.0.0.1:3001')\nws.onopen = e => {\n  console.log(\"connect success\", e)\n}\n\n\n\nexport interface LineChartObj {\n  id: string;\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  data: { val: Array<any>, min: number, max: number };\n  timeRange: [Date, Date];\n  algorithm: string;\n  isChoosed: boolean;\n}\n\nexport interface SimpleLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  data: { val: Array<any>, max: number, min: number };\n  timeRange: [number, number];\n  algorithm: string;\n  isChoosed: boolean;\n  isSample: boolean\n}\n\nexport interface SimpleBrushChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  data: { rowData: Array<Array<number>>, val: Array<any>, max: number, min: number };\n  timeRange: [number, number];\n  algorithm: string;\n  isChoosed: boolean;\n  isSample: boolean\n}\n\nexport interface WaveletLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  //data: { val: Array<{x:number,y:number}>, max: number, min: number };\n  timeRange: [number, number];\n  algorithm: string;\n  isChoosed: boolean;\n  isSample: boolean;\n  tag: string;\n  root: WaveletTree;\n  distortion: Array<number>;\n  denoiseMethod?: string;\n  denoiseThreshold?: number;\n}\n\nexport interface TrendQueryLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  root: TrendTree;\n  data: { renderData: Array<any>, maxv: number, minv: number };\n  params: [number, number];\n  dataManager: LevelDataManager;\n  historyQueryStack: Array<Array<number>>;\n  currentLevel: number;\n}\nexport interface AngularQueryLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  root: TrendTree;\n  data: { renderData: Array<any>, maxv: number, minv: number };\n  params: [number, number];\n  dataManager: LevelDataManager;\n  historyQueryStack: Array<Array<number>>;\n  currentLevel: number;\n}\nexport interface TimeBoxQueryLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  data: Array<{ renderData: Array<any>, maxv: number, minv: number }>;\n  params: [number, number];\n  dataManagers: Array<LevelDataManager>;\n  historyQueryStack: Array<Array<number>>;\n  currentLevel: number;\n}\n\nexport interface MultiTimeSeriesObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  powRenderData: Array<{ renderData: Array<any>, maxv: number, minv: number }>;\n  params: [number, number];\n  dataManagers: Array<LevelDataManager>;\n  currentLevel: number;\n  pow: boolean,\n  columnInfos: Array<Array<NoUniformColObj>>,\n  minv: number,\n  maxv: number,\n  maxLevel: number,\n  className: string,\n  lineAmount: number,\n  startTimeStamp: number,\n  endTimeStamp: number,\n  timeIntervalMs: number,\n}\n\nexport interface MultiHaarTimeSeriesObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  allRenderData: Array<{ renderData: Array<any>, maxv: number, minv: number }>;\n  params: [number, number];\n  dataManagers: Array<HaarDataManager>;\n  currentLevel: number;\n  minv: number,\n  maxv: number,\n  maxLevel: number\n}\nexport interface MultiTimeSeriesM4Obj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  params: [number, number];\n  renderData: Array<{ tn: string, data: Array<{ t: number, x: number, y: number, v: number }> }>\n  maxLevel: number,\n  minv: number,\n  maxv: number,\n\n}\n\nexport interface ValueFilterLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  root: TrendTree;\n  data: { renderData: Array<any>, maxv: number, minv: number };\n  params: [number, number];\n  dataManager: LevelDataManager;\n  historyQueryStack: Array<Array<number>>;\n  currentLevel: number;\n}\nexport interface TimeFilterLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  root: TrendTree;\n  data: { renderData: Array<any>, maxv: number, minv: number };\n  params: [number, number];\n  dataManager: LevelDataManager;\n  historyQueryStack: Array<Array<number>>;\n  currentLevel: number;\n}\n\nexport interface ViewChangeLineChartObj {\n  id: string\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  timeRange: [number, number];\n  algorithm: string;\n  root: TrendTree;\n  data: { powRenderData: Array<any>, noPowRenderData: Array<any>, maxv: number, minv: number };\n  params: [number, number];\n  dataManager: LevelDataManager;\n  historyQueryStack?: Array<Array<number>>;\n  currentLevel: number;\n  nonUniformColObjs?: Array<NoUniformColObj>\n  isPow: boolean,\n  maxLen:number,\n  startTime:number,\n  endTime:number,\n}\n\n\nexport interface GlobalState {\n  currentAlgorithm: string;\n  rdpThreshold: number;\n  allAlgoritem: Array<string>;\n  allTables: Array<string>;\n  allCustomTables: Array<string>,\n  customTableMap: Map<string, any>,\n  allDefaultTables: Array<string>,\n  defaultTableMap: Map<string, any>\n  allFlags: any;\n  tableMaxLevels: any;\n  lineChartObjs: Map<string, LineChartObj>;\n  simpleLineChartObjs: Map<string, SimpleLineChartObj>;\n  waveletLineChartObjs: Map<string, WaveletLineChartObj>;\n  simpleBrushLineChartObjs: Map<string, SimpleBrushChartObj>;\n  allMultiLineClassInfoMap: Map<string, any>;\n  allCustomMultiLineClassInfoMap: Map<string, any>;\n  controlParams: {\n    currentMode: 'Default' | 'Custom';\n    currentLineType: 'Single' | 'Multi'\n    progressive:boolean;\n    displayChanel: Array<string>;\n    currentChanel: string;\n    currentMultiLineClass: string;\n    currentTimeBoxType: string;\n    isDenoise: boolean;\n    currentTable: string;\n    currentCustomTable: string;\n    tableMaxLevel: number;\n    sampleMethods: Array<string>;\n    currentSampleMethod: string;\n    denoiseMethods: Array<string>;\n    currentDenoiseMethod: string;\n    denoiseThreshold: number;\n    realStart: number;\n    semanticInterval: number;\n    semanticType: 'ms' | 's' | 'm' | 'h' | 'd' | 'W' | 'M' | 'Y'\n  },\n}\n\nexport default createStore<GlobalState>({\n  state: {\n    rdpThreshold: 5,\n    currentAlgorithm: 'ViewChangeQuery',\n    allAlgoritem: ['M4', 'MinMax', 'Min', 'Max', 'RDP', 'Avg'],\n    allTables: [],\n    allCustomTables: [],\n    customTableMap: new Map(),\n    allDefaultTables: [],\n    defaultTableMap: new Map(),\n    allFlags: {},\n    allMultiLineClassInfoMap: new Map(),\n    allCustomMultiLineClassInfoMap: new Map(),\n    tableMaxLevels: { '1m': 20, '2m': 21, '4m': 22, '8m': 23, '1k': 24, '16m': 24, '32m': 25, '64m': 26, '1b': 27, '3b': 28, '10b': 30, 'sensor8': 23, 'test': 4 },\n    lineChartObjs: new Map(),\n    simpleLineChartObjs: new Map(),\n    waveletLineChartObjs: new Map(),\n    simpleBrushLineChartObjs: new Map(),\n    controlParams: {\n      progressive:false,\n      currentMode: 'Default',\n      currentLineType: 'Single',\n      currentTable: '',\n      currentCustomTable: \"\",\n      currentTimeBoxType: 'stock46r',\n      currentMultiLineClass: '',\n      tableMaxLevel: 20,\n      sampleMethods: ['ViewChangeQueryFinal'],\n      displayChanel: ['All', 'MinT', 'MinV', 'MaxV', 'MaxT'],\n      currentChanel: 'All',\n      isDenoise: false,\n      denoiseMethods: ['simple_hard', 'm4_hard', 'm4_hard_v2', 'm4_threshold_with_level', 'm4_wavelet_hard', 'soft'],\n      currentDenoiseMethod: 'm4_hard',\n      currentSampleMethod: 'ViewChangeQueryFinal',\n      denoiseThreshold: 10,\n      realStart: 1354114150080,\n      semanticInterval: 6000,\n      semanticType: 'h'\n    }\n  },\n  mutations,\n  actions,\n  modules: {\n  }\n})\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DeviceControlPanel.vue?vue&type=style&index=0&id=5adbeb70&scoped=true&lang=css\"","import store from \"@/store\";\n\n\n\nlet flagMap:any={}\nlet isFlagSet=false;\nexport function setFlagMap(curflagMap:any){\n    isFlagSet=true\n    Object.keys(curflagMap).forEach(v=>{\n        flagMap[v]=curflagMap[v];\n    })\n    \n}\n\nexport function getFlag(name:string){\n    if(!isFlagSet){\n        throw new Error(\"flag unset\")\n    }\n    let finalName=name;\n    if(name.includes(\".\")){\n        finalName=name.split(\".\")[1]\n    }\n    if(store.state.controlParams.currentMode==='Custom'){\n        finalName=\"custom_\"+finalName\n    }\n    return flagMap[finalName]\n}","import TrendTree from \"@/helper/tend-query-tree\";\nimport { checkSetType, computeNeedLoadDataRange, isIntersect } from \"../helper/util\"\nexport default class LevelIndexObj {\n    level: number;\n    isFull: boolean;\n    loadedDataRange: Array<Array<number>>;\n    firstNodes: Array<TrendTree>;\n    isSelfCheck: boolean;\n    constructor(level: number, isFull = false) {\n        this.level = level;\n        this.isFull = isFull;\n        this.loadedDataRange = [];\n\n        this.firstNodes = [];\n        this.isSelfCheck = false;\n    }\n\n    deleteLoadedDataRange(node: TrendTree) {\n        \n        if (this.isFull) {\n            this.isFull = false\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] <= node.index && this.loadedDataRange[i][1] >= node.index) {\n                if (this.loadedDataRange[i][0] === this.loadedDataRange[i][1]) {\n                    this.loadedDataRange.splice(i, 1)\n                    this.firstNodes.splice(i, 1)\n                    break;\n                }\n                if (this.loadedDataRange[i][0] === node.index) {\n                    this.loadedDataRange[i][0] += 1;\n                    //@ts-ignore\n                    node.nextSibling.previousSibling=null\n                    if(node.nextSibling==null){\n                        debugger\n                    }\n                    this.firstNodes[i]=node.nextSibling!\n                    //this.firstNodes[i].nextSibling.previousSibling = null\n                    this.firstNodes[i] = node.nextSibling!;\n                    break;\n                }\n                if (this.loadedDataRange[i][1] === node.index) {\n                    this.loadedDataRange[i][1] -= 1;\n                    if(node.previousSibling!=null){\n                        node.previousSibling.nextSibling = null;\n                    }\n                   \n                    break;\n                }\n                this.firstNodes.splice(i + 1, 0, node.nextSibling!)\n                //@ts-ignore\n                node.previousSibling.nextSibling = null\n                this.loadedDataRange.splice(i + 1, 0, [node.index + 1, this.loadedDataRange[i][1]])\n                this.loadedDataRange[i][1] = node.index - 1;\n                break\n            }\n        }\n    }\n\n    addLoadedDataRange(firstNode: TrendTree, range: Array<number>) {\n        if (this.loadedDataRange.length === 0) {\n            this.loadedDataRange.push(range);\n            this.firstNodes.push(firstNode);\n            return\n        }\n        const loadedDataRangeLen = this.loadedDataRange.length;\n        let isMerge = false;\n        const needCheckIndex = [];\n        for (let i = 0; i < loadedDataRangeLen; i++) {\n            const minHead = Math.min(this.loadedDataRange[i][0], range[0]);\n            if (minHead === this.loadedDataRange[i][0] && (this.loadedDataRange[i][1] + 1 === range[0])) {\n                isMerge = true;\n                let p = this.firstNodes[i];\n                while (p.nextSibling) {\n                    p = p.nextSibling;\n                }\n                if (p.index !== firstNode.index - 1) {\n                    debugger\n                    throw new Error(\"index error\")\n                }\n                p.nextSibling = firstNode;\n                this.loadedDataRange[i][1] = range[1];\n                if (i < loadedDataRangeLen - 1) {\n                    if (range[1] + 1 === this.loadedDataRange[i + 1][0]) {\n                        this.loadedDataRange[i][1] = this.loadedDataRange[i + 1][1];\n                        let m = firstNode;\n                        while (m.nextSibling) {\n                            m = m.nextSibling\n                        }\n                        m.nextSibling = this.firstNodes[i + 1];\n                        this.firstNodes.splice(i + 1, 1);\n                        this.loadedDataRange.splice(i + 1, 1);\n                    } else if (range[1] >= this.loadedDataRange[i + 1][0]) {\n                        debugger\n                    }\n                }\n                break;\n            } else if (minHead === range[0] && (range[1] + 1 === this.loadedDataRange[i][0])) {\n                isMerge = true;\n                let p = firstNode;\n                while (p.nextSibling) {\n                    p = p.nextSibling;\n                }\n                p.nextSibling = this.firstNodes[i];\n                this.firstNodes[i] = firstNode;\n                this.loadedDataRange[i][0] = range[0];\n                break\n            } else {\n                if (i === 0 && range[1] < this.loadedDataRange[i][0] - 1) {\n                    this.loadedDataRange.unshift([range[0], range[1]]);\n                    this.firstNodes.unshift(firstNode);\n                    break;\n                } else if (i === loadedDataRangeLen - 1 && range[0] > this.loadedDataRange[i][1] + 1) {\n\n                    this.loadedDataRange.push([range[0], range[1]]);\n                    this.firstNodes.push(firstNode);\n                    break;\n\n                } else {\n                    if (range[0] > this.loadedDataRange[i][1] + 1 && range[1] < this.loadedDataRange[i + 1][0] - 1) {\n                        this.loadedDataRange.splice(i + 1, 0, [range[0], range[1]]);\n                        this.firstNodes.splice(i + 1, 0, firstNode);\n                        break;\n                    }\n\n                }\n\n            }\n        }\n        if (this.firstNodes.length === 1 && (this.loadedDataRange[0][1] - this.loadedDataRange[0][0] + 1) === 2 ** this.level) {\n            this.isFull = true;\n        }\n    }\n\n\n    getDataByIndex(start: number, end: number) {\n        const data: Array<Array<number>> = [];\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= end) {\n                let p = this.firstNodes[i];\n                while (p) {\n                    if (p.index >= start && p.index <= end) {\n                        data.push(p.yArray);\n                    }\n                    if (p.index > end) {\n                        break;\n                    }\n                    //@ts-ignore\n                    p = p.nextSibling;\n                }\n            }\n        }\n        return { data, start, end, l: this.level };\n    }\n    hasDataForRange(start: number, end: number) {\n        if (this.isFull) {\n            return {\n                has: true,\n                range: [],\n            }\n        }\n        const needDataRange = computeNeedLoadDataRange([start, end], this.loadedDataRange);\n        if (needDataRange.length === 0) {\n            return {\n                has: true,\n                range: [],\n            }\n        } else {\n            return {\n                has: false,\n                range: needDataRange\n            }\n        }\n    }\n    // fillLevel(){\n    //     const needDataRes=this.hasDataForRange(0,2**this.level);\n    //     if(needDataRes.has){\n    //         return\n    //     }\n\n    // }\n    getTreeNodeStartIndex(start: number) {\n        for (let i = 0; i < this.firstNodes.length; i++) {\n            if (this.loadedDataRange[i][0] <= start && this.loadedDataRange[i][1] >= start) {\n                let root = this.firstNodes[i];\n                while (root) {\n\n                    if (root.index === start) {\n                        return root\n                    }\n                    //@ts-ignore\n                    root = root.nextSibling;\n                }\n            }\n        }\n        return null;\n    }\n\n    reCheckIntersect(needCheckedNodeIndex: Array<number>) {\n        if (needCheckedNodeIndex.length > 2) {\n            // throw new Error(\"check intersect error\");\n            console.log(\"..................................\");\n        }\n        let needDeleteNodeIndex = [];\n        while (needCheckedNodeIndex.length > 0) {\n            let nextCheckNodeIndex = [];\n            for (let i = 0; i < needCheckedNodeIndex.length; i++) {\n                for (let j = 0; j < this.loadedDataRange.length; j++) {\n                    if (needCheckedNodeIndex[i] === j) {\n                        continue;\n                    }\n                    const intersectRes = isIntersect(this.loadedDataRange[j], this.loadedDataRange[needCheckedNodeIndex[i]]);\n                    if (intersectRes.isIntersect) {\n                        if (j === needCheckedNodeIndex[needCheckedNodeIndex.length - 1]) {\n                            needCheckedNodeIndex.splice(needCheckedNodeIndex.length - 1, 1);\n                        }\n                        if (intersectRes.pos === 'second') {\n\n                            needDeleteNodeIndex.push(j);\n\n                            const lastNode = this.firstNodes[j];\n                            const firstNode = this.firstNodes[needCheckedNodeIndex[i]];\n                            let p = firstNode;\n\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === lastNode.index) {\n                                    p.nextSibling = lastNode;\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        } else {\n\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i]);\n\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                if (p.nextSibling.index === this.firstNodes[needCheckedNodeIndex[i]].index) {\n                                    p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n                                    break;\n                                }\n                                p = p.nextSibling;\n                            }\n                            this.loadedDataRange[j][0] = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                            this.loadedDataRange[j][1] = Math.max(this.loadedDataRange[j][1], this.loadedDataRange[needCheckedNodeIndex[i]][1]);\n                            nextCheckNodeIndex.push(j);\n                        }\n                    } else {\n\n                        const minHead = Math.min(this.loadedDataRange[j][0], this.loadedDataRange[needCheckedNodeIndex[i]][0]);\n                        if (minHead === this.loadedDataRange[j][0] && (this.loadedDataRange[j][1] + 1 === this.loadedDataRange[needCheckedNodeIndex[i]][0])) {\n                            needDeleteNodeIndex.push(needCheckedNodeIndex[i])\n                            let p = this.firstNodes[j];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[needCheckedNodeIndex[i]];\n\n                            this.loadedDataRange[j][1] = this.loadedDataRange[needCheckedNodeIndex[i]][1];\n                            nextCheckNodeIndex.push(j)\n                        } else if (minHead === this.loadedDataRange[needCheckedNodeIndex[i]][0] && (this.loadedDataRange[needCheckedNodeIndex[i]][1] + 1 === this.loadedDataRange[j][0])) {\n                            needDeleteNodeIndex.push(j);\n                            let p = this.firstNodes[needCheckedNodeIndex[i]];\n                            while (p.nextSibling) {\n                                p = p.nextSibling;\n                            }\n                            p.nextSibling = this.firstNodes[j];\n\n                            this.loadedDataRange[needCheckedNodeIndex[i]][1] = this.loadedDataRange[j][1];\n                            nextCheckNodeIndex.push(needCheckedNodeIndex[i]);\n                        }\n\n                    }\n\n\n                }\n            }\n            for (let i = 0; i < needDeleteNodeIndex.length; i++) {\n                const idx = needDeleteNodeIndex[i];\n                for (let j = 0; j < nextCheckNodeIndex.length; j++) {\n                    if (nextCheckNodeIndex[j] > idx) {\n                        nextCheckNodeIndex[j]--;\n                    }\n                }\n                this.loadedDataRange.splice(idx, 1);\n                this.firstNodes.splice(idx, 1);\n            }\n            needDeleteNodeIndex = [];\n            needCheckedNodeIndex = nextCheckNodeIndex;\n            nextCheckNodeIndex = [];\n        }\n    }\n\n    selfCheck() {\n        if (this.loadedDataRange.length != this.firstNodes.length) {\n            throw new Error(\"loadedDataRange len not match firtnodes\")\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] !== this.firstNodes[i].index) {\n                console.log(this);\n                throw new Error(\"range not match node index\");\n            }\n        }\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            let p = this.firstNodes[i];\n            let index = this.loadedDataRange[i][0];\n            while (p && index <= this.loadedDataRange[i][1]) {\n                if (p.index === index) {\n                    p = p.nextSibling!;\n                    index++;\n                } else {\n                    console.log(this);\n                    throw new Error(\"range not match node index\");\n                }\n            }\n        }\n    }\n\n    timeBoxQuery(checkRange: Array<number>, minMax: Array<number>) {\n        for (let i = 0; i < this.loadedDataRange.length; i++) {\n            if (this.loadedDataRange[i][0] <= checkRange[0] && this.loadedDataRange[i][1] >= checkRange[1]) {\n                let p = this.firstNodes[i];\n                let hasType3 = false;\n                while (p && p.index <= checkRange[1]) {\n                    if (p.index >= checkRange[0]) {\n                        const type = checkSetType(minMax, [p.yArray[1], p.yArray[2]])\n                        if (type === 3) {\n                            hasType3 = true;\n                        }\n                        if (type === 2) {\n                            return 2\n                        }\n                    }\n                    p = p.nextSibling as TrendTree;\n                }\n                if (hasType3) {\n                    return 3;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        throw new Error(\"error\");\n    }\n}","import store from \"@/store\";\nimport axios from \"axios\";\n\nconst TOTAL_LEVELS = 31\nexport default class TrendTree {\n    parent: TrendTree | null;\n    _leftChild: TrendTree | null;\n    _rightChild: TrendTree | null;\n    preP: TrendTree | null;\n    nextP: TrendTree | null;\n    yArray: [number, number, number, number];\n    difference: [number, number, number, number] | null;\n    level: number;\n    index: number;\n    previousSibling: TrendTree | null;\n    nextSibling: TrendTree | null;\n    trendRange: Array<number>\n    timeRange: Array<number>\n    nodeType:'O'|'NULL'|'LEFTNULL'|'RIGHTNULL';\n    gapFlag:'NO'|'L'|'R';//L miss data in left; R  miss data in right\n    //fetcher: TreeNodeFetchers\n    constructor(parent: TrendTree | null, leftChild = true, index = 0, yArray: [number, number, number, number], dif: [number, number, number, number] | null,nodeType?:'O'|'NULL'|'LEFTNULL'|'RIGHTNULL') {\n        this.nodeType='O'\n        if(nodeType){\n            this.nodeType=nodeType\n        }\n        this.parent = parent;\n        \n        this._leftChild = null;\n        this._rightChild = null;\n        this.yArray = [0, 0, 0, 0];//Time-min,Val-min,Val-max,T-max\n        this.difference = null;\n\n        this.level = 0;\n        this.previousSibling = null;\n        this.nextSibling = null\n        this.nextP = null;\n        this.preP = null\n        this.trendRange = [0, 0];\n        if (yArray) {\n            this.yArray = yArray;\n        }\n        if (dif) {\n            this.difference = dif;\n        }\n        if (parent) {\n            this.level = parent.level + 1;\n            //this.fetcher = parent.fetcher;\n            if (leftChild) {\n                this.index = 2 * index;\n                //@ts-ignore\n                this.parent._leftChild = this;\n            } else {\n                this.index = 2 * index + 1;\n                //@ts-ignore\n                this.parent._rightChild = this;\n            }\n        } else {\n            this.index = 0;\n            //this.fetcher = new TreeNodeFetcher()\n        }\n        if (this.level > TOTAL_LEVELS) {\n            throw new Error(\"This level is protected\")\n        }\n        this.timeRange = [];\n        if(parent===null){\n            this.gapFlag='NO';\n        }else{\n            if(parent.gapFlag==='NO'){\n                this.gapFlag='NO'\n            }else if(parent.gapFlag==='L'){\n                if(parent.nodeType==='LEFTNULL'){\n                    if(leftChild){\n                        this.gapFlag='NO'\n                    }else{\n                        this.gapFlag='L'\n                    }\n                }else{\n                    if(leftChild){\n                        this.gapFlag='L'\n                    }else{\n                        this.gapFlag='NO'\n                    }\n                }\n                \n            }else{\n                if(parent.nodeType==='RIGHTNULL'){\n                    if(leftChild){\n                        this.gapFlag='R';\n                    }else{\n                        this.gapFlag='NO';\n                    }\n                }else{\n                    if(leftChild){\n                        this.gapFlag='NO';\n                    }else{\n                        this.gapFlag='R';\n                    }\n                }\n                \n            }\n        }\n    }\n    get isLeafNode() {\n        return this.level >= TOTAL_LEVELS - 2;\n    }\n    get levelNums() {\n        return Math.pow(2, this.level);\n    }\n\n    getTimeRange(globalDataLen: number) {\n        if (this.timeRange.length > 0) {\n            return [this.timeRange[0], this.timeRange[1]];\n        }\n        const nodeDataRange = globalDataLen / (2 ** this.level);\n        this.timeRange[0] = this.index * nodeDataRange;\n        this.timeRange[1] = this.timeRange[0] + nodeDataRange - 1;\n        return [this.timeRange[0], this.timeRange[1]];\n    }\n    data(startIndex: number) {\n        if (this.level <= TOTAL_LEVELS) {\n            return this.yArray.map((y, i) => {\n                return {\n                    x: this.index - startIndex,\n                    y\n                }\n            })\n        } else {\n            return [{ x: this.index - startIndex, y: this.yArray[0] }, { x: this.index - startIndex, y: this.yArray[3] }]\n        }\n    }\n   \n}\n    // get leftChild(): TrendTree | null {\n    //     if (this._leftChild) return this._leftChild\n    //     try {\n    //         const child = new TrendTree(this, true, this.index);\n    //         if (!this.difference) {\n    //             this.fetcher.fetch(child);\n    //         }\n    //         return child;\n    //     } catch (e) {\n    //         return null;\n    //     }\n    // }\n\n    // get rightChild(): TrendTree | null {\n    //     if (this._rightChild) {\n    //         return this._rightChild;\n    //     }\n    //     try {\n    //         const child = new TrendTree(this, false, this.index);\n    //         if (!this.difference) {\n    //             this.fetcher.fetch(child);\n    //         }\n    //         return child;\n    //     } catch (e) {\n    //         return null;\n    //     }\n    // }\n\n//     get previousSibling(): TrendTree | null {\n//         return (\n//             this.parent && (this.parent._leftChild === this ? this.parent.previousSibling && this.parent.previousSibling.rightChild : this.parent.leftChild)\n//         );\n//     }\n//     get nextSibling(): TrendTree | null {\n//         return (\n//             this.parent && (this.parent._rightChild === this ? this.parent.nextSibling && this.parent.nextSibling.leftChild : this.parent.rightChild)\n//         );\n//     }\n// }\n\n\n// export class TreeNodeFetcher {\n//     constructor() {\n\n//     }\n//     fetch(child: TrendTree) {\n\n//     }\n// }\n","import TrendTree from \"@/helper/tend-query-tree\"\n\nexport class UniformGapObj{\n    leftMin:number\n    leftMax:number\n    rightMin:number\n    rightMax:number\n    isOk:boolean\n    tOne:number\n    tTwo:number\n    canUseT:boolean\n    firstNode:TrendTree\n    secondNode:TrendTree\n    constructor(node1:TrendTree,node2:TrendTree){\n        this.canUseT=false\n        this.isOk=false\n        this.tOne=0\n        this.tTwo=0\n        this.leftMax=-Infinity\n        this.leftMin=Infinity\n        this.rightMax=-Infinity;\n        this.rightMin=Infinity;\n        this.firstNode=node1._rightChild!;\n        this.secondNode=node2._leftChild!;\n\n        if(node1._leftChild!.yArray[1]<this.leftMin){\n            this.leftMin=node1._leftChild!.yArray[1]\n        }\n        if(node1._leftChild!.yArray[2]>this.leftMax){\n            this.leftMax=node1._leftChild!.yArray[2]\n        }\n        if(node2._rightChild!.yArray[1]<this.rightMin){\n            this.rightMin=node2._rightChild!.yArray[1];\n        }\n        if(node2._rightChild!.yArray[2]>this.rightMax){\n            this.rightMax=node2._rightChild!.yArray[2]\n        }\n    }\n\n    canCut(){\n        const midMin=this.firstNode.yArray[1]<this.secondNode.yArray[1]?this.firstNode.yArray[1]:this.secondNode.yArray[1];\n        const midMax=this.firstNode.yArray[2]>this.secondNode.yArray[2]?this.firstNode.yArray[2]:this.secondNode.yArray[2];\n        if(midMin>=this.leftMin&&midMin>=this.rightMin&&midMax<=this.leftMax&&midMax<=this.rightMax){\n            this.isOk=true;\n            return true\n        }else{\n            return false;\n        }\n    }\n    updateTwoNode(node1:TrendTree,node2:TrendTree){\n        this.firstNode=node1._rightChild!;\n        this.secondNode=node2._leftChild!;\n\n        if(node1._leftChild!.yArray[1]<this.leftMin){\n            this.leftMin=node1._leftChild!.yArray[1]\n        }\n        if(node1._leftChild!.yArray[2]>this.leftMax){\n            this.leftMax=node1._leftChild!.yArray[2]\n        }\n        if(node2._rightChild!.yArray[1]<this.rightMin){\n            this.rightMin=node2._rightChild!.yArray[1];\n        }\n        if(node2._rightChild!.yArray[2]>this.rightMax){\n            this.rightMax=node2._rightChild!.yArray[2]\n        }\n    }\n    lastLevelUpdateMinMax(){\n        this.tTwo=this.secondNode.yArray[0];\n        this.tOne=this.firstNode.yArray[3];\n        this.canUseT=true\n    }\n    updateLeftMinMax(p:TrendTree){\n        if(p.yArray[1]<this.leftMin){\n            this.leftMin=p.yArray[1]\n        }\n        if(p.yArray[2]>this.leftMax){\n            this.leftMax=p.yArray[2]\n        }\n    }\n    updateRighetMinMax(p:TrendTree){\n        if(p.yArray[1]<this.rightMin){\n            this.rightMin=p.yArray[1]\n        }\n        if(p.yArray[2]>this.rightMax){\n            this.rightMax=p.yArray[2]\n        }\n    }\n}","import axios from \"axios\";\nimport store, { ws } from \"../store\"\nimport { getUserCookie } from \"@/helper/util\";\nexport async function batchLoadDif(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.get(`postgres/line_chart/batchLevelDataProgressiveWavelet?table_name=${manager.dataName}&losedDataInfo[]=${losedDataInfo}`);\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n        }\n    }\n\n    return resultArray;\n}\nexport async function batchLoadDifWidthPost(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWavelet`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,//store.state.controlParams.currentTable,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n        line_type:store.state.controlParams.currentLineType\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n        }\n    }\n    return resultArray;\n}\n\nexport async function batchLoadDifWidthPostForMinMaxMiss(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWaveletMinMaxMiss`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,//store.state.controlParams.currentTable,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n        line_type:store.state.controlParams.currentLineType\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [0,result[2][i], result[3][i],0] });\n        }\n    }\n    return resultArray;\n}\nexport async function batchLoadDifWidthPostRawMinMax(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWaveletRawMinMax`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,//store.state.controlParams.currentTable,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n        }\n    }\n    return resultArray;\n}\nexport async function batchLoadDifWidthPost1(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWavelet1`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,//store.state.controlParams.currentTable,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n        }\n    }\n    return resultArray;\n}\nexport async function batchLoadDifWidthPost1MinMax(losedDataInfo: Array<Array<number>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLevelDataProgressiveWaveletMinMax`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [0,result[2][i], result[3][i],0]});\n        }\n    }\n    return resultArray;\n}\nexport async function loadDif(level: number, start: number, end: number) {\n\n    //@ts-ignore\n    const { data } = await axios.get(`postgres/line_chart/trendQueryProgressiveWavelet?table_name=${this.dataName}&current_level=${level}&start_time=${start}&end_time=${end}`);\n    const resultData = [];\n    for (let i = 0; i < data[0].length; i++) {\n        resultData.push([data[0][i], data[1][i], data[2][i], data[3][i]]);\n    }\n    return resultData;\n}\n\nexport async function batchLoadAllDifWidthPost(losedDataInfo: Array<Array<Array<number>>>,manager:any) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchAllLevelDataWaveletPostHandler`, {\n        table_name: manager.dataName.includes(\".\") ? manager.dataName.split(\".\")[1] : manager.dataName,//store.state.controlParams.currentTable,\n        losedDataInfo: JSON.stringify({ data: losedDataInfo }),\n    });\n    //console.log(data)\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l: manager.maxLevel - result[0][i], i: result[1][i], dif: [0, result[2][i], result[3][i], 0] });\n        }\n    }\n    resultArray.sort((a, b) => {\n        if (a.l !== b.l) {\n            return a.l - b.l\n        } else {\n            return a.i - b.i\n        }\n    })\n    return resultArray;\n}\n\nexport function batchLoadWithWs(losedDataInfo:Array<Array<number>>, dataName: string, url: string, maxLevel: number,tagName?:string){\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const sendData = {\n        url: url,\n        tn: dataName.includes(\".\") ? dataName.split(\".\")[1] : dataName,//store.state.controlParams.currentTable,\n        data: JSON.stringify({ data: losedDataInfo }),\n        tagName:tagName,\n    }\n    const startT = new Date().getTime()\n    return new Promise((resolve, reject) => {\n        ws.send(JSON.stringify(sendData))\n        ws.onmessage = (e) => {\n            // const reveiveData = e.data.toString();\n           //console.log(\"websocket load time:\",new Date().getTime()-startT)\n            //@ts-ignore\n            const result = JSON.parse(e.data)[\"data\"]\n            const resultArray = [];\n            if (result && result[0] && result[0].length > 0) {\n                for (let i = 0; i < result[0].length; i++) {\n                    resultArray.push({ l: maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n                }\n            }\n            resolve(resultArray)\n        }\n    })\n}\n\nexport function batchLoadWithWsForRawMinMax(losedDataInfo:Array<Array<number>>, dataName: string, url: string, maxLevel: number,tagName?:string){\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const sendData = {\n        url: url,\n        tn: dataName.includes(\".\") ? dataName.split(\".\")[1] : dataName,//store.state.controlParams.currentTable,\n        data: JSON.stringify({ data: losedDataInfo }),\n        tagName:tagName,\n    }\n    const startT = new Date().getTime()\n    return new Promise((resolve, reject) => {\n        ws.send(JSON.stringify(sendData))\n        ws.onmessage = (e) => {\n            // const reveiveData = e.data.toString();\n           //console.log(\"websocket load time:\",new Date().getTime()-startT)\n            //@ts-ignore\n            const result = JSON.parse(e.data)[\"data\"]\n            const resultArray = [];\n            if (result && result[0] && result[0].length > 0) {\n                for (let i = 0; i < result[0].length; i++) {\n                    resultArray.push({ l: maxLevel - result[0][i], i: result[1][i], dif: [result[2][i], result[3][i], result[4][i], result[5][i]] });\n                }\n            }\n            resolve(resultArray)\n        }\n    })\n}\nexport function batchLoadMinMaxMissWithWs(losedDataInfo:Array<Array<number>>, dataName: string, url: string, maxLevel: number,tagName?:string){\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const sendData = {\n        url: url,\n        tn: dataName.includes(\".\") ? dataName.split(\".\")[1] : dataName,//store.state.controlParams.currentTable,\n        data: JSON.stringify({ data: losedDataInfo }),\n        tagName:tagName,\n        line_type:store.state.controlParams.currentLineType,\n        mode:store.state.controlParams.currentMode,\n        user_cookie:getUserCookie()\n    }\n    const startT = new Date().getTime()\n    return new Promise((resolve, reject) => {\n        ws.send(JSON.stringify(sendData))\n        ws.onmessage = (e) => {\n            // const reveiveData = e.data.toString();\n           //console.log(\"websocket load time:\",new Date().getTime()-startT)\n            //@ts-ignore\n            const result = JSON.parse(e.data)[\"data\"]\n            const resultArray = [];\n            if (result && result[0] && result[0].length > 0) {\n                for (let i = 0; i < result[0].length; i++) {\n                    resultArray.push({ l: result[0][i], i: result[1][i], dif: [0, result[2][i], result[3][i], 0] });\n                }\n            }\n            resolve(resultArray)\n        }\n    })\n}\n\nexport async function batchLoadMinMaxMissWithPostForMultiLineType(losedDataInfo:Array<Array<number>>, dataName: string, url: string, maxLevel: number,tagName?:string) {\n    if (losedDataInfo.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/batchLoadMinMaxMissWithPostForMultiLineType`, {\n        table_name: dataName.includes(\".\") ? dataName.split(\".\")[1] : dataName,\n        losedDataInfo:  {data:losedDataInfo} ,\n        tagName:tagName,\n        line_type:store.state.controlParams.currentLineType,\n        mode:store.state.controlParams.currentMode\n    });\n    const result = data.data;\n    const resultArray = [];\n    if (result && result[0] && result[0].length > 0) {\n        for (let i = 0; i < result[0].length; i++) {\n            resultArray.push({ l:  result[0][i], i: result[1][i], dif: [0,result[2][i], result[3][i],0] });\n        }\n    }\n    return resultArray;\n}","import {batchLoadDifWidthPostRawMinMax, loadDif, batchLoadDifWidthPost, batchLoadDifWidthPost1, batchLoadDif,batchLoadMinMaxMissWithWs, batchLoadAllDifWidthPost, batchLoadDifWidthPost1MinMax, batchLoadWithWs, batchLoadDifWidthPostForMinMaxMiss, batchLoadMinMaxMissWithPostForMultiLineType } from \"./load_data\"\nimport LevelIndexObj from \"../model/level-index-obj\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport store, { pushTimeArray } from \"@/store\";\n\n\nlet nodeNum: Array<number> = [];\n\nexport async function batchLoadDataForRangeLevel1(losedRange: Array<Array<number>>, manager: any) {\n    const difVals = await batchLoadDifWidthPost1(losedRange, manager);\n\n    let count = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0]].getTreeNodeStartIndex(losedRange[i][1]);\n        let p = startNode;\n        const newTreeNode = [];\n        for (let j = losedRange[i][1]; j <= losedRange[i][2]; j++) {\n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                yArray1[0] = p.yArray[0];\n                yArray2[0] = p.yArray[0] - p.difference![0];\n                yArray1[3] = p.yArray[3] + p.difference![3];\n                yArray2[3] = p.yArray[3];\n                if (p.difference![1] < 0) {\n                    yArray1[1] = p.yArray[1];\n                    yArray2[1] = p.yArray[1] - p.difference![1];\n                } else {\n                    yArray1[1] = p.yArray[1] + p.difference![1];\n                    yArray2[1] = p.yArray[1]\n                }\n                if (p.difference![2] < 0) {\n                    yArray1[2] = p.yArray[2] + p.difference![2];\n                    yArray2[2] = p.yArray[2];\n                } else {\n                    yArray1[2] = p.yArray[2];\n                    yArray2[2] = p.yArray[2] - p.difference![2];\n                }\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                manager.cacheMap.set(firstNode.index, firstNode);\n                manager.cacheMap.set(secondNode.index, secondNode);\n\n                p = p.nextSibling;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n\n        }\n        if (manager.levelIndexObjs[losedRange[i][0] + 1]) {\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0] + 1] = new LevelIndexObj(losedRange[i][0] + 1, false);\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n}\n\n\nexport async function batchLoadDataForRangeLevel(losedRange: Array<Array<number>>, manager: any) {\n    const difVals = await batchLoadDifWidthPost(losedRange, manager);\n    \n    let count = 0;\n    let nodeNum = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n        let p = startNode;\n        const newTreeNode = [];\n        for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                yArray1[0] = p.yArray[0];\n                yArray2[0] = p.yArray[0] - p.difference![0];\n                yArray1[3] = p.yArray[3] + p.difference![3];\n                yArray2[3] = p.yArray[3];\n                if (p.difference![1] < 0) {\n                    yArray1[1] = p.yArray[1];\n                    yArray2[1] = p.yArray[1] - p.difference![1];\n                } else {\n                    yArray1[1] = p.yArray[1] + p.difference![1];\n                    yArray2[1] = p.yArray[1]\n                }\n                if (p.difference![2] < 0) {\n                    yArray1[2] = p.yArray[2] + p.difference![2];\n                    yArray2[2] = p.yArray[2];\n                } else {\n                    yArray1[2] = p.yArray[2];\n                    yArray2[2] = p.yArray[2] - p.difference![2];\n                }\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                manager.cacheMap.set(firstNode.index, firstNode);\n                manager.cacheMap.set(secondNode.index, secondNode);\n                nodeNum += 2\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                p = p.nextSibling;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n            const k1 = newTreeNode[j + 1].yArray[2] - newTreeNode[j].yArray[1];\n            const k2 = newTreeNode[j + 1].yArray[1] - newTreeNode[j].yArray[2];\n            newTreeNode[j].trendRange = k1 < k2 ? [newTreeNode[j + 1].yArray[2], newTreeNode[j].yArray[1], newTreeNode[j + 1].yArray[1], newTreeNode[j].yArray[2]] : [newTreeNode[j + 1].yArray[1], newTreeNode[j].yArray[2], newTreeNode[j + 1].yArray[2], newTreeNode[j].yArray[1]];\n        }\n        if (manager.levelIndexObjs[losedRange[i][0]]) {\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0]] = new LevelIndexObj(losedRange[i][0], false);\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n        // manager.updateDataCacheForRange(newTreeNode[0].level, newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index)\n    }\n    manager.addNodeNum(nodeNum);\n}\n\nexport async function batchLoadDataForRangeLevelRawMinMax(losedRange: Array<Array<number>>, manager: any) {\n    const difVals = await batchLoadDifWidthPostRawMinMax(losedRange, manager);\n   // debugger\n    let count = 0;\n    let nodeNum = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        //debugger\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n        let p = startNode;\n        const newTreeNode = [];\n        for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n            if (p?.index === j && 2*j === difVals[count].i && p.level+1 === difVals[count].l) {\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                //@ts-ignore\n                const yArray1: [number, number, number, number] = difVals[count].dif\n                //@ts-ignore\n                const yArray2: [number, number, number, number] = difVals[count+1].dif\n               \n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n               \n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                p = p.nextSibling;\n                count+=2;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n        }\n        if (manager.levelIndexObjs[losedRange[i][0]]) {\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0]] = new LevelIndexObj(losedRange[i][0], false);\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n        // manager.updateDataCacheForRange(newTreeNode[0].level, newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index)\n    }\n    manager.addNodeNum(nodeNum);\n}\n\n\nexport async function loadDataForRangeLevel(losedRange: Array<Array<number>>, manager: any) {\n    if (losedRange.length <= 0) {\n        return\n    }\n    let nodeNum = 0\n    //await manager.batchLoadDataForRangeLevel(losedRange)\n    for (let i = losedRange.length - 1; i >= 0; i--) {\n        const levelRange = losedRange[i];\n        const difVal = await loadDif(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2), Math.floor(losedRange[i][2] / 2));\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n        let p = startNode;\n        const newTreeNode = [];\n        let count = 0;\n        for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n            if (p?.index === j) {\n                //@ts-ignore\n                p.difference = difVal[count];\n                const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                yArray1[0] = p.yArray[0];\n                yArray2[0] = p.yArray[0] - p.difference![0];\n                yArray1[3] = p.yArray[3] + p.difference![3];\n                yArray2[3] = p.yArray[3];\n                if (p.difference![1] < 0) {\n                    yArray1[1] = p.yArray[1];\n                    yArray2[1] = p.yArray[1] - p.difference![1];\n                } else {\n                    yArray1[1] = p.yArray[1] + p.difference![1];\n                    yArray2[1] = p.yArray[1]\n                }\n                if (p.difference![2] < 0) {\n                    yArray1[2] = p.yArray[2] + p.difference![2];\n                    yArray2[2] = p.yArray[2];\n                } else {\n                    yArray1[2] = p.yArray[2];\n                    yArray2[2] = p.yArray[2] - p.difference![2];\n                }\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                manager.cacheMap.set(firstNode.index, firstNode);\n                manager.cacheMap.set(secondNode.index, secondNode);\n                nodeNum += 2\n                p = p.nextSibling;\n                if (p === null) {\n                    break;\n                }\n                count++;\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            const k1 = newTreeNode[j + 1].yArray[2] - newTreeNode[j].yArray[1];\n            const k2 = newTreeNode[j + 1].yArray[1] - newTreeNode[j].yArray[2];\n            if (k1 < k2) {\n                debugger\n            }\n            newTreeNode[j].trendRange = k1 < k2 ? [newTreeNode[j + 1].yArray[2], newTreeNode[j].yArray[1], newTreeNode[j + 1].yArray[1], newTreeNode[j].yArray[2]] : [newTreeNode[j + 1].yArray[1], newTreeNode[j].yArray[2], newTreeNode[j + 1].yArray[2], newTreeNode[j].yArray[1]];\n        }\n        if (manager.levelIndexObjs[losedRange[i][0]]) {\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0]] = new LevelIndexObj(losedRange[i][0], false);\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n    manager.addNodeNum(nodeNum)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet currentNum = 0;\nlet currentTag = \"\"\nexport async function batchLoadDataForRangeLevel1WS(losedRange: Array<Array<number>>, manager: any, tagName?: string) {\n    if (tagName === \"empty\") {\n        nodeNum.push(currentNum);\n        if(nodeNum.length==6){\n            \n            //pushTimeArray(nodeNum)\n            nodeNum=[]\n        }\n        currentNum = 0;\n        console.log(\"load node nums:\", nodeNum);\n        return\n    }\n    const difVals: Array<{ l: number, i: number }> = await batchLoadWithWs(losedRange, manager.dataName, \"level_load_data\", manager.maxLevel, tagName) as Array<{ l: number, i: number }>;\n    if (currentTag === tagName) {\n        currentNum += difVals.length;\n    } else {\n        currentTag = tagName!;\n        currentNum += difVals.length;\n    }\n\n    let count = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0]].getTreeNodeStartIndex(losedRange[i][1]);\n        let p = startNode;\n        const newTreeNode = [];\n        for (let j = losedRange[i][1]; j <= losedRange[i][2]; j++) {\n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                yArray1[0] = p.yArray[0];\n                yArray2[0] = p.yArray[0] - p.difference![0];\n                yArray1[3] = p.yArray[3] + p.difference![3];\n                yArray2[3] = p.yArray[3];\n                if (p.difference![1] < 0) {\n                    yArray1[1] = p.yArray[1];\n                    yArray2[1] = p.yArray[1] - p.difference![1];\n                } else {\n                    yArray1[1] = p.yArray[1] + p.difference![1];\n                    yArray2[1] = p.yArray[1]\n                }\n                if (p.difference![2] < 0) {\n                    yArray1[2] = p.yArray[2] + p.difference![2];\n                    yArray2[2] = p.yArray[2];\n                } else {\n                    yArray1[2] = p.yArray[2];\n                    yArray2[2] = p.yArray[2] - p.difference![2];\n                }\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                manager.lruCache.set(firstNode.level+\"_\"+firstNode.index,firstNode);\n                manager.lruCache.set(secondNode.level+\"_\"+secondNode.index,secondNode);\n\n                p = p.nextSibling;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n\n        }\n        if (manager.levelIndexObjs[losedRange[i][0] + 1]) {\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0] + 1] = new LevelIndexObj(losedRange[i][0] + 1, false);\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n}\n\n\nexport async function batchLoadDataForRangeLevel1MinMaxMiss(losedRange: Array<Array<number>>, manager: any, tagName?: string){\n    let difVals: Array<{ l: number, i: number, dif?: Array<number> }>\n    if(store.state.controlParams.currentLineType==='Single'){\n        difVals= await batchLoadMinMaxMissWithWs(losedRange, manager.dataName, \"level_load_data_min_max_miss\", manager.maxLevel, tagName) as Array<{ l: number, i: number }>;\n    }else{\n        difVals= await batchLoadMinMaxMissWithPostForMultiLineType(losedRange, manager.dataName, \"level_load_data_min_max_miss\", manager.maxLevel, tagName)\n    }\n\n    \n    let count = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0]].getTreeNodeStartIndex(losedRange[i][1]);\n        let p: TrendTree = startNode;\n        const newTreeNode = [];\n        for (let j = losedRange[i][1]; j <= losedRange[i][2];j++) {\n        \n           \n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                let dif = difVals[count].dif!;\n                let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n                if (dif[1] === null && dif[2] === null) {\n                    curNodeType = \"NULL\";\n                } else if (dif[1] === null) {\n                    curNodeType = \"LEFTNULL\"\n                    p.gapFlag=\"L\"\n                } else if (dif[2] === null) {\n                    curNodeType = \"RIGHTNULL\";\n                    p.gapFlag=\"R\"\n                }\n                if(curNodeType!==\"O\"){\n                    p.nodeType = curNodeType\n                }\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n                const yArray2: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n                if (curNodeType === 'O') {\n                    \n                   \n                    if (p.difference![1] < 0) {\n                        yArray1[1] = p.yArray[1];\n                        yArray2[1] = p.yArray[1] - p.difference![1];\n                    } else {\n                        yArray1[1] = p.yArray[1] + p.difference![1];\n                        yArray2[1] = p.yArray[1]\n                    }\n                    if (p.difference![2] < 0) {\n                        yArray1[2] = p.yArray[2] + p.difference![2];\n                        yArray2[2] = p.yArray[2];\n                    } else {\n                        yArray1[2] = p.yArray[2];\n                        yArray2[2] = p.yArray[2] - p.difference![2];\n                    }\n                } else if (curNodeType == \"LEFTNULL\") {\n                   \n                    yArray2[1] = p.yArray[1];\n                    yArray2[2] = p.yArray[2];\n                  \n                } else if (curNodeType == \"RIGHTNULL\") {\n                 \n                    yArray1[1] = p.yArray[1];\n                    yArray1[2] = p.yArray[2];\n                  \n                } \n\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                if (p.nodeType === 'LEFTNULL' || p.nodeType === 'NULL') {\n                    firstNode.nodeType = 'NULL';\n                }\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                if (p.nodeType === 'RIGHTNULL' || p.nodeType == 'NULL') {\n                    secondNode.nodeType = 'NULL';\n                }\n                // if(firstNode.nodeType==='NULL'){\n                //     secondNode.gapFlag='L'\n                // }\n                // if(secondNode.nodeType==='NULL'){\n                //     firstNode.gapFlag='R';\n                // }\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                manager.lruCache.set(firstNode.level+\"_\"+firstNode.index,firstNode);\n                manager.lruCache.set(secondNode.level+\"_\"+secondNode.index,secondNode);\n                p = p.nextSibling!;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n\n        }\n        if (manager.levelIndexObjs[losedRange[i][0] + 1]) {\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0] + 1] = new LevelIndexObj(losedRange[i][0] + 1, false);\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n}\nexport async function batchLoadDataForRangeLevel2MinMaxMiss(losedRange: Array<Array<number>>, manager: any, tagName?: string){\n    let difVals: Array<{ l: number, i: number, dif?: Array<number> }>\n    if(store.state.controlParams.currentLineType==='Single'){\n        difVals= await batchLoadMinMaxMissWithWs(losedRange, manager.dataName, \"level_load_data_min_max_miss\", manager.maxLevel, tagName) as Array<{ l: number, i: number }>;\n    }else{\n        difVals= await batchLoadMinMaxMissWithPostForMultiLineType(losedRange, manager.dataName, \"level_load_data_min_max_miss\", manager.maxLevel, tagName)\n    }\n\n    \n    let count = 0;\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0]].getTreeNodeStartIndex(losedRange[i][1]);\n        let p: TrendTree = startNode;\n        const newTreeNode = [];\n        for (let j = losedRange[i][1]; j <= losedRange[i][2];j++) {\n            if(p.nodeType===\"NULL\"){\n                p=p.nextSibling!;\n                //debugger\n                continue\n            }\n            if(p?.index !== j || j !== difVals[count].i){\n                continue\n            }\n           \n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                let dif = difVals[count].dif!;\n                let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n                if (dif[1] === null && dif[2] === null) {\n                    curNodeType = \"NULL\";\n                } else if (dif[1] === null) {\n                    curNodeType = \"LEFTNULL\"\n                    p.gapFlag='L'\n                } else if (dif[2] === null) {\n                    curNodeType = \"RIGHTNULL\";\n                    p.gapFlag='R'\n                }\n                if(curNodeType!==\"O\"){\n                    p.nodeType = curNodeType\n                }\n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n                const yArray2: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n                if (curNodeType === 'O') {\n                    \n                   \n                    if (p.difference![1] < 0) {\n                        yArray1[1] = p.yArray[1];\n                        yArray2[1] = p.yArray[1] - p.difference![1];\n                    } else {\n                        yArray1[1] = p.yArray[1] + p.difference![1];\n                        yArray2[1] = p.yArray[1]\n                    }\n                    if (p.difference![2] < 0) {\n                        yArray1[2] = p.yArray[2] + p.difference![2];\n                        yArray2[2] = p.yArray[2];\n                    } else {\n                        yArray1[2] = p.yArray[2];\n                        yArray2[2] = p.yArray[2] - p.difference![2];\n                    }\n                } else if (curNodeType == \"LEFTNULL\") {\n                   \n                    yArray2[1] = p.yArray[1];\n                    yArray2[2] = p.yArray[2];\n                  \n                } else if (curNodeType == \"RIGHTNULL\") {\n                 \n                    yArray1[1] = p.yArray[1];\n                    yArray1[2] = p.yArray[2];\n                  \n                } \n\n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                if (p.nodeType === 'LEFTNULL' || p.nodeType === 'NULL') {\n                    firstNode.nodeType = 'NULL';\n                }\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                if (p.nodeType === 'RIGHTNULL' || p.nodeType == 'NULL') {\n                    secondNode.nodeType = 'NULL';\n                }\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                manager.lruCache.set(firstNode.level+\"_\"+firstNode.index,firstNode);\n                manager.lruCache.set(secondNode.level+\"_\"+secondNode.index,secondNode);\n                p = p.nextSibling!;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                console.error(\"sibling index error\")\n                //throw new Error(\"sibling index error\");\n            }\n\n        }\n        if (manager.levelIndexObjs[losedRange[i][0] + 1]) {\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0] + 1] = new LevelIndexObj(losedRange[i][0] + 1, false);\n            manager.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n}\nexport async function batchLoadDataForRangeLevelForMinMaxMiss(losedRange: Array<Array<number>>, manager: any) {\n    const difVals = await batchLoadDifWidthPostForMinMaxMiss(losedRange, manager);\n    let count = 0;\n    let nodeNum = 0;\n    debugger\n    for (let i = 0; i < losedRange.length; i++) {\n        const levelRange = losedRange[i];\n\n        const startNode = manager.levelIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n        let p = startNode;\n        const newTreeNode = [];\n        for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n            if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                let dif = difVals[count].dif!;\n                let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n                if (dif[1] === null && dif[2] === null) {\n                    throw new Error(\"data error\")\n                   // curNodeType = \"NULL\";\n                } else if (dif[1] === null) {\n                    curNodeType = \"LEFTNULL\"\n                } else if (dif[2] === null) {\n                    curNodeType = \"RIGHTNULL\";\n                }\n                if(curNodeType!==\"O\"){\n                    p.nodeType = curNodeType\n                }\n               \n                //@ts-ignore\n                p.difference = difVals[count].dif;\n                const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                if(curNodeType==='O'){\n                    if (p.difference![1] < 0) {\n                        yArray1[1] = p.yArray[1];\n                        yArray2[1] = p.yArray[1] - p.difference![1];\n                    } else {\n                        yArray1[1] = p.yArray[1] + p.difference![1];\n                        yArray2[1] = p.yArray[1]\n                    }\n                    if (p.difference![2] < 0) {\n                        yArray1[2] = p.yArray[2] + p.difference![2];\n                        yArray2[2] = p.yArray[2];\n                    } else {\n                        yArray1[2] = p.yArray[2];\n                        yArray2[2] = p.yArray[2] - p.difference![2];\n                    }\n                }else if(curNodeType===\"LEFTNULL\"){\n                    yArray2[1] = p.yArray[1];\n                    yArray2[2] = p.yArray[2];\n                }else if(curNodeType===\"RIGHTNULL\"){\n                    yArray1[1] = p.yArray[1];\n                    yArray1[2] = p.yArray[2];\n                }\n               \n                const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                if (p.nodeType === 'LEFTNULL' || p.nodeType === 'NULL') {\n                    firstNode.nodeType = 'NULL';\n                }\n                const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                if (p.nodeType === 'RIGHTNULL' || p.nodeType == 'NULL') {\n                    secondNode.nodeType = 'NULL';\n                }\n                manager.cacheMap.set(firstNode.index, firstNode);\n                manager.cacheMap.set(secondNode.index, secondNode);\n                nodeNum += 2\n                newTreeNode.push(firstNode);\n                newTreeNode.push(secondNode);\n                p = p.nextSibling;\n                count++;\n                if (p === null || count >= difVals.length) {\n                    break;\n                }\n\n            } else {\n                console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                console.log(\"lose range:\", losedRange, p, p?.index, j);\n                console.log(manager.levelIndexObjs);\n                debugger\n                throw new Error(\"dif not match node\");\n            }\n        }\n        for (let j = 0; j < newTreeNode.length - 1; j++) {\n            newTreeNode[j].nextSibling = newTreeNode[j + 1];\n            newTreeNode[j + 1].previousSibling = newTreeNode[j];\n            if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                throw new Error(\"sibling index error\");\n            }\n        }\n        debugger\n        if (manager.levelIndexObjs[losedRange[i][0]]) {\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        } else {\n            manager.levelIndexObjs[losedRange[i][0]] = new LevelIndexObj(losedRange[i][0], false);\n            manager.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n        }\n    }\n}\n\n","import LevelIndexObj from \"./level-index-obj\";\nimport axios from \"axios\";\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport store, { pushTimeArray } from \"@/store\";\nimport * as d3 from 'd3';\nimport { canCut, checkSetType, computeLosedDataRange, computeLosedDataRangeV1, computeTimeSE, deleteSavedNodeIndex, computeSemanticColumn, convertWaveletToRawTableName, computeLosedDataRangeV1ForRawMinMax } from \"@/helper/util\";\nimport { NoUniformColObj } from \"./non-uniform-col-obj\";\nimport { UniformGapObj } from \"./uniform-gap-obj\";\nimport { loadDataForRangeLevel, batchLoadDataForRangeLevelRawMinMax, batchLoadDataForRangeLevel, batchLoadDataForRangeLevel1, batchLoadDataForRangeLevel2MinMaxMiss, batchLoadDataForRangeLevel1MinMaxMiss, batchLoadDataForRangeLevel1WS, batchLoadDataForRangeLevelForMinMaxMiss } from \"../api/build_tree\"\n\n\nimport Cache from \"lru-cache\"\nimport { getFlag } from \"@/global_state/state\";\n\n\n\n\nlet allTimes: any = []\nlet allSumTimes: any = []\n\nexport default class LevelDataManager {\n    levelIndexObjs: Array<LevelIndexObj>\n    maxLevel: number\n    realDataRowNum: number\n    dataName: string\n    md5Num?: number\n    isShow: boolean\n    columnInfos: Array<NoUniformColObj> | null\n    curNodeNum: number\n    dataCache: Array<TrendTree>\n    cacheMap: Map<number, TrendTree>\n    cacheHead: TrendTree | null\n    cacheTail: TrendTree | null\n    maxCacheNodeNum: number\n    lruCache: any\n    deleteQueue: Array<TrendTree>\n    isIntering: boolean\n    isEvicting: boolean\n    constructor(levelIndexObjs: Array<LevelIndexObj>, dataName: string, maxLevel?: number) {\n        this.levelIndexObjs = levelIndexObjs;\n        this.maxLevel = maxLevel ? maxLevel : store.state.controlParams.tableMaxLevel;\n        this.realDataRowNum = 2 ** (maxLevel ? maxLevel : store.state.controlParams.tableMaxLevel);\n        this.dataName = dataName;\n        this.isShow = true;\n        this.columnInfos = null;\n        this.curNodeNum = 0;\n        this.dataCache = new Array<TrendTree>();\n        this.cacheMap = new Map<number, TrendTree>();\n        this.cacheHead = null;\n        this.cacheTail = null;\n        this.maxCacheNodeNum = 100000\n        this.lruCache = null;\n        this.initCache();\n        this.deleteQueue = [];\n        this.isIntering = false;\n        this.isEvicting = false\n    }\n\n\n    async getDataMockServer(info: { level: number, start: number, end: number, offset: number, width: number }) {\n        const internalLevel = this.maxLevel - info.level;\n        const outterLevel = info.level;\n        const nextLevel = internalLevel;\n        if (nextLevel < 1) {\n            throw new Error(\"level out of range\")\n        }\n        const width = 2 ** Math.ceil(Math.log2(info.width));\n        let offset = info.offset\n\n        let end = info.end;\n        let start = info.start;\n        let focusPoint = start + offset;\n        let nextStart = focusPoint - width / 4;\n        let nextEnd = focusPoint + width / 4;\n\n\n        if (nextStart <= start) {\n            nextStart = start;\n            nextEnd = start + width / 2 - 1;\n        }\n        if (nextEnd >= end) {\n            nextEnd = end;\n            nextStart = end - width / 2 + 1;\n        }\n        const data = await this.getData(outterLevel + 1, nextStart * 2, nextStart * 2 + width - 1);\n        return [[offset, 2 * nextStart], data];\n    }\n    async getData(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return []\n        }\n        let lastFullLevel = 2;\n        let nextStart = start;\n        let nextEnd = end;\n        for (let i = level - 1; i > 1; i--) {\n            nextStart = Math.floor(nextStart / 2);\n            nextEnd = Math.floor(nextEnd / 2);\n            if (this.levelIndexObjs[i] && this.levelIndexObjs[i].isFull) {\n                lastFullLevel = i;\n                break;\n            }\n        }\n        for (let i = lastFullLevel + 1; i <= level; i++) {\n            nextStart = nextStart * 2;\n            nextEnd = nextEnd * 2 + 1;\n            const losedDataInfo = this.checkLoadedDataInSingalLevel([[i, nextStart, nextEnd]]);\n            //debugger\n            await batchLoadDataForRangeLevel(losedDataInfo, this);\n        }\n        if (this.levelIndexObjs[level]) {\n            //更新缓存\n            // this.updateDataCacheForRange(level, start, end)\n            if (noRet) {\n                return { data: [], start: 0, end: 0, l: 0 }\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n\n        } else {\n            return { data: [], start: 0, end: 0, l: 0 }\n            //throw new Error(\"cannot get data from data manager\");\n        }\n    }\n    async getDataMinMaxMiss(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return []\n        }\n        let lastFullLevel = 2;\n        let nextStart = start;\n        let nextEnd = end;\n        for (let i = level - 1; i > 1; i--) {\n            nextStart = Math.floor(nextStart / 2);\n            nextEnd = Math.floor(nextEnd / 2);\n            if (this.levelIndexObjs[i] && this.levelIndexObjs[i].isFull) {\n                lastFullLevel = i;\n                break;\n            }\n        }\n\n        for (let i = lastFullLevel + 1; i <= level; i++) {\n            nextStart = nextStart * 2;\n            nextEnd = nextEnd * 2 + 1;\n            const losedDataInfo = this.checkLoadedDataInSingalLevel([[i, nextStart, nextEnd]]);\n            const processLosedDataInfo = [];\n            for (let j = 0; j < losedDataInfo.length; j++) {\n                const tempInfo = losedDataInfo[j]\n                processLosedDataInfo.push([tempInfo[0] - 1, Math.floor(tempInfo[1] / 2), Math.floor(tempInfo[2] / 2)])\n            }\n\n            await batchLoadDataForRangeLevel2MinMaxMiss(processLosedDataInfo, this);\n        }\n\n        if (this.levelIndexObjs[level]) {\n            //更新缓存\n            // this.updateDataCacheForRange(level, start, end)\n            if (noRet) {\n                return { data: [], start: 0, end: 0, l: 0 }\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n\n        } else {\n            return { data: [], start: 0, end: 0, l: 0 }\n            //throw new Error(\"cannot get data from data manager\");\n        }\n    }\n\n    async getDataRawMinMax(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return []\n        }\n        let lastFullLevel = 2;\n        let nextStart = start;\n        let nextEnd = end;\n        //debugger\n        for (let i = level - 1; i > 1; i--) {\n            nextStart = Math.floor(nextStart / 2);\n            nextEnd = Math.floor(nextEnd / 2);\n            if (this.levelIndexObjs[i] && this.levelIndexObjs[i].isFull) {\n                lastFullLevel = i;\n                break;\n            }\n        }\n        for (let i = lastFullLevel + 1; i <= level; i++) {\n            nextStart = nextStart * 2;\n            nextEnd = nextEnd * 2 + 1;\n            const losedDataInfo = this.checkLoadedDataInSingalLevel([[i, nextStart, nextEnd]]);\n            //debugger\n            await batchLoadDataForRangeLevelRawMinMax(losedDataInfo, this);\n        }\n        if (this.levelIndexObjs[level]) {\n            //更新缓存\n            // this.updateDataCacheForRange(level, start, end)\n            if (noRet) {\n                return { data: [], start: 0, end: 0, l: 0 }\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n\n        } else {\n            return { data: [], start: 0, end: 0, l: 0 }\n            //throw new Error(\"cannot get data from data manager\");\n        }\n    }\n    async getDataV1(level: number, start: number, end: number, noRet?: boolean) {\n        if (level > this.maxLevel) {\n            return [];\n        }\n        if (this.levelIndexObjs[level]) {\n\n            const hasData = this.levelIndexObjs[level].hasDataForRange(start, end);\n            if (hasData.has) {\n                return this.levelIndexObjs[level].getDataByIndex(start, end);\n            } else {\n                const losedRange = hasData.range;\n\n                for (let i = 0; i < losedRange.length; i++) {\n                    let l = level - 1;\n                    const losedDataOtherLevel = [];\n                    for (; l >= 0; l--) {\n                        if (this.levelIndexObjs[l].isFull) {\n                            break;\n                        }\n                        const levelHasData = this.levelIndexObjs[l].hasDataForRange(Math.floor(losedRange[i][0] / (2 ** (level - l))), Math.floor(losedRange[i][1] / (2 ** (level - l))));\n                        if (levelHasData.has) {\n                            break;\n                        }\n                        losedDataOtherLevel.push([l, Math.floor(losedRange[i][0] / (2 ** (level - l))), Math.floor(losedRange[i][1] / (2 ** (level - l)))]);\n                    }\n                    await loadDataForRangeLevel(losedDataOtherLevel, this);\n                }\n                losedRange.forEach(range => {\n                    range.unshift(level);\n                });\n                await loadDataForRangeLevel(losedRange, this);\n            }\n        } else {\n            let l = level - 1;\n            const losedDataOtherLevel = [];\n            for (; l >= 0; l--) {\n                if (this.levelIndexObjs[l] && this.levelIndexObjs[l].isFull) {\n                    break;\n                }\n                if (this.levelIndexObjs[l]) {\n                    const levelHasData = this.levelIndexObjs[l].hasDataForRange(Math.floor(start / (2 ** (level - l))), Math.floor(end / (2 ** (level - l))));\n                    if (levelHasData.has) {\n                        break;\n                    }\n                }\n                losedDataOtherLevel.push([l, Math.floor(start / (2 ** (level - l))), Math.floor(end / (2 ** (level - l)))]);\n            }\n            losedDataOtherLevel.unshift([level, start, end]);\n            await loadDataForRangeLevel(losedDataOtherLevel, this);\n        }\n        if (this.levelIndexObjs[level]) {\n            if (noRet) {\n                return []\n            } else {\n                if (this.dataName === 'sensor8') {\n                    const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                    if (level >= this.maxLevel - extraDataLevel) {\n                        const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                        const fakeRowNum = 2 ** curExtraLevel;\n                        if (end >= 2 ** level - fakeRowNum) {\n                            end = 2 ** level - fakeRowNum - 1;\n                        }\n                    }\n                    let lastIndex = this.realDataRowNum - 1;\n                    for (let i = this.maxLevel; i >= level; i--) {\n                        lastIndex = Math.floor(lastIndex / 2);\n                    }\n                    if (end < start) {\n                        return [];\n                    }\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                } else {\n                    return this.levelIndexObjs[level].getDataByIndex(start, end);\n                }\n            }\n        } else {\n            throw new Error(\"cannot get data from data manager\");\n        }\n    }\n    getLoadedData(level: number, start: number, end: number) {\n        if (this.levelIndexObjs[level]) {\n            if (this.dataName === 'sensor8') {\n                const extraDataLevel = Math.ceil(Math.log2(2 ** this.maxLevel - this.realDataRowNum));\n                if (level >= this.maxLevel - extraDataLevel) {\n                    const curExtraLevel = level - (this.maxLevel - extraDataLevel);\n                    const fakeRowNum = 2 ** curExtraLevel;\n                    if (end >= 2 ** level - fakeRowNum) {\n                        end = 2 ** level - fakeRowNum - 1;\n                    }\n                }\n                if (end < start) {\n                    return [];\n                }\n                return this.levelIndexObjs[level].getDataByIndex(start, end);\n            } else {\n                return this.levelIndexObjs[level].getDataByIndex(start, end);\n            }\n\n        } else {\n            throw new Error(\"cannot get data from data manager\");\n        }\n    }\n\n\n\n    checkMonotonicity(nonUniformColObjs: Array<NoUniformColObj>, preIndexArray: Array<number>, needLoadDifNodes: Array<TrendTree>) {\n        for (let i = 0; i < needLoadDifNodes.length; i++) {\n            const first = needLoadDifNodes[i].yArray[0];\n            const minV = needLoadDifNodes[i].yArray[1];\n            const maxV = needLoadDifNodes[i].yArray[2];\n            const last = needLoadDifNodes[i].yArray[3];\n            const pL = needLoadDifNodes[i].level;\n            const pTRange = (2 ** this.maxLevel) / (2 ** pL);\n            const pTimeS = needLoadDifNodes[i].index * pTRange;\n            const pTimeE = pTRange + pTimeS - 1;\n            if ((first === minV && last === maxV) || (first === maxV && last === minV)) {\n                const k = (last - first) / (pTimeE - pTimeS);\n                const b = first - k * pTimeS;\n                nonUniformColObjs[preIndexArray[i]].mergeLast(k, b);\n                nonUniformColObjs[preIndexArray[i] + 1].mergeFirst(k, b);\n                preIndexArray.splice(i, 1);\n                needLoadDifNodes.splice(i, 1);\n            }\n        }\n    }\n    constructTreeForBatchLoad1(losedRange: Array<Array<number>>, difVals: Array<{ l: number, i: number, dif: Array<number> }>) {\n        let count = 0;\n        for (let i = 0; i < losedRange.length; i++) {\n            const levelRange = losedRange[i];\n\n            const startNode = this.levelIndexObjs[losedRange[i][0]].getTreeNodeStartIndex(losedRange[i][1]);\n            let p = startNode;\n            const newTreeNode = [];\n            for (let j = losedRange[i][1]; j <= losedRange[i][2]; j++) {\n                if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                    //@ts-ignore\n                    p.difference = difVals[count].dif;\n                    const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                    const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                    yArray1[0] = p.yArray[0];\n                    yArray2[0] = p.yArray[0] - p.difference![0];\n                    yArray1[3] = p.yArray[3] + p.difference![3];\n                    yArray2[3] = p.yArray[3];\n                    if (p.difference![1] < 0) {\n                        yArray1[1] = p.yArray[1];\n                        yArray2[1] = p.yArray[1] - p.difference![1];\n                    } else {\n                        yArray1[1] = p.yArray[1] + p.difference![1];\n                        yArray2[1] = p.yArray[1]\n                    }\n                    if (p.difference![2] < 0) {\n                        yArray1[2] = p.yArray[2] + p.difference![2];\n                        yArray2[2] = p.yArray[2];\n                    } else {\n                        yArray1[2] = p.yArray[2];\n                        yArray2[2] = p.yArray[2] - p.difference![2];\n                    }\n                    const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                    const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                    newTreeNode.push(firstNode);\n                    newTreeNode.push(secondNode);\n                    p = p.nextSibling;\n                    count++;\n                    if (p === null || count >= difVals.length) {\n                        break;\n                    }\n\n                } else {\n                    console.log(losedRange[i][0], losedRange[i][1])\n                    console.log(\"lose range:\", losedRange, p, p?.index, j);\n                    console.log(this.levelIndexObjs);\n                    debugger\n                    throw new Error(\"dif not match node\");\n                }\n            }\n            for (let j = 0; j < newTreeNode.length - 1; j++) {\n                newTreeNode[j].nextSibling = newTreeNode[j + 1];\n                newTreeNode[j + 1].previousSibling = newTreeNode[j];\n                if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                    throw new Error(\"sibling index error\");\n                }\n            }\n            if (this.levelIndexObjs[losedRange[i][0] + 1]) {\n                this.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            } else {\n                this.levelIndexObjs[losedRange[i][0] + 1] = new LevelIndexObj(losedRange[i][0] + 1, false);\n                this.levelIndexObjs[losedRange[i][0] + 1].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            }\n        }\n    }\n    constructTreeForBatchLoad(losedRange: Array<Array<number>>, difVals: Array<{ l: number, i: number, dif: Array<number> }>) {\n        let count = 0;\n        let nodeNum = 0;\n        for (let i = 0; i < losedRange.length; i++) {\n            const levelRange = losedRange[i];\n\n            const startNode = this.levelIndexObjs[losedRange[i][0] - 1].getTreeNodeStartIndex(Math.floor(losedRange[i][1] / 2));\n            let p = startNode;\n            const newTreeNode = [];\n            for (let j = Math.floor(losedRange[i][1] / 2); j <= Math.floor(losedRange[i][2] / 2); j++) {\n                if (p?.index === j && j === difVals[count].i && p.level === difVals[count].l) {\n                    //@ts-ignore\n                    p.difference = difVals[count].dif;\n                    const yArray1: [number, number, number, number] = [0, 0, 0, 0]\n                    const yArray2: [number, number, number, number] = [0, 0, 0, 0]\n                    yArray1[0] = p.yArray[0];\n                    yArray2[0] = p.yArray[0] - p.difference![0];\n                    yArray1[3] = p.yArray[3] + p.difference![3];\n                    yArray2[3] = p.yArray[3];\n                    if (p.difference![1] < 0) {\n                        yArray1[1] = p.yArray[1];\n                        yArray2[1] = p.yArray[1] - p.difference![1];\n                    } else {\n                        yArray1[1] = p.yArray[1] + p.difference![1];\n                        yArray2[1] = p.yArray[1]\n                    }\n                    if (p.difference![2] < 0) {\n                        yArray1[2] = p.yArray[2] + p.difference![2];\n                        yArray2[2] = p.yArray[2];\n                    } else {\n                        yArray1[2] = p.yArray[2];\n                        yArray2[2] = p.yArray[2] - p.difference![2];\n                    }\n                    const firstNode = new TrendTree(p, true, p.index, yArray1, null);\n                    const secondNode = new TrendTree(p, false, p.index, yArray2, null);\n                    this.cacheMap.set(firstNode.index, firstNode);\n                    this.cacheMap.set(secondNode.index, secondNode);\n                    nodeNum += 2\n                    newTreeNode.push(firstNode);\n                    newTreeNode.push(secondNode);\n                    p = p.nextSibling;\n                    count++;\n                    if (p === null || count >= difVals.length) {\n                        break;\n                    }\n\n                } else {\n                    console.log(losedRange[i][0] - 1, Math.floor(losedRange[i][1] / 2))\n                    console.log(\"lose range:\", losedRange, p, p?.index, j);\n                    console.log(this.levelIndexObjs);\n                    debugger\n                    throw new Error(\"dif not match node\");\n                }\n            }\n            for (let j = 0; j < newTreeNode.length - 1; j++) {\n                newTreeNode[j].nextSibling = newTreeNode[j + 1];\n                newTreeNode[j + 1].previousSibling = newTreeNode[j];\n                if (newTreeNode[j].index != newTreeNode[j + 1].index - 1) {\n                    throw new Error(\"sibling index error\");\n                }\n\n            }\n            if (this.levelIndexObjs[losedRange[i][0]]) {\n                this.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            } else {\n                this.levelIndexObjs[losedRange[i][0]] = new LevelIndexObj(losedRange[i][0], false);\n                this.levelIndexObjs[losedRange[i][0]].addLoadedDataRange(newTreeNode[0], [newTreeNode[0].index, newTreeNode[newTreeNode.length - 1].index]);\n            }\n        }\n    }\n\n    async viewChangeInteraction(currentLevel: number, width: number, timeRange: Array<number>, yScale: any) {\n        // console.time(\"v_c\")\n        const nonUniformColObjs = computeTimeSE(currentLevel, width, timeRange, this.realDataRowNum, this.maxLevel, this.dataName);\n        //drawViewChangeLineChart({ dataManager:this,data: {maxv:0,minv:0,powRenderData:[],noPowRenderData:[]}, startTime: 0, endTime: timeRange[1], algorithm: \"trendtree\", width:width, height: 600 })\n        //context!.commit(\"addViewChangeQueryNoPowLineChartObj\", { dataManager:this,data: nonUniformColObjs, startTime: 0, endTime: timeRange[1], algorithm: \"trendtree\", width:width, height: 600 });\n\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isContain(p);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2) {\n                        needLoadDifNode.push(p);\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        //throw new Error(\"error in viewchange\")\n                        break;\n                    } else {\n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }\n\n        }\n        //const draw=drawViewChangeLineChart({width:600,height:600,minv:0,maxv:1000,x:10,y:10})\n        //draw(nonUniformColObjs)\n        if (needLoadDifNode.length === 0) {\n            //debugger\n            return nonUniformColObjs;\n        }\n        let losedDataInfo = computeLosedDataRange(needLoadDifNode);\n        if (losedDataInfo.length === 0) {\n            return nonUniformColObjs;\n        }\n        const currentLevelLosedRange = [];\n        for (let j = 0; j < losedDataInfo.length; j++) {\n            const level = losedDataInfo[j][0];\n            const start = losedDataInfo[j][1];\n            const end = losedDataInfo[j][2];\n            if (this.levelIndexObjs[level]) {\n\n                const hasData = this.levelIndexObjs[level].hasDataForRange(start, end);\n                if (!hasData.has) {\n                    const losedRange = hasData.range;\n                    losedRange.forEach(range => {\n                        range.unshift(level);\n                        currentLevelLosedRange.push(range);\n                    });\n                    //debugger\n                }\n            } else {\n                currentLevelLosedRange.push([level, start, end]);\n            }\n        }\n        if (currentLevelLosedRange.length > 0) {\n            await batchLoadDataForRangeLevel(currentLevelLosedRange, this);\n        }\n\n        let countNum = 1\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if (v._leftChild === null || v._rightChild === null) {\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                tempQue.push(v._leftChild!);\n                tempQue.push(v._rightChild!);\n            });\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    //break;\n                    throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isContain(tempQue[i]);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2) {\n                    tempNeedLoadDifNodes.push(tempQue[i]);\n                    preColIndex.push(colIndex);\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], yScale);\n                if (con1) {\n                    tempNeedLoadDifNodes.splice(i, 1)\n                    preColIndex.splice(i, 1);\n                }\n            }\n            //this.checkMonotonicity(nonUniformColObjs,preColIndex,tempNeedLoadDifNodes);\n            needLoadDifNode = tempNeedLoadDifNodes;\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 1) {\n                //console.log(\"last level:\",needLoadDifNode.length);\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n\n                    nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[0]);\n                    nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[0]);\n                    nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[3]);\n                    nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[3]);\n                }\n                break;\n            }\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n            let losedDataInfo = computeLosedDataRange(needLoadDifNode);\n            const currentLevelLosedRange = [];\n\n            for (let j = 0; j < losedDataInfo.length; j++) {\n                const level = losedDataInfo[j][0]\n                const start = losedDataInfo[j][1]\n                const end = losedDataInfo[j][2];\n                if (this.levelIndexObjs[level]) {\n\n                    const hasData = this.levelIndexObjs[level].hasDataForRange(start, end);\n                    if (!hasData.has) {\n                        const losedRange = hasData.range;\n                        losedRange.forEach(range => {\n                            range.unshift(level);\n                            currentLevelLosedRange.push(range);\n                        });\n                    }\n                } else {\n                    currentLevelLosedRange.push([level, start, end]);\n                }\n            }\n\n            await batchLoadDataForRangeLevel(currentLevelLosedRange, this);\n        }\n        //console.timeEnd(\"v_c\")\n        //draw(nonUniformColObjs)\n        return nonUniformColObjs;\n    }\n\n\n\n    async viewChangeInteraction1(currentLevel: number, width: number, timeRange: Array<number>, yScale: any) {\n        allTimes = []\n        // console.time(\"v_c\")\n        const nonUniformColObjs = computeTimeSE(currentLevel, width, timeRange, this.realDataRowNum, this.maxLevel);\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isContain(p);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2) {\n                        needLoadDifNode.push(p);\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        // throw new Error(\"error in viewchange\")\n                        break;\n                    } else {\n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }\n\n        }\n        if (needLoadDifNode.length === 0) {\n            const sumTime = allTimes.reduce((pre: any, cur: any) => pre + cur, 0)\n            allSumTimes.push(sumTime)\n            allTimes = [];\n            if (allSumTimes.length >= 50) {\n                console.log(allSumTimes)\n            }\n            //debugger\n            return nonUniformColObjs;\n        }\n        let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n        //console.log(losedDataInfo)\n        // if (losedDataInfo.length === 0) {\n        //     return nonUniformColObjs;\n        // }\n\n        if (losedDataInfo.length > 0) {\n            const startTime = new Date().getTime()\n            await batchLoadDataForRangeLevel1(losedDataInfo, this);\n            allTimes.push(new Date().getTime() - startTime)\n        }\n\n\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if (v._leftChild === null || v._rightChild === null) {\n                    console.log(v)\n                    console.log(this)\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                tempQue.push(v._leftChild!);\n                tempQue.push(v._rightChild!);\n            });\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    break;\n                    //throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isContain(tempQue[i]);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2) {\n                    tempNeedLoadDifNodes.push(tempQue[i]);\n                    preColIndex.push(colIndex);\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                    const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], yScale);\n                    if (con1) {\n                        tempNeedLoadDifNodes.splice(i, 1)\n                        preColIndex.splice(i, 1);\n                    }\n                }\n\n            }\n            //this.checkMonotonicity(nonUniformColObjs,preColIndex,tempNeedLoadDifNodes);\n            needLoadDifNode = tempNeedLoadDifNodes;\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 1) {\n                //console.log(\"last level:\",needLoadDifNode.length);\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n\n                    nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[0]);\n                    nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[0]);\n\n                    if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                        nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[3]);\n                        nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[3]);\n                    }\n\n                }\n                break;\n            }\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n            let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n            if (losedDataInfo.length > 0) {\n                const startTime = new Date().getTime()\n                await batchLoadDataForRangeLevel1(losedDataInfo, this);\n                allTimes.push(new Date().getTime() - startTime)\n            }\n\n        }\n        const sumTime = allTimes.reduce((pre: any, cur: any) => pre + cur, 0)\n        // console.log(sumTime)\n        //allSumTimes.push(sumTime)\n        //allTimes = [];\n        //if(allSumTimes.length>=50){\n        //    console.log(allSumTimes)\n        // }\n        //console.timeEnd(\"v_c\")\n        return nonUniformColObjs;\n    }\n\n\n\n\n\n\n\n\n    checkLoadedDataInSingalLevel(losedDataInfo: Array<Array<number>>) {\n        const currentLevelLosedRange = [];\n        for (let j = 0; j < losedDataInfo.length; j++) {\n            const level = losedDataInfo[j][0]\n            const start = losedDataInfo[j][1]\n            const end = losedDataInfo[j][2];\n            if (this.levelIndexObjs[level]) {\n\n                const hasData = this.levelIndexObjs[level].hasDataForRange(start, end);\n                if (!hasData.has) {\n                    const losedRange = hasData.range;\n                    losedRange.forEach(range => {\n                        range.unshift(level);\n                        currentLevelLosedRange.push(range);\n                    });\n                }\n            } else {\n                currentLevelLosedRange.push([level, start, end]);\n            }\n        }\n        return currentLevelLosedRange\n    }\n    checkLoadedDataInSingalLevelV1(losedDataInfo: Array<Array<number>>) {\n        const currentLevelLosedRange = [];\n        for (let j = 0; j < losedDataInfo.length; j++) {\n            const level = losedDataInfo[j][0]\n            const start = losedDataInfo[j][1]\n            const end = losedDataInfo[j][2];\n            if (this.levelIndexObjs[level]) {\n\n                const hasData = this.levelIndexObjs[level].hasDataForRange(start, end);\n                if (!hasData.has) {\n                    const losedRange = hasData.range;\n                    losedRange.forEach(range => {\n                        range.unshift(level);\n                        currentLevelLosedRange.push(range);\n                    });\n                }\n            } else {\n                currentLevelLosedRange.push([level, start, end]);\n            }\n        }\n        return currentLevelLosedRange\n    }\n\n\n\n    getIndexTime(l: number, index: number, maxLevel: number) {\n        const gap = 2 ** maxLevel / (2 ** l)\n        const startTime = index * gap;\n        const endTime = startTime + gap - 1;\n        return {\n            startT: startTime,\n            endT: endTime\n        }\n    }\n\n    initCache() {\n        const options = {\n            max: 1000000,\n            maxSize: 1000000,\n            sizeCalculation: (value: any, key: string) => {\n                return 1\n            },\n            dispose: (value: any, key: string, reason: string) => {\n                if (reason === \"evict\") {\n                    console.log(key)\n                    this.deleteQueue.push(value);\n                }\n\n            },\n            disposeAfter: (value: any, key: string, reason: string) => {\n                //console.log(\"dispose after----------------------\",key,reason)\n            },\n            ttl: 1000 * 60 * 60,\n            allowStale: false,\n            updateAgeOnGet: true,\n            updateAgeOnHas: true,\n\n        }\n        this.lruCache = new Cache(options);\n        this.evictTreeNode()\n        return\n    }\n\n\n\n    evictTreeNode() {\n        setInterval(() => {\n            if (this.isIntering) {\n                return\n            }\n            this.isEvicting = true\n            this.deleteQueue.forEach((curNode) => {\n                const l = curNode.level;\n                const i = curNode.index;\n                this.lruCache.delete(l + \"_\" + i);\n                if (this.levelIndexObjs[l].hasDataForRange(i, i).has) {\n                    this.deleteNodeWhithChild(l, i);\n                    console.log(\"evict l:\" + l + \" i:\" + i + \" finish!\")\n                }\n            })\n            this.isEvicting = false\n        }, 1000)\n\n    }\n    deleteNodeWhithChild(level: number, index: number) {\n\n        let curLS = index;\n        let curRS = index;\n        for (let j = level; j < this.maxLevel - 1; j++) {\n            if (j == level) {\n                curLS = index;\n                curRS = index;\n            } else {\n                curLS = 2 ** (j - level) * curLS;\n                curRS = 2 ** (j - level) * curRS + 1;\n            }\n            const curLLoadedRange = this.levelIndexObjs[j].loadedDataRange;\n            const curFirstNodes = this.levelIndexObjs[j].firstNodes;\n\n            if (!curLLoadedRange || !curFirstNodes) {\n                break;\n            }\n\n            const newFirstNodes: Array<TrendTree> = [];\n            const newLoadDataRanges = [];\n            for (let i = 0; i < curLLoadedRange.length; i++) {\n                const curRange0 = curLLoadedRange[i];\n                if (curRange0[1] < curRS) {\n                    newFirstNodes.push(curFirstNodes[i]);\n                    newLoadDataRanges.push([curRange0[0], curRange0[1]]);\n                } else if (curRange0[0] < curLS && curRange0[1] === curLS) {\n                    if (curFirstNodes[i].nextSibling) {\n                        newLoadDataRanges.push([curRange0[0], curRange0[1] - 1]);\n                        newFirstNodes.push(curFirstNodes[i])\n                    }\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curLS) {\n                            if (curP.previousSibling) {\n                                curP.previousSibling.nextSibling = null\n                                curP.previousSibling = null\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n                } else if (curRange0[0] < curLS && curRange0[1] > curLS && curRange0[1] < curRS) {\n                    newFirstNodes.push(curFirstNodes[i]);\n                    newLoadDataRanges.push([curRange0[0], curLS - 1]);\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curLS) {\n                            if (curP.previousSibling) {\n                                curP.previousSibling.nextSibling = null\n                                curP.previousSibling = null\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n                } else if (curRange0[0] < curLS && curRange0[1] === curRS) {\n                    newFirstNodes.push(curFirstNodes[i]);\n                    newLoadDataRanges.push([curRange0[0], curLS - 1]);\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curLS) {\n                            if (curP.previousSibling) {\n                                curP.previousSibling.nextSibling = null;\n                                curP.previousSibling = null;\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n\n                } else if (curRange0[0] < curLS && curRange0[1] > curRS) {\n                    //debugger\n                    newFirstNodes.push(curFirstNodes[i]);\n                    newLoadDataRanges.push([curRange0[0], curLS - 1])\n\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curLS) {\n                            if (curP.previousSibling) {\n                                curP.previousSibling.nextSibling = null\n                                curP.previousSibling = null;\n                            }\n                        }\n                        if (curP.index === curRS) {\n                            if (curP.nextSibling) {\n                                newFirstNodes.push(curP.nextSibling);\n                                newLoadDataRanges.push([curRS + 1, curRange0[1]]);\n                                curP.nextSibling.previousSibling = null;\n                                curP.nextSibling = null\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n\n                } else if (curRange0[0] === curLS && curRange0[1] > curRS) {\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curRS) {\n                            if (curP.nextSibling) {\n                                newFirstNodes.push(curP.nextSibling);\n                                newLoadDataRanges.push([curRS + 1, curRange0[1]]);\n                                curP.nextSibling.previousSibling = null;\n                                curP.nextSibling = null\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n\n                } else if (curRange0[0] === curLS && curRange0[1] === curRS) {\n                    continue;\n                } else if (curRange0[0] === curLS && curRange0[1] < curRS) {\n                    continue\n                } else if (curRange0[0] > curLS && curRange0[1] > curRS && curRange0[0] < curRS) {\n                    let curP = curFirstNodes[i];\n                    while (curP) {\n                        if (curP.index === curRS) {\n                            if (curP.nextSibling) {\n                                newFirstNodes.push(curP.nextSibling);\n                                newLoadDataRanges.push([curRS + 1, curRange0[1]]);\n                                curP.nextSibling.previousSibling = null;\n                                curP.nextSibling = null;\n                            }\n                            break;\n                        }\n                        //@ts-ignore\n                        curP = curP.nextSibling\n                    }\n                    if (curP === null) {\n                        throw new Error(\"cannot find range node\");\n                    }\n                } else if (curRange0[0] > curLS && curRange0[0] === curRS) {\n                    if (curFirstNodes[i].nextSibling) {\n                        newFirstNodes.push(curFirstNodes[i].nextSibling!)\n                        newLoadDataRanges.push([curRange0[0] + 1, curRange0[1]])\n                        curFirstNodes[i]!.nextSibling!.previousSibling = null\n                        curFirstNodes[i].nextSibling = null\n\n                    }\n\n                } else if (curRange0[0] > curRS) {\n                    newFirstNodes.push(curFirstNodes[i])\n                    newLoadDataRanges.push([curRange0[0], curRange0[1]])\n                } else if (curRange0[0] > curLS && curRange0[1] === curRS) {\n                    continue\n                }\n                else {\n                    console.log(curRange0, curLS, curRS)\n                    throw new Error(\"range error\");\n\n                }\n            }\n\n            this.levelIndexObjs[j].loadedDataRange = newLoadDataRanges;\n            this.levelIndexObjs[j].firstNodes = newFirstNodes;\n        }\n    }\n    updateMaxCacheSize(size: number) {\n        this.maxCacheNodeNum = size;\n    }\n    lruCacheDelete() {\n        console.log(this.cacheMap.size)\n        if (this.cacheMap.size <= this.maxCacheNodeNum) {\n\n            return\n        }\n        let needDeleteNum = this.cacheMap.size - this.maxCacheNodeNum\n        if (needDeleteNum % 2 != 0) {\n            needDeleteNum++\n        }\n        console.log(\"delete nums:\", needDeleteNum)\n        for (let i = this.levelIndexObjs.length - 2; i > 0; i--) {\n            if (needDeleteNum <= 0) {\n                break\n            }\n            const levelObj = this.levelIndexObjs[i];\n            for (let j = 0; j < levelObj.firstNodes.length; j++) {\n                let firstNode = levelObj.firstNodes[j];\n                this.levelIndexObjs[firstNode.level + 1].loadedDataRange = [];\n                this.levelIndexObjs[firstNode.level + 1].firstNodes = [];\n                this.levelIndexObjs[firstNode.level + 1].isFull = false;\n                while (firstNode) {\n                    if (firstNode._leftChild) {\n                        this.cacheMap.delete(firstNode._leftChild.index)\n                    }\n                    if (firstNode._rightChild) {\n                        this.cacheMap.delete(firstNode._rightChild.index)\n                    }\n                    //@ts-ignore\n                    firstNode = firstNode.nextSibling\n                    needDeleteNum -= 2;\n                }\n            }\n        }\n    }\n\n\n\n\n\n\n\n    async computePowCon(currentLevel: number, width: number, gapNeedNodes: Array<TrendTree>, nonUniformColObjs: Array<NoUniformColObj>) {\n        //debugger\n        console.log(\"pwo:\", width)\n        const times = [];\n        let needLoadDifNode: Array<TrendTree> = [];\n        if (gapNeedNodes.length % width !== 0) {\n            throw new Error(\"gap node not match widht\")\n        }\n        const timeNum = gapNeedNodes.length / width;\n        const groups = new Array<Array<TrendTree>>(width)\n        for (let i = 0; i < groups.length; i++) {\n            groups[i] = []\n        }\n        if (timeNum > 1) {\n            for (let i = 0; i < gapNeedNodes.length; i++) {\n                const groupIdx = Math.floor(i / timeNum)\n                groups[groupIdx].push(gapNeedNodes[i])\n            }\n            for (let i = 0; i < groups.length - 1; i++) {\n                const group = groups[i];\n                const secGroup = groups[i + 1]\n                needLoadDifNode.push(group[group.length - 1])\n                needLoadDifNode.push(secGroup[0])\n            }\n        } else {\n            needLoadDifNode = gapNeedNodes;\n        }\n\n\n        let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n\n\n        if (losedDataInfo.length > 0) {\n            const levelTime = new Date().getTime()\n            await batchLoadDataForRangeLevel1(losedDataInfo, this);\n            times.push(new Date().getTime() - levelTime);\n        } else {\n            times.push(1)\n        }\n        //debugger\n        let columnGapArray: Array<UniformGapObj> = [];\n        if (timeNum == 1) {\n            for (let i = 0; i < needLoadDifNode.length - 1; i++) {\n                // debugger\n                if (needLoadDifNode[i]._rightChild && needLoadDifNode[i + 1]._leftChild) {\n                    const columnGap = new UniformGapObj(needLoadDifNode[i], needLoadDifNode[i + 1])\n                    columnGapArray.push(columnGap);\n                } else {\n                    throw new Error(\"children cannot empty\")\n                }\n            }\n        } else {\n            for (let i = 0; i < needLoadDifNode.length; i += 2) {\n                if (needLoadDifNode[i]._rightChild && needLoadDifNode[i + 1]._leftChild) {\n                    const columnGap = new UniformGapObj(needLoadDifNode[i], needLoadDifNode[i + 1])\n                    columnGapArray.push(columnGap);\n                } else {\n                    throw new Error(\"children cannot empty\")\n                }\n            }\n            for (let i = 0; i < groups.length - 1; i++) {\n                const group1 = groups[i];\n                const group2 = groups[i + 1];\n                for (let j = 0; j < group1.length - 1; j++) {\n                    columnGapArray[i].updateLeftMinMax(group1[j])\n                }\n                for (let j = 1; j < group2.length; j++) {\n                    columnGapArray[i].updateRighetMinMax(group2[j])\n                }\n            }\n        }\n        let con = true\n        while (con) {\n            //debugger\n            let isFinish = false\n            needLoadDifNode = []\n            for (let i = 0; i < columnGapArray.length; i++) {\n                const isCut = columnGapArray[i].canCut()\n                isFinish = isCut && isFinish\n                if (!isCut) {\n                    needLoadDifNode.push(columnGapArray[i].firstNode);\n                    needLoadDifNode.push(columnGapArray[i].secondNode);\n                }\n            }\n            if (isFinish) {\n                break;\n            }\n            if (needLoadDifNode.length == 0) {\n                break\n            }\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 1) {\n                for (let i = 0; i < columnGapArray.length; i++) {\n                    const colGap = columnGapArray[i];\n                    if (!colGap.isOk) {\n                        if (colGap.firstNode && colGap.secondNode) {\n                            colGap.lastLevelUpdateMinMax()\n                        }\n                    }\n                }\n                break;\n            }\n            losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n            if (losedDataInfo.length > 0) {\n                const levelTime = new Date().getTime()\n                await batchLoadDataForRangeLevel1(losedDataInfo, this);\n                times.push(new Date().getTime() - levelTime);\n            }\n            for (let i = 0; i < columnGapArray.length; i++) {\n                const colGap = columnGapArray[i];\n                if (!colGap.isOk) {\n                    if (colGap.firstNode._rightChild && colGap.secondNode._leftChild) {\n                        colGap.updateTwoNode(colGap.firstNode, colGap.secondNode);\n                    }\n                }\n            }\n        }\n        if (nonUniformColObjs.length !== columnGapArray.length + 1) {\n            throw new Error(\"column not match gap\")\n        }\n        for (let i = 0; i < columnGapArray.length; i++) {\n            const colGap = columnGapArray[i];\n            if (colGap.canUseT) {\n                nonUniformColObjs[i].endV = colGap.tOne;\n                nonUniformColObjs[i].startV = colGap.tOne;\n            }\n        }\n\n        if (times.length >= 3) {\n            allTimes.push(times[0])\n            //allTimes.push(times[1])\n        }\n        console.log(allTimes)\n        console.log(times)\n        return nonUniformColObjs\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n    bfsSearchTree(currentLevel: number, width: number, timeRange: Array<number>, nonUniformColObjs: Array<NoUniformColObj>) {\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isContain(p);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2) {\n                        needLoadDifNode.push(p);\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        throw new Error(\"error in viewchange\")\n                        break;\n                    } else {\n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }\n\n        }\n        if (needLoadDifNode.length === 0) {\n            //debugger\n            return nonUniformColObjs;\n        }\n\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if (v._leftChild === null || v._rightChild === null) {\n                    console.log(v)\n                    console.log(this)\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                tempQue.push(v._leftChild!);\n                tempQue.push(v._rightChild!);\n            });\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    break;\n                    //throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isContain(tempQue[i]);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2) {\n                    tempNeedLoadDifNodes.push(tempQue[i]);\n                    preColIndex.push(colIndex);\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                    const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], '');\n                    if (con1) {\n                        tempNeedLoadDifNodes.splice(i, 1)\n                        preColIndex.splice(i, 1);\n                    }\n                }\n\n            }\n            needLoadDifNode = tempNeedLoadDifNodes;\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 1) {\n                //console.log(\"last level:\",needLoadDifNode.length);\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n\n                    nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[0]);\n                    nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[0]);\n\n                    if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                        nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[3]);\n                        nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[3]);\n                    }\n                }\n                break;\n            }\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n        }\n        return nonUniformColObjs;\n    }\n\n    async viewChangeInteraction1WS(currentLevel: number, width: number, timeRange: Array<number>, yScale: any, props?: any) {\n        // while(this.isEvicting){console.log()};\n        this.isIntering = true\n        const tagName = \"\" + Math.random() + \"\" + Math.random()\n        allTimes = []\n        // console.time(\"v_c\")\n        const nonUniformColObjs = computeTimeSE(currentLevel, width, timeRange, this.realDataRowNum, this.maxLevel);\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isContain(p);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2) {\n                        needLoadDifNode.push(p);\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        throw new Error(\"error in viewchange\")\n                        break;\n                    } else {\n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }\n\n        }\n        if (needLoadDifNode.length === 0) {\n            const sumTime = allTimes.reduce((pre: any, cur: any) => pre + cur, 0)\n            allSumTimes.push(sumTime)\n            await batchLoadDataForRangeLevel1WS([], this, \"empty\");\n            allTimes = [];\n            if (allSumTimes.length >= 50) {\n                console.log(allSumTimes)\n            }\n            //debugger\n            return nonUniformColObjs;\n        }\n        let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n\n\n        if (losedDataInfo.length > 0) {\n            const startTime = new Date().getTime()\n            await batchLoadDataForRangeLevel1WS(losedDataInfo, this, tagName);\n            allTimes.push(new Date().getTime() - startTime)\n        }\n\n\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if (v._leftChild === null || v._rightChild === null) {\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                tempQue.push(v._leftChild!);\n                tempQue.push(v._rightChild!);\n                const leftHas = this.lruCache.has(v._leftChild.level + \"_\" + v._leftChild.index);\n                const rightHas = this.lruCache.has(v._rightChild.level + \"_\" + v._rightChild.index);\n                // if(!leftHas){\n                //     console.log(\"fddddd\",v._leftChild.level)\n                // }\n\n            });\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    break;\n                    //throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isContain(tempQue[i]);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2) {\n                    tempNeedLoadDifNodes.push(tempQue[i]);\n                    preColIndex.push(colIndex);\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                    const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], yScale);\n                    if (con1) {\n                        tempNeedLoadDifNodes.splice(i, 1)\n                        preColIndex.splice(i, 1);\n                    }\n                }\n\n            }\n            //this.checkMonotonicity(nonUniformColObjs,preColIndex,tempNeedLoadDifNodes);\n            needLoadDifNode = tempNeedLoadDifNodes;\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 2) {\n                //console.log(\"last level:\",needLoadDifNode.length);\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n\n                    nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[0]);\n                    nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[0]);\n\n                    if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                        nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[3]);\n                        nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[3]);\n                    }\n\n                }\n                break;\n            }\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n            let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n            if (losedDataInfo.length > 0) {\n                const startTime = new Date().getTime()\n                await batchLoadDataForRangeLevel1WS(losedDataInfo, this, tagName);\n                allTimes.push(new Date().getTime() - startTime)\n            }\n\n        }\n        if (props && props.rootT) {\n            console.log(\"roott:\", props.rootT)\n            allTimes.push(props.rootT);\n        }\n        //console.log(allTimes)\n        const sumTime = allTimes.reduce((pre: any, cur: any) => pre + cur, 0)\n        allSumTimes.push(sumTime);\n        if (allSumTimes.length === 6) {\n            pushTimeArray(allSumTimes);\n            allSumTimes = []\n        }\n\n        console.log(\"AllLevelTime:\", allSumTimes);\n        await batchLoadDataForRangeLevel1WS(losedDataInfo, this, \"empty\");\n        this.isIntering = false;\n        return nonUniformColObjs;\n    }\n\n\n\n\n\n\n\n    async viewChangeInteractionFinal(currentLevel: number, width: number, timeRange: Array<number>, yScale: any) {\n        console.log(currentLevel, width, timeRange)\n        const dataName = this.dataName.includes(\".\") ? this.dataName.split(\".\")[1] : this.dataName;\n        const currentFlagInfo = store.state.allFlags[this.dataName];\n        if (currentFlagInfo === undefined) {\n            throw new Error(this.dataName + \"get flag faild\")\n        } else {\n            console.log(\"flag length:\", currentFlagInfo.length)\n        }\n\n        allTimes = []\n        // console.time(\"v_c\")\n        const nonUniformColObjs = computeTimeSE(currentLevel, width, timeRange, this.realDataRowNum, this.maxLevel);\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isMissContain(p);\n                    nonUniformColObjs[colIndex].containColumnRange(p, type);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2) {\n                        needLoadDifNode.push(p);\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        throw new Error(\"error in viewchange\")\n                        break;\n                    } else {\n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }\n\n        }\n\n        if (needLoadDifNode.length === 0) {\n            return nonUniformColObjs;\n        }\n\n        let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n\n\n        if (losedDataInfo.length > 0) {\n\n            await batchLoadDataForRangeLevel1MinMaxMiss(losedDataInfo, this);\n        }\n\n\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if (v._leftChild === null || v._rightChild === null) {\n                    console.log(v)\n                    console.log(this)\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                this.lruCache.has(v._leftChild.level + \"_\" + v._leftChild.index);\n                this.lruCache.has(v._rightChild.level + \"_\" + v._rightChild.index);\n                if (v._leftChild.nodeType !== 'NULL') {\n                    tempQue.push(v._leftChild!);\n                }\n                if (v._rightChild.nodeType !== 'NULL') {\n                    tempQue.push(v._rightChild!);\n                }\n            });\n\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    break;\n                    //throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isMissContain(tempQue[i]);\n                nonUniformColObjs[colIndex].containColumnRange(tempQue[i], type);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2) {\n                    tempNeedLoadDifNodes.push(tempQue[i]);\n                    preColIndex.push(colIndex);\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                    const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], yScale);\n                    if (con1) {\n                        tempNeedLoadDifNodes.splice(i, 1)\n                        preColIndex.splice(i, 1);\n                    }\n                }\n\n            }\n            //this.checkMonotonicity(nonUniformColObjs,preColIndex,tempNeedLoadDifNodes);\n            needLoadDifNode = tempNeedLoadDifNodes;\n\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 1) {\n\n                console.log(\"last level:\", needLoadDifNode.length);\n\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n                    const nodeFlag1 = currentFlagInfo[2 * needLoadDifNode[i].index];\n                    if (nodeFlag1 === 1) {\n                        throw new Error(\"flag error\")\n                    }\n                    const nodeFlag2 = currentFlagInfo[2 * needLoadDifNode[i].index + 1]\n                    if (nodeFlag2 === 0) {\n                        nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[1]);\n                        nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[1]);\n                        if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                            nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[2]);\n                            nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[2]);\n                        }\n                    } else {\n                        nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[2]);\n                        nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[2]);\n                        if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                            nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[1]);\n                            nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[1]);\n                        }\n                    }\n\n                }\n                break;\n            }\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n            let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n            if (losedDataInfo.length > 0) {\n                await batchLoadDataForRangeLevel1MinMaxMiss(losedDataInfo, this);\n            }\n\n        }\n        for (let i = 0; i < nonUniformColObjs.length; i++) {\n            nonUniformColObjs[i].checkIsMis();\n        }\n        return nonUniformColObjs;\n    }\n\n\n\n    async viewChangeInteractionFinal1(currentLevel: number, width: number, timeRange: Array<number>, yScale: any, drawer: any) {\n        \n        const currentFlagInfo = getFlag(this.dataName);\n        if (currentFlagInfo === undefined) {\n            throw new Error(this.dataName + \" get flag faild\")\n        } else {\n            //console.log(\"flag length:\", currentFlagInfo.length)\n        }\n\n        allTimes = []\n        // console.time(\"v_c\")\n        const nonUniformColObjs = computeTimeSE(currentLevel, width, timeRange, this.realDataRowNum, this.maxLevel);\n        let needLoadDifNode: Array<TrendTree> = [];\n        let colIndex = 0;\n        for (let i = 0; i < this.levelIndexObjs[currentLevel].firstNodes.length; i++) {\n            const firtIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][0], this.maxLevel);\n            const lastIndexTimeRange = this.getIndexTime(currentLevel, this.levelIndexObjs[currentLevel].loadedDataRange[i][1], this.maxLevel);\n            let p = this.levelIndexObjs[currentLevel].firstNodes[i];\n\n            if (firtIndexTimeRange.startT <= timeRange[0] && lastIndexTimeRange.endT >= timeRange[1]) {\n                while (p != null) {\n                    if (colIndex >= nonUniformColObjs.length) {\n                        break;\n                        //throw new Error(\"col index out range\");\n                    }\n                    const type = nonUniformColObjs[colIndex].isMissContain(p);\n                    nonUniformColObjs[colIndex].containColumnRange(p, type);\n                    if (type === 1) {\n                        p = p.nextSibling!;\n                    } else if (type === 2 || type === 7 || type === 8 || type === 9 || type === 10) {\n\n                        if (type === 2) {\n                            needLoadDifNode.push(p);\n                        }\n                        if (type === 7) {\n                            needLoadDifNode.push(p);\n                            colIndex++;\n                        }\n                        if (type === 8) {\n                            if (colIndex != 0) {\n                                needLoadDifNode.push(p);\n                            }\n                        }\n                        if (type === 9) {\n                            colIndex++;\n                            if (colIndex !== nonUniformColObjs.length - 1) {\n                                needLoadDifNode.push(p);\n                            }\n                        }\n                        if (type === 10) {\n                            needLoadDifNode.push(p);\n                            //preColIndex.push(colIndex);\n                        }\n                        p = p.nextSibling!;\n                    } else if (type === 3) {\n                        colIndex++;\n                    } else if (type === 5) {\n                      \n                        p = p.nextSibling!\n                    } else if (type === 6) {\n                        \n                        break;\n                    } else {\n                      \n                        p = p.nextSibling!;\n                        //throw new Error(\"node time is little than col\");\n                    }\n                }\n            }else{\n                debugger\n            }\n\n        }\n        // debugger\n        if (needLoadDifNode.length === 0) {\n            return nonUniformColObjs;\n        }\n\n        let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n\n        // debugger\n        if (losedDataInfo.length > 0) {\n\n            await batchLoadDataForRangeLevel1MinMaxMiss(losedDataInfo, this);\n        }\n\n\n        while (needLoadDifNode.length > 0) {\n            colIndex = 0;\n            const tempNeedLoadDifNodes = [];\n            const tempQue: Array<TrendTree> = [];\n\n            needLoadDifNode.forEach(v => {\n                if ((v._leftChild === null || v._rightChild === null) && v.nodeType === 'O') {\n                    debugger\n                    throw new Error(\"cannot find next level node\");\n                }\n                if (v.nodeType === 'NULL') {\n                    //\n                } else {\n                    this.lruCache.has(v._leftChild!.level + \"_\" + v._leftChild!.index);\n                    this.lruCache.has(v._rightChild!.level + \"_\" + v._rightChild!.index);\n                    if (v._leftChild!.nodeType !== 'NULL') {\n                        tempQue.push(v._leftChild!);\n                    }\n                    if (v._rightChild!.nodeType !== 'NULL') {\n                        tempQue.push(v._rightChild!);\n                    }\n                }\n\n            });\n\n            const preColIndex = [];\n            for (let i = 0; i < tempQue.length; i++) {\n                if (colIndex >= nonUniformColObjs.length) {\n                    break;\n                    //throw new Error(\"col index out range\");\n                }\n                const type = nonUniformColObjs[colIndex].isMissContain(tempQue[i]);\n                nonUniformColObjs[colIndex].containColumnRange(tempQue[i], type);\n                if (type === 1) {\n                    continue;\n                } else if (type === 2 || type === 7 || type === 8 || type === 9 || type === 10) {\n\n                    if (type === 2) {\n                        tempNeedLoadDifNodes.push(tempQue[i]);\n                        preColIndex.push(colIndex);\n                    }\n                    if (type === 7) {\n                        tempNeedLoadDifNodes.push(tempQue[i]);\n                        preColIndex.push(colIndex)\n                    }\n                    if (type === 8) {\n                        if (colIndex != 0) {\n                            tempNeedLoadDifNodes.push(tempQue[i]);\n                            preColIndex.push(colIndex - 1)\n                        }\n                    }\n                    if (type === 9) {\n                        if (colIndex !== nonUniformColObjs.length - 1) {\n                            tempNeedLoadDifNodes.push(tempQue[i]);\n                            preColIndex.push(colIndex)\n                        }\n                    }\n                    if (type === 10) {\n                        tempNeedLoadDifNodes.push(tempQue[i]);\n                        preColIndex.push(colIndex);\n                    }\n\n                } else if (type === 3) {\n                    colIndex++;\n                    i--;\n                } else if (type === 6) {\n                    break;\n                } else {\n                    continue;\n                    // throw new Error(\"node time is little than col\");\n                }\n            }\n            if (preColIndex.length != tempNeedLoadDifNodes.length) {\n                throw new Error(\"cannot memory index\");\n            }\n            for (let i = 0; i < tempNeedLoadDifNodes.length; i++) {\n                if (tempNeedLoadDifNodes[i].gapFlag !== 'NO') {\n                    continue;\n                }\n                if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                    const con1 = canCut(tempNeedLoadDifNodes[i], nonUniformColObjs[preColIndex[i]], nonUniformColObjs[preColIndex[i] + 1], yScale);\n                    if (con1) {\n                        tempNeedLoadDifNodes.splice(i, 1)\n                        preColIndex.splice(i, 1);\n                    }\n                }\n\n            }\n            needLoadDifNode = tempNeedLoadDifNodes;\n\n            if (needLoadDifNode.length > 0 && needLoadDifNode[0].level === this.maxLevel - 2) {\n\n                for (let i = 0; i < needLoadDifNode.length; i++) {\n\n                    const nodeFlag2 = currentFlagInfo[2 * needLoadDifNode[i].index + 1]\n                    if (needLoadDifNode[i].gapFlag === 'NO') {\n                        if (nodeFlag2 === 0) {\n                            nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[1]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[1]);\n                            if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                                nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[2]);\n                                nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[2]);\n                            }\n                        } else {\n                            nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[2]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[2]);\n                            if (preColIndex[i] + 1 < nonUniformColObjs.length) {\n                                nonUniformColObjs[preColIndex[i] + 1].addFirstVal(needLoadDifNode[i].yArray[1]);\n                                nonUniformColObjs[preColIndex[i] + 1].forceMerge(needLoadDifNode[i].yArray[1]);\n                            }\n                        }\n                    } else {\n                        if (nodeFlag2 === 0) {\n                            nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[1]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[1]);\n\n                            nonUniformColObjs[preColIndex[i]].addFirstVal(needLoadDifNode[i].yArray[2]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[2]);\n\n                        } else {\n                            nonUniformColObjs[preColIndex[i]].addLastVal(needLoadDifNode[i].yArray[2]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[2]);\n\n                            nonUniformColObjs[preColIndex[i]].addFirstVal(needLoadDifNode[i].yArray[1]);\n                            nonUniformColObjs[preColIndex[i]].forceMerge(needLoadDifNode[i].yArray[1]);\n\n                        }\n                    }\n\n                }\n                break;\n            }\n            if (store.state.controlParams.progressive && drawer) {\n                drawer(nonUniformColObjs, \"progressive\")\n            }\n\n            if (needLoadDifNode.length === 0) {\n                break;\n            }\n            let losedDataInfo = computeLosedDataRangeV1(needLoadDifNode);\n            if (losedDataInfo.length > 0) {\n                await batchLoadDataForRangeLevel1MinMaxMiss(losedDataInfo, this);\n            }\n\n        }\n        for (let i = 0; i < nonUniformColObjs.length; i++) {\n            nonUniformColObjs[i].checkIsMis();\n        }\n\n        return nonUniformColObjs;\n    }\n\n}\n\n\n\n","import HaarDataManager from \"@/model/haar-data-manager\";\nimport HaarIndexObj from \"@/model/haar-index-obj\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport LevelIndexObj from \"@/model/level-index-obj\";\nimport store from \"@/store\";\nimport HaarTree from \"./haar-tree\";\nimport TrendTree from \"./tend-query-tree\";\n\nfunction initWaveletDecode(diffData: { mintd: Array<any>, minvd: Array<any>, maxvd: Array<any>, maxtd: Array<any> }) {\n    let minT = diffData.mintd;\n    let minV = diffData.minvd;\n    let maxV = diffData.maxvd;\n    let maxT = diffData.maxtd;\n\n    for (let i = 0; i < Math.log2(maxV.length); i++) {\n        const tempMaxV = [];\n        const tempMaxT = [];\n        const tempMinV = [];\n        const tempMinT = [];\n        for (let j = 0; j < 2 ** i; j++) {\n            if (maxV[j + 2 ** i] >= 0) {\n                tempMaxV.push(maxV[j]);\n                tempMaxV.push(maxV[j] - maxV[j + 2 ** i]);\n            } else {\n                tempMaxV.push(maxV[j] + maxV[j + 2 ** i]);\n                tempMaxV.push(maxV[j]);\n            }\n            if (minV[j + 2 ** i] >= 0) {\n                tempMinV.push(minV[j] + minV[j + 2 ** i]);\n                tempMinV.push(minV[j]);\n            } else {\n                tempMinV.push(minV[j]);\n                tempMinV.push(minV[j] - minV[j + 2 ** i]);\n            }\n            tempMinT.push(minT[j]);\n            tempMinT.push(minT[j] - minT[j + 2 ** i]);\n            tempMaxT.push(maxT[j] + maxT[j + 2 ** i]);\n            tempMaxT.push(maxT[j]);\n        }\n        maxV = [...tempMaxV, ...maxV.slice(2 ** (i + 1))];\n        maxT = [...tempMaxT, ...maxT.slice(2 ** (i + 1))];\n        minV = [...tempMinV, ...minV.slice(2 ** (i + 1))];\n        minT = [...tempMinT, ...minT.slice(2 ** (i + 1))];\n    }\n    const m4Data = {\n        mint: minT,\n        minv: minV,\n        maxv: maxV,\n        maxt: maxT\n    }\n    return m4Data;\n}\n\nexport function initHaarDecode(dif: Array<number>) {\n    let minT = dif\n    for (let i = 0; i < Math.log2(minT.length); i++) {\n        const tempMinT = [];\n        for (let j = 0; j < 2 ** i; j++) {\n            const a = (2 * minT[j] + minT[j + 2 ** i]) / 2;\n            tempMinT.push(a);\n            const b = (2 * minT[j] - minT[j + 2 ** i]) / 2;\n            tempMinT.push(b);\n        }\n        minT = [...tempMinT, ...minT.slice(2 ** (i + 1))];\n    }\n    return minT;\n}\n\nfunction waveletDecode(histroryData: Array<any>, diffData: { mintd: Array<any>, minvd: Array<any>, maxvd: Array<any>, maxtd: Array<any> }, range: [number, number]) {\n    const historyMinT = histroryData[1].slice(range[0], range[1]);\n    const historyMinV = histroryData[2].slice(range[0], range[1]);\n    const historyMaxV = histroryData[3].slice(range[0], range[1]);\n    const historyMaxT = histroryData[4].slice(range[0], range[1]);\n    const difMinT = diffData.mintd;\n    const difMinV = diffData.minvd;\n    const difMaxV = diffData.maxvd;\n    const difMaxT = diffData.maxtd;\n    const nowMinT = [];\n    const nowMinV = [];\n    const nowMaxV = [];\n    const nowMaxT = [];\n    for (let i = 0; i < historyMinT.length; i++) {\n        nowMinT.push(historyMinT[i], historyMinT[i] - difMinT[i]);\n        if (difMinV[i] < 0) {\n            nowMinV.push(historyMinV[i], historyMinV[i] - difMinV[i])\n        } else {\n            nowMinV.push(historyMinV[i] + difMinV[i], historyMinV[i]);\n        }\n        if (difMaxV[i] < 0) {\n            nowMaxV.push(historyMaxV[i] + difMaxV[i], historyMaxV[i]);\n        } else {\n            nowMaxV.push(historyMaxV[i], historyMaxV[i] - difMaxV[i]);\n        }\n        nowMaxT.push(historyMaxT[i] + difMaxT[i], historyMaxT[i]);\n    }\n    return {\n        mint: nowMinT,\n        minv: nowMinV,\n        maxv: nowMaxV,\n        maxt: nowMaxT,\n    }\n\n}\n\nfunction constructHaarTree(data: Array<any>, tableName?: string) {\n    const levelIndex = new Array<HaarIndexObj>(Math.log2(data.length));\n    //const dataManager=new LevelDataManager()\n    const mintd: Array<number> = [];\n    data.forEach(v => {\n        mintd.push(v.dif);\n    });\n\n    let tempLast = mintd.pop();\n    mintd.unshift(tempLast!);\n\n    let lastLevelNodes = new Array<HaarTree>();\n    let currentLevelNodes = new Array<HaarTree>();\n    const root = new HaarTree(null, true, 0, mintd[0], mintd[1]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new HaarIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n    for (let i = 1; i <= Math.log2(data.length); i++) {\n        for (let j = 0; j < 2 ** (i - 1); j++) {\n\n            const lastNode = lastLevelNodes[j];\n            const a = (2 * lastNode.value + lastNode.difference!) / 2\n            const b = (2 * lastNode.value - lastNode.difference!) / 2;\n            const firstNode = new HaarTree(lastNode, true, lastNode.index, a, i === Math.log2(data.length) ? undefined : mintd[j * 2 + 2 ** i]);\n            const secondNode = new HaarTree(lastNode, false, lastNode.index, b, i === Math.log2(data.length) ? undefined : mintd[j * 2 + 1 + 2 ** i]);\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n        }\n        levelIndex[i] = new HaarIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    return {\n        dataManager: new HaarDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable),\n        trendTree: root\n    }\n}\n\nfunction constructTrendTree(data: Array<any>, tableName?: string) {\n    const levelIndex = new Array<LevelIndexObj>(Math.log2(data.length));\n    //const dataManager=new LevelDataManager()\n    const mintd: Array<number> = [];\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n    const maxtd: Array<number> = [];\n    data.forEach(v => {\n        mintd.push(v.minid);\n        minvd.push(v.minvd);\n        maxvd.push(v.maxvd);\n        maxtd.push(v.maxid);\n    });\n\n    let tempLast = mintd.pop();\n    mintd.unshift(tempLast!);\n    tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n    tempLast = maxtd.pop();\n    maxtd.unshift(tempLast!);\n    let lastLevelNodes = new Array<TrendTree>();\n    let currentLevelNodes = new Array<TrendTree>();\n    let nodeNum = 1\n    const root = new TrendTree(null, true, 0, [mintd[0], minvd[0], maxvd[0], maxtd[0]], [mintd[1], minvd[1], maxvd[1], maxtd[1]]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new LevelIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n    for (let i = 1; i <= Math.log2(data.length); i++) {\n        for (let j = 0; j < 2 ** (i - 1); j++) {\n\n            const lastNode = lastLevelNodes[j];\n            //@ts-ignore\n            const yArray1: [number, number, number, number] = new Array(4);\n            //@ts-ignore\n            const yArray2: [number, number, number, number] = new Array(4);\n            yArray1[0] = lastNode.yArray[0];\n            yArray2[0] = lastNode.yArray[0] - lastNode.difference![0];\n            if (lastNode.difference![1] >= 0) {\n                yArray1[1] = lastNode.yArray[1] + lastNode.difference![1];\n                yArray2[1] = lastNode.yArray[1];\n            } else {\n                yArray1[1] = lastNode.yArray[1];\n                yArray2[1] = lastNode.yArray[1] - lastNode.difference![1];\n            }\n            if (lastNode.difference![2] >= 0) {\n                yArray1[2] = lastNode.yArray[2];\n                yArray2[2] = lastNode.yArray[2] - lastNode.difference![2];\n            } else {\n                yArray1[2] = lastNode.yArray[2] + lastNode.difference![2];\n                yArray2[2] = lastNode.yArray[2];\n            }\n            yArray1[3] = lastNode.yArray[3] + lastNode.difference![3];\n            yArray2[3] = lastNode.yArray[3];\n            //@ts-ignore\n            const firstNode = new TrendTree(lastNode, true, lastNode.index, yArray1, i === Math.log2(data.length) ? null : [mintd[j * 2 + 2 ** i], minvd[j * 2 + 2 ** i], maxvd[j * 2 + 2 ** i], maxtd[j * 2 + 2 ** i]]);\n            //@ts-ignore\n            const secondNode = new TrendTree(lastNode, false, lastNode.index, yArray2, i === Math.log2(data.length) ? null : [mintd[j * 2 + 1 + 2 ** i], minvd[j * 2 + 1 + 2 ** i], maxvd[j * 2 + 1 + 2 ** i], maxtd[j * 2 + 1 + 2 ** i]]);\n            // if (j === 0) {\n            //     levelIndex[i]=new LevelIndexObj(firstNode.level,true);\n            //     levelIndex[i].addLoadedDataRange(firstNode,[0,])\n            // }\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n            nodeNum += 2\n        }\n        levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n            // const k1 = currentLevelNodes[i + 1].yArray[2] - currentLevelNodes[i].yArray[1];\n            // const k2 = currentLevelNodes[i + 1].yArray[1] - currentLevelNodes[i].yArray[2];\n            // currentLevelNodes[i].trendRange = k1 < k2 ? [currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1], currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2]] : [currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2], currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1]];\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    const levelDataManager = new LevelDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable);\n    // levelDataManager.addNodeNum(nodeNum)\n    // console.log(levelDataManager.curNodeNum,levelDataManager.cacheMap.size)\n    return {\n        dataManager: levelDataManager,\n        trendTree: root\n    }\n}\n\nfunction constructRawMinMaxTrendTree(data: Array<any>, tableName?: string) {\n    const levelIndex = new Array<LevelIndexObj>(Math.ceil(Math.log2(data.length)));\n    //const dataManager=new LevelDataManager()\n    const mintd: Array<number> = [];\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n    const maxtd: Array<number> = [];\n    data.forEach(v => {\n        mintd.push(v.mint);\n        minvd.push(v.minv);\n        maxvd.push(v.maxv);\n        maxtd.push(v.maxt);\n    });\n\n    let tempLast = mintd.pop();\n    mintd.unshift(tempLast!);\n    tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n    tempLast = maxtd.pop();\n    maxtd.unshift(tempLast!);\n    let lastLevelNodes = new Array<TrendTree>();\n    let currentLevelNodes = new Array<TrendTree>();\n    let nodeNum = 1\n    const root = new TrendTree(null, true, 0, [mintd[0], minvd[0], maxvd[0], maxtd[0]], [0, 0, 0, 0]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new LevelIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n    for (let i = 1; i <= Math.log2(data.length); i++) {\n        for (let j = 0; j < 2 ** (i - 1); j++) {\n\n            const lastNode = lastLevelNodes[j];\n\n            //@ts-ignore\n            const firstNode = new TrendTree(lastNode, true, lastNode.index, [mintd[j * 2 + 2 ** i], minvd[j * 2 + 2 ** i], maxvd[j * 2 + 2 ** i], maxtd[j * 2 + 2 ** i]], [0, 0, 0, 0]);\n            //@ts-ignore\n            const secondNode = new TrendTree(lastNode, false, lastNode.index, [mintd[j * 2 + 1 + 2 ** i], minvd[j * 2 + 1 + 2 ** i], maxvd[j * 2 + 1 + 2 ** i], maxtd[j * 2 + 1 + 2 ** i]], [0, 0, 0, 0]);\n\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n            nodeNum += 2\n        }\n        levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    const levelDataManager = new LevelDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable);\n\n    return {\n        dataManager: levelDataManager,\n        trendTree: root\n    }\n}\nfunction constructMinMaxTrendTree(data: Array<any>, tableName?: string) {\n    console.log(data.length);\n    const levelIndex = new Array<LevelIndexObj>(Math.ceil(Math.log2(data.length)));\n    //const dataManager=new LevelDataManager()\n\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n\n    data.forEach(v => {\n\n        minvd.push(v.minvd);\n        maxvd.push(v.maxvd);\n    });\n\n\n    let tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n    let lastLevelNodes = new Array<TrendTree>();\n    let currentLevelNodes = new Array<TrendTree>();\n    let nodeNum = 1\n    const root = new TrendTree(null, true, 0, [0, minvd[0], maxvd[0], 0], [0, minvd[1], maxvd[1], 0]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new LevelIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n    for (let i = 1; i <= Math.log2(data.length); i++) {\n        for (let j = 0; j < 2 ** (i - 1); j++) {\n\n            const lastNode = lastLevelNodes[j];\n            //@ts-ignore\n            const yArray1: [number, number, number, number] = new Array(4);\n            //@ts-ignore\n            const yArray2: [number, number, number, number] = new Array(4);\n            yArray1[0] = lastNode.yArray[0];\n            yArray2[0] = lastNode.yArray[0] - lastNode.difference![0];\n            if (lastNode.difference![1] >= 0) {\n                yArray1[1] = lastNode.yArray[1] + lastNode.difference![1];\n                yArray2[1] = lastNode.yArray[1];\n            } else {\n                yArray1[1] = lastNode.yArray[1];\n                yArray2[1] = lastNode.yArray[1] - lastNode.difference![1];\n            }\n            if (lastNode.difference![2] >= 0) {\n                yArray1[2] = lastNode.yArray[2];\n                yArray2[2] = lastNode.yArray[2] - lastNode.difference![2];\n            } else {\n                yArray1[2] = lastNode.yArray[2] + lastNode.difference![2];\n                yArray2[2] = lastNode.yArray[2];\n            }\n            yArray1[3] = lastNode.yArray[3] + lastNode.difference![3];\n            yArray2[3] = lastNode.yArray[3];\n            //@ts-ignore\n            const firstNode = new TrendTree(lastNode, true, lastNode.index, yArray1, i === Math.log2(data.length) ? null : [0, minvd[j * 2 + 2 ** i], maxvd[j * 2 + 2 ** i], 0]);\n            //@ts-ignore\n            const secondNode = new TrendTree(lastNode, false, lastNode.index, yArray2, i === Math.log2(data.length) ? null : [0, minvd[j * 2 + 1 + 2 ** i], maxvd[j * 2 + 1 + 2 ** i], 0]);\n            // if (j === 0) {\n            //     levelIndex[i]=new LevelIndexObj(firstNode.level,true);\n            //     levelIndex[i].addLoadedDataRange(firstNode,[0,])\n            // }\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n            nodeNum += 2\n        }\n        levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n            // const k1 = currentLevelNodes[i + 1].yArray[2] - currentLevelNodes[i].yArray[1];\n            // const k2 = currentLevelNodes[i + 1].yArray[1] - currentLevelNodes[i].yArray[2];\n            // currentLevelNodes[i].trendRange = k1 < k2 ? [currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1], currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2]] : [currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2], currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1]];\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    const levelDataManager = new LevelDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable);\n    // levelDataManager.addNodeNum(nodeNum)\n    // console.log(levelDataManager.curNodeNum,levelDataManager.cacheMap.size)\n    return {\n        dataManager: levelDataManager,\n        trendTree: root\n    }\n}\n\n\nfunction constructMissTrendTree(data: Array<any>, tableName?: string) {\n    const levelIndex = new Array<LevelIndexObj>(Math.ceil(Math.log2(data.length)));\n    //const dataManager=new LevelDataManager()\n    const mintd: Array<number> = [];\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n    const maxtd: Array<number> = [];\n    data.forEach(v => {\n        mintd.push(v.minid);\n        minvd.push(v.minvd);\n        maxvd.push(v.maxvd);\n        maxtd.push(v.maxid);\n    });\n\n    let tempLast = mintd.pop();\n    mintd.unshift(tempLast!);\n    tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n    tempLast = maxtd.pop();\n    maxtd.unshift(tempLast!);\n    let lastLevelNodes = new Array<TrendTree>();\n    let currentLevelNodes = new Array<TrendTree>();\n    let nodeNum = 1\n    const root = new TrendTree(null, true, 0, [mintd[0], minvd[0], maxvd[0], maxtd[0]], [mintd[1], minvd[1], maxvd[1], maxtd[1]]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new LevelIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n    for (let i = 1; i <= Math.log2(data.length); i++) {\n        for (let j = 0; j < 2 ** (i - 1); j++) {\n\n            const lastNode = lastLevelNodes[j];\n            let dif = lastNode.difference!;\n            let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n            if (dif[1] === null && dif[2] === null) {\n                curNodeType = \"NULL\";\n            } else if (dif[0] === null && dif[1] === null) {\n                curNodeType = \"LEFTNULL\"\n            } else if (dif[2] === null && dif[3] === null) {\n                curNodeType = \"RIGHTNULL\";\n            }\n            lastNode.nodeType = curNodeType;\n            const yArray1: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n            const yArray2: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n            if (curNodeType === 'O') {\n                yArray1[0] = lastNode.yArray[0];\n                yArray2[0] = lastNode.yArray[0] - lastNode.difference![0];\n                yArray1[3] = lastNode.yArray[3] + lastNode.difference![3];\n                yArray2[3] = lastNode.yArray[3];\n                if (lastNode.difference![1] < 0) {\n                    yArray1[1] = lastNode.yArray[1];\n                    yArray2[1] = lastNode.yArray[1] - lastNode.difference![1];\n                } else {\n                    yArray1[1] = lastNode.yArray[1] + lastNode.difference![1];\n                    yArray2[1] = lastNode.yArray[1]\n                }\n                if (lastNode.difference![2] < 0) {\n                    yArray1[2] = lastNode.yArray[2] + lastNode.difference![2];\n                    yArray2[2] = lastNode.yArray[2];\n                } else {\n                    yArray1[2] = lastNode.yArray[2];\n                    yArray2[2] = lastNode.yArray[2] - lastNode.difference![2];\n                }\n            } else if (curNodeType == \"LEFTNULL\") {\n                yArray2[0] = lastNode.yArray[0]\n                yArray2[1] = lastNode.yArray[1];\n                yArray2[2] = lastNode.yArray[2];\n                yArray2[3] = lastNode.yArray[3];\n            } else if (curNodeType == \"RIGHTNULL\") {\n                yArray1[0] = lastNode.yArray[0]\n                yArray1[1] = lastNode.yArray[1];\n                yArray1[2] = lastNode.yArray[2];\n                yArray1[3] = lastNode.yArray[3];\n            } else if (curNodeType === 'NULL') {\n                //console.log(\"null node\")\n            }\n            else {\n                throw new Error(\"type error\")\n\n            }\n\n            const firstNode = new TrendTree(lastNode, true, lastNode.index, yArray1, i === Math.log2(data.length) ? null : [mintd[j * 2 + 2 ** i], minvd[j * 2 + 2 ** i], maxvd[j * 2 + 2 ** i], maxtd[j * 2 + 2 ** i]]);\n            if (lastNode.nodeType === 'LEFTNULL' || lastNode.nodeType === 'NULL') {\n                firstNode.nodeType = 'NULL';\n            }\n            //@ts-ignore\n            const secondNode = new TrendTree(lastNode, false, lastNode.index, yArray2, i === Math.log2(data.length) ? null : [mintd[j * 2 + 1 + 2 ** i], minvd[j * 2 + 1 + 2 ** i], maxvd[j * 2 + 1 + 2 ** i], maxtd[j * 2 + 1 + 2 ** i]]);\n            if (lastNode.nodeType === 'RIGHTNULL' || lastNode.nodeType == 'NULL') {\n                secondNode.nodeType = 'NULL';\n            }\n            // if (j === 0) {\n            //     levelIndex[i]=new LevelIndexObj(firstNode.level,true);\n            //     levelIndex[i].addLoadedDataRange(firstNode,[0,])\n            // }\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n            nodeNum += 2\n        }\n        levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n            // const k1 = currentLevelNodes[i + 1].yArray[2] - currentLevelNodes[i].yArray[1];\n            // const k2 = currentLevelNodes[i + 1].yArray[1] - currentLevelNodes[i].yArray[2];\n            // currentLevelNodes[i].trendRange = k1 < k2 ? [currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1], currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2]] : [currentLevelNodes[i + 1].yArray[1], currentLevelNodes[i].yArray[2], currentLevelNodes[i + 1].yArray[2], currentLevelNodes[i].yArray[1]];\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    const levelDataManager = new LevelDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable);\n    // levelDataManager.addNodeNum(nodeNum)\n    // console.log(levelDataManager.curNodeNum,levelDataManager.cacheMap.size)\n    return {\n        dataManager: levelDataManager,\n        trendTree: root\n    }\n}\nfunction constructMinMaxMissTrendTree(data: Array<any>, width: number, tableName?: string) {\n    const initLevel = Math.ceil(Math.log2(width));\n    //debugger\n    const levelIndex = new Array<LevelIndexObj>(Math.ceil(Math.log2(data.length)) + 1);\n\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n\n    data.forEach(v => {\n        minvd.push(v.minvd);\n        maxvd.push(v.maxvd);\n    });\n\n\n    let tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n\n    let lastLevelNodes = new Array<TrendTree>();\n    let currentLevelNodes = new Array<TrendTree>();\n    let nodeNum = 1;\n    //@ts-ignore\n    const root = new TrendTree(null, true, 0, [undefined, minvd[0], maxvd[0], undefined], [undefined, minvd[1], maxvd[1], undefined]);\n    lastLevelNodes.push(root);\n    levelIndex[0] = new LevelIndexObj(0, true);\n    levelIndex[0].addLoadedDataRange(root, [0, 0]);\n\n    let difIndex = 1;\n    for (let i = 1; i <= initLevel; i++) {\n        for (let j = 0; j < lastLevelNodes.length; j++) {\n            const lastNode = lastLevelNodes[j];\n            if (lastNode.nodeType === \"NULL\") {\n                //debugger\n                continue\n            }\n            if(difIndex===minvd.length){\n                debugger\n                throw new Error(\"diff index error\")\n            }\n            let dif = [minvd[difIndex], maxvd[difIndex]];\n            difIndex++;\n            let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n            if (dif[0] === null && dif[1] === null) {\n                throw new Error(\"data error\")\n                // curNodeType = \"NULL\";\n            } else if (dif[0] === null) {\n                curNodeType = \"LEFTNULL\"\n                lastNode.gapFlag='L'\n            } else if (dif[1] === null) {\n                \n                curNodeType = \"RIGHTNULL\";\n                lastNode.gapFlag='R'\n            }\n            if (curNodeType !== \"O\") {\n                lastNode.nodeType = curNodeType\n            }\n            const yArray1: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n            const yArray2: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n            if (curNodeType === 'O') {\n                if (dif[0] < 0) {\n                    yArray1[1] = lastNode.yArray[1];\n                    yArray2[1] = lastNode.yArray[1] - dif[0];\n                } else {\n                    yArray1[1] = lastNode.yArray[1] + dif[0];\n                    yArray2[1] = lastNode.yArray[1];\n                }\n                if (dif[1] < 0) {\n                    yArray1[2] = lastNode.yArray[2] + dif[1];\n                    yArray2[2] = lastNode.yArray[2];\n                } else {\n                    yArray1[2] = lastNode.yArray[2];\n                    yArray2[2] = lastNode.yArray[2] - dif[1];\n                }\n            } else if (curNodeType == \"LEFTNULL\") {\n                yArray2[1] = lastNode.yArray[1];\n                yArray2[2] = lastNode.yArray[2];\n            } else if (curNodeType == \"RIGHTNULL\") {\n                yArray1[1] = lastNode.yArray[1];\n                yArray1[2] = lastNode.yArray[2];\n            } else if (curNodeType === 'NULL') {\n                debugger\n                //console.log(\"null node\")\n            }\n            else {\n                throw new Error(\"type error\")\n\n            }\n\n            //@ts-ignore\n            const firstNode = new TrendTree(lastNode, true, lastNode.index, yArray1, null, \"O\");\n            if (curNodeType === \"LEFTNULL\") {\n                firstNode.nodeType = 'NULL';\n            }\n\n            //@ts-ignore\n            const secondNode = new TrendTree(lastNode, false, lastNode.index, yArray2, null,\"O\");\n            if (curNodeType === \"RIGHTNULL\") {\n                secondNode.nodeType = 'NULL';\n            }\n            currentLevelNodes.push(firstNode);\n            currentLevelNodes.push(secondNode);\n            nodeNum += 2\n\n\n        }\n        levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n        levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [currentLevelNodes[0].index, currentLevelNodes[currentLevelNodes.length-1].index]);\n        for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n            currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n            currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n\n        }\n        lastLevelNodes = currentLevelNodes;\n        currentLevelNodes = [];\n    }\n    if(difIndex!==minvd.length){\n        debugger\n        throw new Error(\"diff not uesed\")\n    }\n\n\n    // debugger\n    // for (let i = 1; i <= Math.ceil(Math.log2(data.length)); i++) {\n    //     for (let j = 0; j < 2 ** (i - 1); j++) {\n\n    //         const lastNode = lastLevelNodes[j];\n    //         let dif = lastNode.difference!;\n    //         let curNodeType: \"O\" | \"NULL\" | \"LEFTNULL\" | \"RIGHTNULL\" = 'O';\n    //         if (dif[1] === null && dif[2] === null) {\n    //             throw new Error(\"data error\")\n    //             // curNodeType = \"NULL\";\n    //         } else if (dif[1] === null) {\n    //             curNodeType = \"LEFTNULL\"\n    //         } else if (dif[2] === null) {\n    //             debugger\n    //             curNodeType = \"RIGHTNULL\";\n    //         }\n    //         if (curNodeType !== \"O\") {\n    //             lastNode.nodeType = curNodeType\n    //         }\n    //         const yArray1: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n    //         const yArray2: [any, any, any, any] = [undefined, undefined, undefined, undefined]\n    //         if (curNodeType === 'O') {\n    //             if (lastNode.difference![1] < 0) {\n    //                 yArray1[1] = lastNode.yArray[1];\n    //                 yArray2[1] = lastNode.yArray[1] - lastNode.difference![1];\n    //             } else {\n    //                 yArray1[1] = lastNode.yArray[1] + lastNode.difference![1];\n    //                 yArray2[1] = lastNode.yArray[1];\n    //             }\n    //             if (lastNode.difference![2] < 0) {\n    //                 yArray1[2] = lastNode.yArray[2] + lastNode.difference![2];\n    //                 yArray2[2] = lastNode.yArray[2];\n    //             } else {\n    //                 yArray1[2] = lastNode.yArray[2];\n    //                 yArray2[2] = lastNode.yArray[2] - lastNode.difference![2];\n    //             }\n    //         } else if (curNodeType == \"LEFTNULL\") {\n    //             yArray2[1] = lastNode.yArray[1];\n    //             yArray2[2] = lastNode.yArray[2];\n    //         } else if (curNodeType == \"RIGHTNULL\") {\n    //             yArray1[1] = lastNode.yArray[1];\n    //             yArray1[2] = lastNode.yArray[2];\n    //         } else if (curNodeType === 'NULL') {\n    //             debugger\n    //             //console.log(\"null node\")\n    //         }\n    //         else {\n    //             throw new Error(\"type error\")\n\n    //         }\n\n    //         //@ts-ignore\n    //         const firstNode = new TrendTree(lastNode, true, lastNode.index, yArray1, i === Math.log2(data.length) ? null : [undefined, minvd[j * 2 + 2 ** i], maxvd[j * 2 + 2 ** i], undefined]);\n    //         if (lastNode.nodeType === \"LEFTNULL\") {\n    //             debugger\n    //             firstNode.nodeType = 'NULL';\n    //         }\n    //         //@ts-ignore\n    //         const secondNode = new TrendTree(lastNode, false, lastNode.index, yArray2, i === Math.log2(data.length) ? null : [undefined, minvd[j * 2 + 1 + 2 ** i], maxvd[j * 2 + 1 + 2 ** i], undefined]);\n    //         if (lastNode.nodeType === \"RIGHTNULL\") {\n    //             debugger\n    //             secondNode.nodeType = 'NULL';\n    //         }\n    //         currentLevelNodes.push(firstNode);\n    //         currentLevelNodes.push(secondNode);\n    //         nodeNum += 2\n    //     }\n    //     levelIndex[i] = new LevelIndexObj(currentLevelNodes[0].level, true);\n    //     levelIndex[i].addLoadedDataRange(currentLevelNodes[0], [0, currentLevelNodes.length - 1]);\n    //     for (let i = 0; i < currentLevelNodes.length - 1; i++) {\n    //         currentLevelNodes[i].nextSibling = currentLevelNodes[i + 1];\n    //         currentLevelNodes[i + 1].previousSibling = currentLevelNodes[i];\n\n    //     }\n    //     lastLevelNodes = currentLevelNodes;\n    //     currentLevelNodes = [];\n    // }\n    //debugger\n    const levelDataManager = new LevelDataManager(levelIndex, tableName ? tableName : store.state.controlParams.currentTable);\n    return {\n        dataManager: levelDataManager,\n        trendTree: root\n    }\n}\n\nexport { constructRawMinMaxTrendTree, constructMinMaxMissTrendTree, constructMissTrendTree, initWaveletDecode, waveletDecode, constructTrendTree, constructHaarTree, constructMinMaxTrendTree }","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./GlobalHeader.vue?vue&type=style&index=0&id=3ff0d40c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LeftSideDataControlPanel.vue?vue&type=style&index=0&id=94fda858&scoped=true&lang=css\"","import TrendTree from \"@/helper/tend-query-tree\";\nimport { getIndexTime } from \"@/helper/format-data\";\n\nexport class NoUniformColObj {\n    col: number;\n    tStart: number;\n    tEnd: number;\n    semanticTStart: number;\n    semanticTEnd: number;\n    level: number;\n    startIndex: number;\n    endIndex: number;\n    index: number;\n    startV: number | undefined;\n    endV: number | undefined;\n    vRange: Array<number>;\n    width: number;\n    globalDataLen: number;\n    positionInfo: {\n        startX: number,\n        endX: number,\n        minX: number,\n        maxX: number;\n    }\n    minVTimeRange: Array<number>\n    maxVTimeRange: Array<number>\n    maxLevel: number;\n    dataName?: string;\n    isMis: boolean;\n    shapeMinMax: Array<number>;\n    shapeMinT: Array<Array<number>>;\n    shapeMaxT: Array<Array<number>>;\n    minNodes: Array<TrendTree>;\n    maxNodes: Array<TrendTree>;\n    realStart: number;\n    sementicInterval: number;\n    constructor(col: number, tStart: number, tEnd: number, level: number, width: number, globalDataLen: number, maxLevel: number, dataName?: string) {\n        this.isMis = false;\n        this.startV = undefined;\n        this.endV = undefined;\n        this.minVTimeRange = [0, 0];\n        this.maxVTimeRange = [0, 0];\n        this.vRange = [Infinity, -Infinity];\n        this.width = width;\n        this.col = col;\n        this.tStart = tStart;\n        this.tEnd = tEnd;\n        this.semanticTStart = tStart;\n        this.semanticTEnd = tEnd;\n        this.level = level;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        this.index = 0;\n       \n       \n        this.globalDataLen = globalDataLen;\n        this.maxLevel = maxLevel\n        this.positionInfo = {\n            startX: 0,\n            endX: 0,\n            minX: 0,\n            maxX: 0\n        }\n       \n        this.dataName = dataName;\n        this.shapeMinMax = [Infinity, -Infinity];\n        this.shapeMinT = [];\n        this.shapeMaxT = [];\n        this.minNodes = [];\n        this.maxNodes = [];\n        this.realStart = 0;\n        this.sementicInterval = 0;\n    }\n    rebuild(col: number, tStart: number, tEnd: number, level: number, width: number, globalDataLen: number, maxLevel: number, dataName?: string) {\n        this.width = width;\n        this.col = col;\n        this.tStart = tStart;\n        this.tEnd = tEnd;\n        this.level = level;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        this.index = 0;\n        this.startV = undefined;\n        this.endV = undefined;\n        this.vRange[0] = Infinity;\n        this.vRange[1] = -Infinity;\n        this.globalDataLen = globalDataLen;\n        this.maxLevel = maxLevel\n        this.positionInfo.startX = 0;\n        this.positionInfo.endX = 0;\n        this.positionInfo.minX = 0;\n        this.positionInfo.maxX = 0;\n        this.minVTimeRange[0] = 0;\n        this.minVTimeRange[1] = 0;\n        this.maxVTimeRange[0] = 0;\n        this.maxVTimeRange[1] = 0;\n        this.dataName = dataName;\n\n    }\n    setRealStartAndInterval(start: number, interval: number) {\n        this.realStart = start;\n        this.sementicInterval = interval;\n    }\n\n    setTStart(t: number) {\n        this.tStart = t;\n    }\n    setTEnd(t: number) {\n        this.tEnd = t;\n    }\n\n    setSemanticTStart(t: number) {\n        this.semanticTStart = t;\n        this.tStart = Math.floor((this.semanticTStart - this.realStart) / this.sementicInterval);\n    }\n    setSemanticTEnd(t: number) {\n        this.semanticTEnd = t;\n        this.tEnd = Math.floor((this.semanticTEnd - this.realStart) / this.sementicInterval) - 1;\n    }\n    getEndRange() {\n        const index = Math.floor(this.tEnd / 2);\n        if (index % 2 === 0) {\n            return [index, index + 1];\n        } else {\n            return [index - 1, index];\n        }\n    }\n    getStartRange() {\n        const index = Math.floor(this.tStart / 2);\n        if (index % 2 === 0) {\n            return [index, index + 1];\n        } else {\n            return [index - 1, index];\n        }\n    }\n    // 1 完全属于该列  2 与该列相交   3 大于该列 4 完全小于该列 5 不完全小于该列\n    isContain(p: TrendTree) {\n        const pL = p.level;\n        const pTRange = (2 ** this.maxLevel) / (2 ** pL);\n        const pTimeS = p.index * pTRange;\n        const pTimeE = pTRange + pTimeS - 1;\n        if (this.tStart === pTimeS) {\n            this.startV = p.yArray[0];\n        }\n        if (this.tEnd === pTimeE) {\n            this.endV = p.yArray[3];\n        }\n        if (pTimeE >= this.globalDataLen) {\n            if (pTimeS <= this.tEnd) {\n                if (p.yArray[1] < this.vRange[0]) {\n                    this.vRange[0] = p.yArray[1];\n                    const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                    this.minVTimeRange = [tRange.startT, tRange.endT];\n                }\n                if (p.yArray[2] > this.vRange[1]) {\n                    this.vRange[1] = p.yArray[2];\n                    const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                    this.maxVTimeRange = [tRange.startT, tRange.endT];\n                }\n            }\n            return 6;\n        }\n        if (pTimeS >= this.tStart && pTimeE <= this.tEnd) {\n            if (p.yArray[1] < this.vRange[0]) {\n                this.vRange[0] = p.yArray[1];\n                const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                this.minVTimeRange = [tRange.startT, tRange.endT];\n            }\n            if (p.yArray[2] > this.vRange[1]) {\n                this.vRange[1] = p.yArray[2];\n                const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                this.maxVTimeRange = [tRange.startT, tRange.endT];\n            }\n\n            return 1;\n        } else if (pTimeS <= this.tEnd && pTimeE > this.tEnd) {\n            return 2;\n        } else if (pTimeS > this.tEnd) {\n            return 3\n        } else if (pTimeE < this.tStart) {\n            // debugger\n            return 4;\n        } else if (pTimeE >= this.tStart) {\n            //debugger\n            return 5\n        } else {\n            console.log(p, this)\n\n            throw new Error(\"time out of range\")\n        }\n    }\n    isMissContain(p: TrendTree) {\n        const pL = p.level;\n        const pTRange = (2 ** this.maxLevel) / (2 ** pL);\n        const pTimeS = p.index * pTRange;\n        const pTimeE = pTRange + pTimeS - 1;\n\n       \n        if (pTimeE >= this.globalDataLen) {\n            return 6;\n        }\n        if (pTimeS >= this.tStart && pTimeE <= this.tEnd) {\n            if(pTimeS==this.tStart&&pTimeE==this.tEnd){\n                return 7;\n            }else if(pTimeS===this.tStart){\n                return 8;\n            }else if(pTimeE===this.tEnd){\n                return 9;\n            }else if(p.gapFlag!=='NO'){\n                return 10\n            }\n            //console.log(pTimeS,pTimeE,this.tStart,this.tEnd)\n            return 1;\n        } else if (pTimeS <= this.tEnd && pTimeE > this.tEnd) {\n            return 2;\n        } else if (pTimeS > this.tEnd) {\n            return 3\n        } else if (pTimeE < this.tStart) {\n            return 4;\n        } else if (pTimeE >= this.tStart) {\n            return 5\n        } else {\n            console.log(p, this)\n            throw new Error(\"time out of range\")\n        }\n    }\n    containColumnRange(p: TrendTree, type: number) {\n\n        if (p.nodeType === \"NULL\") {\n            return\n        }\n        if ( p.yArray[1] === undefined || p.yArray[2] === undefined) {\n            debugger\n            throw new Error(\"error val\")\n        }\n        const pL = p.level;\n        const pTRange = (2 ** this.maxLevel) / (2 ** pL);\n        const pTimeS = p.index * pTRange;\n        const pTimeE = pTRange + pTimeS - 1;\n        if (this.tStart === pTimeS) {\n            \n            // throw new Error(\"cannot use this val\")\n            // this.startV = p.yArray[0];\n        }\n        if (this.tEnd === pTimeE) {\n            \n            // throw new Error(\"cannot use this val\")\n            // this.endV = 0;//p.yArray[3];\n        }\n        if (type === 6) {\n            // console.log(pTimeE)\n            // console.log(this.globalDataLen)\n            // console.error(\"type 6\");\n            //throw new Error(\"type 8\")\n        }\n        if (type === 1||type===7||type===8||type===9) {\n            if (p.yArray[1] < this.vRange[0]) {\n                this.vRange[0] = p.yArray[1];\n                const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                this.minVTimeRange = [tRange.startT, tRange.endT];\n            }\n            if (p.yArray[2] > this.vRange[1]) {\n                this.vRange[1] = p.yArray[2];\n                const tRange = getIndexTime(p.level, p.index, this.maxLevel);\n                this.maxVTimeRange = [tRange.startT, tRange.endT];\n            }\n            // if (p.parent && p.parent.nodeType === 'LEFTNULL') {\n            //     this.startV = p.yArray[0];\n            // }\n            // if (p.parent && p.parent.nodeType === 'RIGHTNULL') {\n            //     if (this.endV! > p.yArray[3]) {\n            //         throw new Error(\"dddddddddddd\")\n            //     }\n            //     this.endV = p.yArray[3];\n            // }\n        }\n        return;\n    }\n   \n\n\n    \n   \n\n\n\n    addLastVal(v: number) {\n\n        if (v === undefined) {\n            return\n        }\n        this.endV = v\n    }\n    addFirstVal(v: number) {\n        if (v === undefined) {\n            return\n        }\n        this.startV = v;\n    }\n    forceMerge(val: number) {\n        if (val === undefined) {\n            throw new Error(\"undefine\")\n            return\n        }\n        if (val < this.vRange[0]) {\n            this.vRange[0] = val;\n        }\n        if (val > this.vRange[1]) {\n            this.vRange[1] = val;\n        }\n    }\n    mergeLast(k: number, b: number) {\n\n        const val = k * this.tEnd + b;\n        if (val === undefined) {\n            throw new Error(\"undefine\")\n            return\n        }\n        if (val > this.vRange[1]) {\n            this.vRange[1] = val;\n        }\n        if (val < this.vRange[0]) {\n            this.vRange[0] = val;\n        }\n        this.endV = val;\n    }\n    mergeFirst(k: number, b: number) {\n        const val = k * this.tStart + b;\n        if (val === undefined) {\n            throw new Error(\"undefine\")\n            return\n        }\n        if (val > this.vRange[1]) {\n            this.vRange[1] = val;\n        }\n        if (val < this.vRange[0]) {\n            this.vRange[0] = val;\n        }\n        this.startV = val;\n    }\n    checkIsMis() {\n        if (this.vRange[0] === Infinity || this.vRange[1] === -Infinity) {\n            this.isMis = true\n        }\n        return this.isMis\n    }\n\n}\n","import { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport TrendTree from \"./tend-query-tree\";\nimport { getIndexTime } from \"./format-data\"\nimport store from \"@/store\";\nimport HaarTree from \"./haar-tree\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport LevelIndexObj from \"@/model/level-index-obj\";\nimport { max } from \"d3\";\nimport { ElLoading } from 'element-plus'\n\n\nexport function getLevelData(start: TrendTree) {\n    const result: Array<Array<number>> = [];\n    let temp: TrendTree | null = start;\n    let { startT, endT } = getIndexTime(temp.level, temp.index, store.state.controlParams.tableMaxLevel);\n\n    while (temp != null) {\n        endT = getIndexTime(temp.level, temp.index, store.state.controlParams.tableMaxLevel).endT;\n        result.push(temp.yArray);\n        temp = temp.nextSibling;\n    }\n    return { data: result, start: startT, end: endT, l: start.level };\n}\n\nexport function getLevelDataForHaar(start: HaarTree) {\n    const result: Array<number> = [];\n    let temp: HaarTree | null = start;\n\n    while (temp != null) {\n        result.push(temp.value);\n        temp = temp.nextSibling\n    }\n\n    return result;\n}\nexport function isIntersect(first: Array<number>, second: Array<number>) {\n    const headMax = first[0] >= second[0] ? first[0] : second[0];\n    const tailMin = first[1] <= second[1] ? first[1] : second[1];\n    if (headMax <= tailMin) {\n        return {\n            isIntersect: true,\n            pos: headMax === first[0] ? 'second' : 'first'\n        }\n    } else {\n        return {\n            isIntersect: false,\n            pos: headMax === first[0] ? 'second' : 'first'\n        }\n    }\n}\n\n\n//first - second   [2,5]-[1,3]=[4,5] [0,5]-[0,3]=[4,5]  \nfunction computeDifRange(first: Array<number>, second: Array<number>): Array<Array<number>> {\n    if (first[0] >= second[0] && first[1] <= second[1]) {\n        return [];\n    }\n    if (first[0] >= second[0] && first[1] > second[1]) {\n        return [[second[1] + 1, first[1]]];\n    }\n    if (first[0] < second[0] && first[1] <= second[1]) {\n        return [[first[0], second[0] - 1]];\n    }\n    if (first[0] < second[0] && first[1] > second[1]) {\n        return [[first[0], second[0] - 1], [second[1] + 1, first[1]]];\n    }\n    return []\n}\n\nexport function computeNeedLoadDataRange(needRange: Array<number>, loadedSet: Array<Array<number>>) {\n\n    let currentNeedSet = [[needRange[0], needRange[1]]];\n    let nextNeedSet: Array<Array<number>> = [];\n    for (let i = 0; i < loadedSet.length; i++) {\n        for (let j = 0; j < currentNeedSet.length; j++) {\n            if (isIntersect(currentNeedSet[j], loadedSet[i]).isIntersect) {\n                nextNeedSet = [...nextNeedSet, ...computeDifRange(currentNeedSet[j], loadedSet[i])]\n            } else {\n                nextNeedSet.push(currentNeedSet[j]);\n            }\n        }\n        currentNeedSet = nextNeedSet;\n        nextNeedSet = [];\n    }\n    return currentNeedSet;\n}\nexport function checkSetType(timeBoxRange: Array<number>, chartRange: Array<number>) {\n    if (timeBoxRange[0] > chartRange[1] || timeBoxRange[1] < chartRange[0]) {\n        return 3;\n    }\n    if (chartRange[0] >= timeBoxRange[0] && chartRange[1] <= timeBoxRange[1]) {\n        return 1;\n    }\n    return 2;\n}\n\nexport function computeTimeRangeParent(maxLevel: number, width: number, timeRange: Array<number>) {\n    const timeWidth = timeRange[1] - timeRange[0] + 1;\n\n    const modNum = Math.floor(timeWidth / width);\n    const ceilPow = Math.floor(Math.log2(modNum));\n    if (modNum > 0) {\n        return [maxLevel - ceilPow, Math.floor(timeRange[0] / (2 ** (ceilPow)))]\n    } else {\n        return [maxLevel, timeRange[0]];\n    }\n}\n\nexport function computeTimeRangeChild(currentLevel: number, maxLevel: number, range: Array<number>) {\n    for (let i = currentLevel + 1; i <= maxLevel; i++) {\n        range[0] = range[0] * 2;\n        range[1] = range[1] * 2 + 1;\n    }\n    return range;\n}\n\nexport function computeTimeSE(currentLevel: number, width: number, timeRange: Array<number>, globalDataLen: number, maxLevel: number, name?: string) {\n    const res = new Array<NoUniformColObj>();\n    for (let i = 0; i < width; i++) {\n        res.push(new NoUniformColObj(i, timeRange[0], timeRange[1], currentLevel, width, globalDataLen, maxLevel, name));\n    }\n    const timeRangeLength = timeRange[1] - timeRange[0] + 1;\n    const startTime = timeRange[0];\n    const timeGap = Math.ceil(timeRangeLength / width);\n\n    const minSegmentIndex = Math.floor(width * (timeRange[0] - startTime) / timeRangeLength);\n    const maxSegmentIndex = Math.floor(width * (timeRange[1] - startTime) / timeRangeLength);\n\n    let previousSegmentIndex = minSegmentIndex;\n    for (let i = minSegmentIndex; i <= maxSegmentIndex; i++) {\n        const relativeStartTime = i * timeRangeLength / width + startTime;\n        const relativeEndTime = (i + 1) * timeRangeLength / width + startTime - 1;\n\n        const segmentStart = Math.ceil(relativeStartTime);\n        const segmentEnd = Math.floor(relativeEndTime);\n\n        if (segmentStart <= segmentEnd) {\n            res[i].setTStart(segmentStart);\n            res[i].setTEnd(segmentEnd);\n        }\n\n        previousSegmentIndex = i;\n    }\n    return res;\n}\nexport function computeTimeSE1(currentLevel: number, width: number, timeRange: Array<number>, globalDataLen: number, maxLevel: number, name?: string) {\n    const originIndex = [];\n    const res = new Array<NoUniformColObj>();\n    for (let i = 0; i < width; i++) {\n        res.push(new NoUniformColObj(i, timeRange[0], timeRange[1], currentLevel, width, globalDataLen, maxLevel, name));\n    }\n    const tR = timeRange[1] - timeRange[0] + 1;\n    const tS = timeRange[0];\n    for (let i = timeRange[0] + 1; i <= timeRange[1]; i++) {\n        const pre = Math.floor(width * ((i - 1) - tS) / tR);\n        const next = Math.floor(width * (i - tS) / tR);\n\n        if (pre !== next) {\n            originIndex.push(i)\n            res[pre].setTEnd(i - 1);\n            res[next].setTStart(i);\n        }\n    }\n\n    return res;\n}\n\nexport function computeColTimeRange(currentLevel: number, width: number, timeRange: Array<number>, globalDataLen: number, maxLevel: number) {\n    const res = new Array(width);\n    for (let i = 0; i < width; i++) {\n        res[i] = [0, 0];\n    }\n    const tR = timeRange[1] - timeRange[0] + 1;\n    const tS = timeRange[0];\n    for (let i = timeRange[0] + 1; i <= timeRange[1]; i++) {\n        const pre = Math.floor(width * ((i - 1) - tS) / tR);\n        const next = Math.floor(width * (i - tS) / tR);\n        if (pre !== next) {\n            res[pre][1] = i - 1;\n            res[next][0] = i;\n        }\n    }\n    return res;\n}\n\nexport function computeLosedDataRange(parents: Array<TrendTree>) {\n    const losedDataRange: Array<Array<number>> = [];\n    parents.forEach(v => {\n        losedDataRange.push([v.level + 1, v.index * 2, v.index * 2 + 1]);\n    });\n    return losedDataRange;\n}\nexport function computeLosedDataRangeV1(parents: Array<TrendTree>) {\n    const losedDataRange: Array<Array<number>> = [];\n\n    parents.forEach(v => {\n        if (v.nodeType !== 'O') {\n            console.log(\"compute losed node cut\");\n            console.log(v)\n        }\n        if (v._leftChild === null && v._rightChild === null && v.nodeType === 'O') {\n            losedDataRange.push([v.level, v.index, v.index]);\n        }\n    });\n    return losedDataRange;\n}\n\nexport function computeLosedDataRangeV1ForRawMinMax(parents: Array<TrendTree>) {\n    const losedDataRange: Array<Array<number>> = [];\n\n    parents.forEach(v => {\n        if (v._leftChild === null && v._rightChild === null && v.nodeType === 'O') {\n            losedDataRange.push([v.level, v.index, v.index]);\n        } else if (v._leftChild === null || v._rightChild === null) {\n            throw new Error(\"child invaild\")\n        }\n    });\n    return losedDataRange;\n}\n\nexport function canCut1(node: TrendTree, col1: NoUniformColObj, col2: NoUniformColObj, yScale: any) {\n    return false;\n}\n\nexport function canCut(node: TrendTree, col1: NoUniformColObj, col2: NoUniformColObj, yScale: any) {\n\n    // if (col1.vRange[0] === Infinity || col1.vRange[1] === -Infinity || col2.vRange[0] === Infinity || col2.vRange[1] === -Infinity) {\n    //     console.log(\"cant cut1\")\n    //     // return false;\n    // }\n    // if (node.nodeType === 'NULL') {\n\n    //     return true;\n    // }\n\n    // if (col1.vRange[0] === Infinity || col1.vRange[1] === -Infinity || col2.vRange[0] === Infinity || col2.vRange[1] === -Infinity) {\n    //     //console.log(\"cant cut\")\n    //     return false;\n    // }\n    // if ((node.nextSibling && node.nextSibling.nodeType === 'NULL') || (node.previousSibling && node.previousSibling.nodeType === \"NULL\")) {\n    //    // console.log(\"next null\")\n    //     return true\n    // }\n    // if (node.parent && (node.parent.nodeType === 'LEFTNULL' || node.parent.nodeType === 'RIGHTNULL')) {\n    //     //console.log(node)\n    //     return false;\n    // }\n    // console.log(\"1111111\")\n    // return false\n    if (node.nextSibling && node.nextSibling.nodeType === 'NULL') {\n        return false;\n    }\n    if (node.previousSibling && node.previousSibling.nodeType === 'NULL') {\n        return false;\n    }\n    const nodeRange0 = node.yArray[1];\n    const nodeRange1 = node.yArray[2];\n    if (col1.vRange[0] <= nodeRange0 && col1.vRange[1] >= nodeRange1 && col2.vRange[0] <= nodeRange0 && col2.vRange[1] >= nodeRange1) {\n        return true\n    } else {\n        return false;\n    }\n\n\n    // if (Math.ceil(yScale(col1.vRange[0])) <= nodeRange0 && Math.ceil(yScale(col1.vRange[1])) >= nodeRange1 && Math.ceil(yScale(col2.vRange[0])) <= nodeRange0 && Math.ceil(yScale(col2.vRange[1])) >= nodeRange1) {\n    //     return true\n    // } else {\n    //     return false;\n    // }\n    // if (col1.vRange[0] > col2.vRange[0]) {\n    //     const temp = col1;\n    //     col1 = col2;\n    //     col2 = temp;\n    // }\n    // if (col2.vRange[0] > col1.vRange[1]) {\n    //     return false;\n    // }\n    // const curRange = [col2.vRange[0], Math.min(col1.vRange[1], col2.vRange[1])];\n    // if (curRange[1] < curRange[0]) {\n    //     console.log(curRange);\n    //     throw new Error(\"range error\");\n    // }\n    // if (node.yArray[1]>= curRange[0] && node.yArray[2] <= curRange[1]) {\n    //     return true\n    // }\n    // return false;\n    // const curRange = [Math.floor(yScale(col2.vRange[0])), Math.ceil(yScale(Math.min(col1.vRange[1], col2.vRange[1])))];\n    // if (curRange[1] < curRange[0]) {\n    //     console.log(curRange)\n    //     throw new Error(\"range error\");\n    // }\n    // if (yScale(node.yArray[1]) >= curRange[0] && yScale(node.yArray[2]) <= curRange[1]) {\n    //     return true\n    // }\n    // return false;\n}\n\nexport function computeTimeFilterBaseLevelInfo(timeRange: Array<number>, viewWidth: number, maxLevel: number) {\n    if (timeRange[1] - timeRange[0] + 1 <= viewWidth) {\n        return [maxLevel, timeRange[0], timeRange[1]];\n    }\n    for (let l = Math.ceil(Math.log2(viewWidth)); l <= maxLevel; l++) {\n        const nodeTimeRange = 2 ** maxLevel / (2 ** l);\n        const timeStartIndex = Math.floor(timeRange[0] / nodeTimeRange);\n        const timeEndIndex = Math.floor(timeRange[1] / nodeTimeRange);\n        if (timeEndIndex >= 2 ** l) {\n            continue;\n        }\n        if (timeEndIndex - timeStartIndex + 1 >= viewWidth) {\n            return [l, timeStartIndex, timeEndIndex];\n        }\n    }\n    return [];\n}\n\n\nfunction indexIsContain(levelObj: LevelIndexObj, first: number, last: number) {\n    const loadedDataRange = levelObj.loadedDataRange;\n    for (let i = 0; i < loadedDataRange.length; i++) {\n        if (loadedDataRange[i][0] <= first && loadedDataRange[i][1] >= last) {\n            return true\n        }\n    }\n    return false\n}\nexport function deleteSavedNodeIndex(mr: LevelDataManager, dataRanges: Array<Array<Array<number>>>) {\n    const saveNodexIndex: Array<Array<Array<number>>> = []\n    for (let i = 0; i < dataRanges.length; i++) {\n        saveNodexIndex.push([])\n        const curLevelNeedLoadRange = dataRanges[i]\n        const curL = curLevelNeedLoadRange[0][0] + 1;\n        if (!mr.levelIndexObjs[curL]) {\n            for (let j = 0; j < curLevelNeedLoadRange.length; j++) {\n                saveNodexIndex[i].push(curLevelNeedLoadRange[j]);\n            }\n        } else {\n            if (mr.levelIndexObjs[curL].isFull) {\n                continue\n            } else {\n                const curLevelObjInfoRange = mr.levelIndexObjs[curL];\n                for (let j = 0; j < curLevelNeedLoadRange.length; j++) {\n                    const firstIndex = curLevelNeedLoadRange[j][0] * 2;\n                    const lastIndex = curLevelNeedLoadRange[j][0] * 2 + 1\n                    if (indexIsContain(curLevelObjInfoRange, firstIndex, lastIndex)) {\n                        continue\n                    } else {\n                        saveNodexIndex[i].push(curLevelNeedLoadRange[j])\n                    }\n                }\n            }\n        }\n    }\n    return saveNodexIndex;\n}\n\nexport function modeTimeStamp(originTimeStamp: number, sementicType: 'ms' | 's' | 'm' | 'h' | 'd' | 'W' | 'M' | 'Y') {\n    let modTimeStamp = originTimeStamp - originTimeStamp % getMSBySemanticType(sementicType)\n    return modTimeStamp;\n}\n\nexport function getMSBySemanticType(sementicType: 'ms' | 's' | 'm' | 'h' | 'd' | 'W' | 'M' | 'Y') {\n    switch (sementicType) {\n        case 'ms':\n            return 1;\n        case 's':\n            return 1000;\n        case 'm':\n            return (60 * 1000);\n        case 'h':\n            return (60 * 60 * 1000);\n        case 'd':\n            return (24 * 60 * 60 * 1000);\n        case 'W':\n            return (7 * 24 * 60 * 60 * 1000);\n        case 'M':\n            return (30 * 24 * 60 * 60 * 1000);\n        case 'Y':\n            return (12 * 30 * 24 * 60 * 60 * 1000);\n        default:\n            throw new Error(\"sermantic type error\");\n    }\n}\n// semanticInterval 使用数值ms 做为单位, timeStart 为time series 真是的起始时间单位为ms, ser\n\n/**\n * compute column real time range\n * @param currentLevel 使用数值ms 做为单位\n * @param width \n * @param timeRange 结点的编号范围\n * @param timeStart 数据采集的真正的开始时间 timestamp ms\n * @param globalDataLen \n * @param maxLevel \n * @param semanticInterval 数据采集的真实的时间间隔 ms\n * @param semanticType 语义缩放的尺度\n * @param name \n * @returns \n */\nexport function computeSemanticColumn(currentLevel: number, width: number, timeRange: Array<number>, timeStart: number, globalDataLen: number, maxLevel: number, semanticInterval: number, semanticType: 'ms' | 's' | 'm' | 'h' | 'd' | 'W' | 'M' | 'Y', name?: string) {\n    const semanticTypeRange = getMSBySemanticType(semanticType)\n    timeStart = timeStart + timeRange[0] * semanticInterval;\n    const res = [];\n    const columnNum = Math.ceil((timeRange[1] - timeRange[0]) * semanticInterval / semanticTypeRange);\n    const modeStart = modeTimeStamp(timeStart, semanticType);\n    for (let i = 0; i < columnNum; i++) {\n        res.push(new NoUniformColObj(i, Infinity, -Infinity, currentLevel, width, globalDataLen, maxLevel, name));\n    }\n    res[0].setRealStartAndInterval(timeStart, semanticInterval);\n    res[0].setSemanticTStart(timeStart);\n    res[0].setSemanticTEnd(modeStart + semanticTypeRange - 1);\n    const newSenStart = modeStart + semanticTypeRange;\n    for (let i = 1; i < columnNum; i++) {\n        res[i].setRealStartAndInterval(timeStart, semanticInterval);\n        res[i].setSemanticTStart(newSenStart + (i - 1) * semanticTypeRange);\n        res[i].setSemanticTEnd(newSenStart + i * semanticTypeRange - 1);\n    }\n    return res;\n}\n\nexport function convertWaveletToRawTableName(wName: string) {\n    if (!wName.includes(\"wavelet\")) {\n        return wName;\n    }\n    const rowTableName = wName.split(\"_wavelet\").join(\"\");\n    return rowTableName;\n}\n\nlet userCookie = \"\";\n\nexport function getUserCookie() {\n    if (userCookie === \"\") {\n        userCookie = localStorage.getItem(\"om3_cookie\")!;\n    }\n    return userCookie\n}\n\n\n// Function to convert ArrayBuffer to Base64 string\nexport function arrayBufferToBase64(arrayBuffer:ArrayBuffer) {\n    let binary = '';\n    const bytes = new Uint8Array(arrayBuffer);\n    const len = bytes.byteLength;\n    \n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    \n    return btoa(binary);\n  }\n  \n  // Function to convert Base64 string to ArrayBuffer\nexport function base64ToArrayBuffer(base64:string) {\n    const binaryString = atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    \n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    \n    return bytes.buffer;\n  }\n  \nexport function openLoading(msg:string){\n    const loading = ElLoading.service({\n        lock: true,\n        text: msg,\n        background: 'rgba(0, 0, 0, 0.7)',\n      })\n      return loading\n}","import { initWaveletDecode,initHaarDecode } from './wavlet-decoder';\nimport * as d3 from 'd3';\nimport { NoUniformColObj } from '@/model/non-uniform-col-obj';\n\n\nexport function getIndexTime(l: number, index: number, maxLevel: number) {\n    const gap = 2 ** maxLevel / (2 ** l)\n    const startTime = index * gap;\n    const endTime = startTime + gap - 1;\n    return {\n        startT: startTime,\n        endT: endTime\n    }\n}\n\nexport function getX(width: number, tS: number, tE: number, t: number, maxLevel: number) {\n    return width * (t - tS) / (tE - tS + 1);\n}\n\n\nexport function formatSampleM4Data(data: Array<any>, startTime: number, endTime: number, width: number) {\n    console.log(startTime, endTime);\n    const columnArray: any = [];\n    for (let i = 0; i < width; i++) {\n        columnArray.push({ min: Infinity, max: -Infinity });\n    }\n    let result = data.map((v) => {\n        v.x = width * (v.t - startTime) / (endTime - startTime + 1);\n        v.y = v.v;\n        if (v.y > columnArray[Math.floor(v.x)].max) {\n            columnArray[Math.floor(v.x)].max = v.y;\n        }\n        if (v.y < columnArray[Math.floor(v.x)].min) {\n            columnArray[Math.floor(v.x)].min = v.y;\n        }\n        return v;\n    });\n    // console.log(columnArray);\n    return result;\n}\nexport function formatSampleArgM4Data(data: Array<any>, startTime: number, endTime: number, width: number) {\n    const resultArray: Array<any> = [];\n    data.forEach(v => {\n        const x = Math.floor(width * (v.mint - startTime) / (endTime - startTime + 1));\n        const y1 = v.mint_v;\n        let y2;\n        let y3;\n        if (v.minv_t < v.maxv_t) {\n            y2 = v.minv;\n            y3 = v.maxv;\n        } else {\n            y2 = v.maxv;\n            y3 = v.minv;\n        }\n        const y4 = v.maxt_v;\n        resultArray.push({ x, y: y1, v: y1 });\n        resultArray.push({ x, y: y2, v: y2 });\n        resultArray.push({ x, y: y3, v: y3 });\n        resultArray.push({ x, y: y4, v: y4 });\n    });\n    return resultArray;\n}\n\nexport function formatDataForWaveletBrush(data: {\n    mint: Array<any>,\n    minv: Array<any>,\n    maxv: Array<any>,\n    maxt: Array<any>\n}, levelInfo: Array<number>) {\n    const dif = levelInfo[0] - levelInfo[1];\n    console.log(dif);\n    const result = new Array<any>()\n\n    if (dif === 0) {\n        data.mint.forEach((v, i) => {\n            result.push({ x: i, y: data.mint[i], v: data.mint[i] });\n        });\n    } else if (dif === 1) {\n        data.mint.forEach((v, i) => {\n            result.push({ x: i, y: data.mint[i], v: data.mint[i] });\n            result.push({ x: i, y: data.maxt[i], v: data.maxt[i] });\n        });\n    } else {\n        data.mint.forEach((v, i) => {\n            result.push({ x: i, y: data.mint[i], v: data.mint[i] });\n            result.push({ x: i, y: data.minv[i], v: data.minv[i] });\n            result.push({ x: i, y: data.maxv[i], v: data.maxv[i] });\n            result.push({ x: i, y: data.maxt[i], v: data.maxt[i] });\n        });\n    }\n    const maxv = d3.max(result, d => d.v);\n    const minv = d3.min(result, d => d.v);\n    return { result, rowData: [data.mint, data.minv, data.maxv, data.maxt], maxv, minv };\n}\n\nexport function formatToRenderDataForTrend(levelInfo: Array<number>, data: { data: Array<Array<number>>, start: number, end: number, l: number }, width: number) {\n    const result = new Array<any>();\n\n    const dif = levelInfo[0] - levelInfo[1]\n    const startT = getIndexTime(levelInfo[1], data.start, levelInfo[0]).startT;\n    const endT = getIndexTime(levelInfo[1], data.start + data.data.length - 1, levelInfo[0]).endT;\n    data.data.forEach((v, i) => {\n        const indexTime = getIndexTime(levelInfo[1], data.start + i, levelInfo[0]);\n        if (dif === 0) {\n            result.push({ x: getX(width, startT, endT, indexTime.startT, levelInfo[0]), y: v[0], v: v[0] });\n        } else if (dif === 1) {\n            result.push({ x: getX(width, startT, endT, indexTime.startT, levelInfo[0]), y: v[0], v: v[0] });\n            result.push({ x: getX(width, startT, endT, indexTime.endT, levelInfo[0]), y: v[3], v: v[3] });\n        } else {\n            const startX = getX(width, startT, endT, indexTime.startT, levelInfo[0]);\n            const endX = getX(width, startT, endT, indexTime.endT, levelInfo[0])\n            const midX1 = getX(width, startT, endT, indexTime.startT + 1, levelInfo[0])\n            const midX2 = getX(width, startT, endT, indexTime.endT - 1, levelInfo[0]);\n            if (v[0] < v[3]) {\n                result.push({ x: startX, y: v[0], v: v[0] });\n                result.push({ x: midX1, y: v[1], v: v[1] });\n                result.push({ x: midX2, y: v[2], v: v[2] });\n                result.push({ x: endX, y: v[3], v: v[3] });\n            } else {\n                result.push({ x: startX, y: v[0], v: v[0] });\n                result.push({ x: midX1, y: v[2], v: v[2] });\n                result.push({ x: midX2, y: v[1], v: v[1] });\n                result.push({ x: endX, y: v[3], v: v[3] });\n            }\n\n        }\n    });\n    const maxv = d3.max(result, d => d.v);\n    const minv = d3.min(result, d => d.v);\n    return { renderData: result, maxv, minv };\n}\n\nexport function getGlobalMinMaxInfo(data: { data: Array<Array<number>>, start: number, end: number, l: number }){\n    const maxv = d3.max(data.data, d => d[2]);\n    const minv = d3.min(data.data, d => d[1]);\n    return { maxv, minv };\n}\n\nexport function formatToRenderDataForHaar(data:Array<number>,width:number){\n    const result=new Array<{x:number,y:number,v:number}>();\n    let maxv=-Infinity;\n    let minv=Infinity;\n    data.forEach((v,i)=>{\n        maxv=Math.max(v,maxv);\n        minv=Math.min(v,minv);\n        result.push({\n            x:i,\n            v:v,\n            y:v\n        });\n    });\n    return {renderData:result,maxv,minv};\n}\n\nexport function fomatRenderDataForLittleThanWidth(timeRange: Array<number>, width: number, data: { data: Array<[number, number, number, number]>, start: number, end: number, l: number }) {\n    if (timeRange[1] - timeRange[0] + 1 !== data.data.length) {\n        throw new Error(\"data not match time range\");\n    }\n    const result = new Array<any>();\n    const xScale = d3.scaleLinear().domain([0, data.data.length - 1]).range([0, width - 1]);\n    data.data.forEach((v, i) => {\n        result.push({ x: xScale(i), y: v[0], v: v[0] });\n    });\n    return result;\n}\n\nexport function formatRenderDataForViewChange(levelInfo: Array<number>, data: { data: Array<Array<number>>, start: number, end: number, l: number }, width: number) {\n    const result = new Array<any>();\n    const noPowResult = new Array<any>();\n    const dif = levelInfo[0] - levelInfo[1];\n    const startT = getIndexTime(levelInfo[1], data.start, levelInfo[0]).startT;\n    const endT = getIndexTime(levelInfo[1], data.start + data.data.length - 1, levelInfo[0]).endT;\n    data.data.forEach((v, i) => {\n        const indexTime = getIndexTime(levelInfo[1], data.start + i, levelInfo[0])\n        if (dif === 0) {\n            result.push({ x: getX(width, startT, endT, indexTime.startT, levelInfo[0]), y: v[0], v: v[0] });\n            noPowResult.push({ x: i, y: v[0], v: v[0] });\n        } else if (dif === 1) {\n            result.push({ x: getX(width, startT, endT, indexTime.startT, levelInfo[0]), y: v[0], v: v[0] });\n            result.push({ x: getX(width, startT, endT, indexTime.endT, levelInfo[0]), y: v[3], v: v[3] });\n            noPowResult.push({ x: 2 * i, y: v[0], v: v[0] });\n            noPowResult.push({ x: 2 * i + 1, y: v[3], v: v[3] });\n        } else {\n            const startX = getX(width, startT, endT, indexTime.startT, levelInfo[0]);\n            const endX = getX(width, startT, endT, indexTime.endT, levelInfo[0])\n            const midX1 = getX(width, startT, endT, indexTime.startT + 1, levelInfo[0])\n            const midX2 = getX(width, startT, endT, indexTime.endT - 1, levelInfo[0]);\n            if (v[0] < v[3]) {\n                result.push({ x: startX, y: v[0], v: v[0] });\n                result.push({ x: midX1, y: v[1], v: v[1] });\n                result.push({ x: midX2, y: v[2], v: v[2] });\n                result.push({ x: endX, y: v[3], v: v[3] });\n            } else {\n                result.push({ x: startX, y: v[0], v: v[0] });\n                result.push({ x: midX1, y: v[2], v: v[2] });\n                result.push({ x: midX2, y: v[1], v: v[1] });\n                result.push({ x: endX, y: v[3], v: v[3] });\n            }\n            noPowResult.push({ x: 4 * i, y: v[0], v: v[0] });\n            noPowResult.push({ x: 4 * i + 1, y: v[1], v: v[1] });\n            noPowResult.push({ x: 4 * i + 2, y: v[2], v: v[2] });\n            noPowResult.push({ x: 4 * i + 3, y: v[3], v: v[3] });\n        }\n\n    });\n    const maxv = d3.max(result, d => d.v);\n    const minv = d3.min(result, d => d.v);\n    return { powRenderData: result, noPowResult, maxv, minv };\n}\n\nexport function formatNonPowDataForViewChange(nonUniformColObjs: Array<NoUniformColObj>, width: number, globalDataLen: number, yScale: any) {\n    const result = [];\n    const logRes = [];\n    const startT = nonUniformColObjs[0].tStart;\n    const endT = nonUniformColObjs[nonUniformColObjs.length - 1].tEnd;\n    for (let i = 0; i < nonUniformColObjs.length; i++) {\n        const tempRes = {\n            startV: null,\n            endV: null,\n            min: Infinity,\n            max: -Infinity,\n        }\n        const maxLevel = Math.log2(globalDataLen);\n        const startX = getX(width, startT, endT, nonUniformColObjs[i].tStart, maxLevel);\n\n        const endX = getX(width, startT, endT, nonUniformColObjs[i].tEnd, maxLevel);\n        const midX1 = startX+0.1//getX(width, startT, endT, nonUniformColObjs[i].tStart+1, maxLevel);\n        const midX2 = endX-0.1//getX(width, startT, endT, nonUniformColObjs[i].tEnd -1, maxLevel);\n        nonUniformColObjs[i].positionInfo.startX = startX;\n        nonUniformColObjs[i].positionInfo.endX = endX;\n        nonUniformColObjs[i].positionInfo.minX = midX1;\n        nonUniformColObjs[i].positionInfo.maxX = midX2;\n        if (nonUniformColObjs[i].startV) {\n            result.push({ x: getX(width, startT, endT, nonUniformColObjs[i].tStart, Math.log2(globalDataLen)), y: nonUniformColObjs[i].startV, v: nonUniformColObjs[i].startV });\n           \n        }\n\n        if (nonUniformColObjs[i].startV !== undefined && nonUniformColObjs[i].endV !== undefined) {\n            if (nonUniformColObjs[i].startV! < nonUniformColObjs[i].endV!) {\n                result.push({ x: midX1, y: nonUniformColObjs[i].vRange[0], v: nonUniformColObjs[i].vRange[0] });\n             \n                result.push({ x: midX2, y: nonUniformColObjs[i].vRange[1], v: nonUniformColObjs[i].vRange[1] });\n              \n            } else {\n                result.push({ x: midX1, y: nonUniformColObjs[i].vRange[1], v: nonUniformColObjs[i].vRange[1] });\n               \n                result.push({ x: midX2, y: nonUniformColObjs[i].vRange[0], v: nonUniformColObjs[i].vRange[0] });\n               \n            }\n\n        } else {\n            result.push({ x: startX, y: nonUniformColObjs[i].vRange[0], v: nonUniformColObjs[i].vRange[0] });\n            \n            result.push({ x: endX, y: nonUniformColObjs[i].vRange[1], v: nonUniformColObjs[i].vRange[1] });\n           \n        }\n\n\n        if (nonUniformColObjs[i].endV) {\n            result.push({ x: endX, y: nonUniformColObjs[i].endV, v: nonUniformColObjs[i].endV });\n           \n        }\n    }\n   \n    return result;\n}\n\nexport function formatHaarInitData(data: Array<any>, levelInfo: Array<number>){\n    const haarDif: Array<number> = [];\n    const dif = levelInfo[0] - levelInfo[1];\n    data.forEach(v => {\n        haarDif.push(v.dif);\n       \n    });\n\n    let tempLast = haarDif.pop();\n    haarDif.unshift(tempLast!);\n   \n    const tempResult = initHaarDecode(haarDif);\n    const result = new Array<any>();\n    tempResult.forEach((v,i)=>{\n        result.push({x:i,v:v,y:v})\n    });\n    return result;\n}\n\nexport function formatSampleWaveletInitData(data: Array<any>, levelInfo: Array<number>) {\n    const mintd: Array<number> = [];\n    const minvd: Array<number> = [];\n    const maxvd: Array<number> = [];\n    const maxtd: Array<number> = [];\n    const dif = levelInfo[0] - levelInfo[1];\n    data.forEach(v => {\n        mintd.push(v.minid);\n        minvd.push(v.minvd);\n        maxvd.push(v.maxvd);\n        maxtd.push(v.maxid);\n    });\n\n    let tempLast = mintd.pop();\n    mintd.unshift(tempLast!);\n    tempLast = minvd.pop();\n    minvd.unshift(tempLast!);\n    tempLast = maxvd.pop();\n    maxvd.unshift(tempLast!);\n    tempLast = maxtd.pop();\n    maxtd.unshift(tempLast!);\n    const tempResult = initWaveletDecode({ mintd, minvd, maxvd, maxtd });\n    const result = new Array<any>();\n    if (dif === 0) {\n        tempResult.maxt.forEach((v, i) => {\n            result.push({ x: i, y: tempResult.mint[i], v: tempResult.mint[i] });\n        });\n    } else if (dif === 1) {\n        tempResult.maxt.forEach((v, i) => {\n            result.push({ x: i, y: tempResult.mint[i], v: tempResult.mint[i] });\n            result.push({ x: i, y: tempResult.maxt[i], v: tempResult.maxt[i] });\n        });\n    } else {\n        tempResult.maxt.forEach((v, i) => {\n            result.push({ x: i, y: tempResult.mint[i], v: tempResult.mint[i] });\n            result.push({ x: i, y: tempResult.minv[i], v: tempResult.minv[i] });\n            result.push({ x: i, y: tempResult.maxv[i], v: tempResult.maxv[i] });\n            result.push({ x: i, y: tempResult.maxt[i], v: tempResult.maxt[i] });\n        });\n    }\n\n    return { result, rowData: [tempResult.mint, tempResult.minv, tempResult.maxv, tempResult.maxt] };\n}\n\nexport function formatDataForBaseData(data: Array<any>, width: number, startTime: number, endTime: number) {\n\n    data.forEach((v, i) => {\n        v.x = (width) * (v.t - startTime) / (endTime - startTime + 1);\n        v.y = v.v;\n    });\n    return data;\n}\n\nexport function formatDataForMultiM4(data:Array<{t:number,v:number}>,width:number,startTime:number,endTime:number){\n    const result=new Array<{t:number,v:number,x:number,y:number}>();\n    let maxV=-Infinity;\n    let minV=Infinity;\n    data.forEach(v=>{\n        maxV=Math.max(maxV,v.v);\n        minV=Math.min(minV,v.v);\n        result.push({t:v.t,v:v.v,x:(width) * (v.t - startTime) / (endTime - startTime + 1),y:0});\n    });\n    return {minv:minV,maxv:maxV,res:result};\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"d-flex flex-column h-100\" }\nconst _hoisted_2 = { class: \"gloal-content flex-grow-1 d-flex flex-row mx-2\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_global_header = _resolveComponent(\"global-header\")!\n  const _component_left_side_data_control_panel = _resolveComponent(\"left-side-data-control-panel\")!\n  const _component_dispaly_content_panel = _resolveComponent(\"dispaly-content-panel\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_global_header),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_left_side_data_control_panel),\n      _createVNode(_component_dispaly_content_panel)\n    ])\n  ]))\n}","<template>\n  <nav class=\"navbar navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">\n       \n       OM<sup>3</sup>\n      </a>\n\n      <a href=\"https://docs.google.com/document/d/1OFRmg6ShyKj1i4w2zbHGIOyjUxGR7tcvreKuWCIerHk/edit?usp=sharing\">user guide</a>\n    \n      <!-- <button type=\"button\" class=\"btn btn-secondary\" @click.prevent=\"openImportPanel\">ImportData</button> -->\n    </div>\n   \n  </nav>\n</template>\n<script>\nimport { defineComponent, ref } from \"vue\";\nexport default defineComponent({\n  name: \"GlobalHeader\",\n  components: {},\n  props: {},\n  setup() {\n    const isVisible = ref(false);\n    const closePanel = () => {\n      isVisible.value = !isVisible.value;\n    };\n    const openImportPanel=()=>{\n      isVisible.value=true\n    }\n    return {\n      isVisible,\n      closePanel,\n      openImportPanel\n    };\n  },\n});\n</script>\n<style scoped>\n.navbar{\n  min-width: 1520px;\n}\n</style>","import { render } from \"./GlobalHeader.vue?vue&type=template&id=3ff0d40c&scoped=true\"\nimport script from \"./GlobalHeader.vue?vue&type=script&lang=js\"\nexport * from \"./GlobalHeader.vue?vue&type=script&lang=js\"\n\nimport \"./GlobalHeader.vue?vue&type=style&index=0&id=3ff0d40c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ff0d40c\"]])\n\nexport default __exports__","<template>\n  <div class=\"data-control-panel radius\">\n    <div class=\"choose_container choose_mode_container ms-1\">\n      <el-radio-group v-model=\"chooseMode\" size=\"medium\" @change=\"handleModeChange\">\n        <el-radio-button label=\"Default\"></el-radio-button>\n        <el-radio-button label=\"Custom\"></el-radio-button>\n      </el-radio-group>\n    </div>\n\n    <div class=\"dbsetting-control-container mt-2\" v-if=\"chooseMode === 'Custom'\">\n      <div>\n        <el-switch v-model=\"isOpenDbSetup\" name=\"DB Setup\" />\n        <label>{{ \"DB Setup\" }}</label>\n      </div>\n      <div class=\"mt-2 \" v-if=\"isOpenDbSetup\">\n        <el-input v-model=\"customDBHostName\" type=\"string\" placeholder=\"DB Host Name\" />\n        <el-input v-model=\"customUserName\" type=\"string\" placeholder=\"User Name\" />\n        <el-input v-model=\"customDBPassword\" type=\"password\" placeholder=\"DB Password\" />\n        <el-input v-model=\"customDBName\" type=\"string\" placeholder=\"DB Name\" />\n        <div><el-button class=\"btn mt-2\" v-on:click=\"handleTestConn\" type=\"primary\">{{ testConnectResult }}</el-button>\n        </div>\n        <div><el-button class=\"btn mt-2 \" v-on:click=\"createCustomDBConn\" type=\"primary\">{{ createDBConn }}</el-button>\n        </div>\n        <div><el-button class=\"btn mt-2\" v-on:click=\"initOM3DBEnv\" type=\"primary\">{{ initOm3DB }}</el-button></div>\n        <div>\n          <el-popconfirm title=\"This will clear all om3 table, are you sure you want to do this?\"\n            @confirm=\"clearOM3DBEnv\">\n            <template #reference>\n              <el-button class=\"btn mt-2\" type=\"primary\">{{ clearOm3DB }}</el-button>\n            </template>\n          </el-popconfirm>\n        </div>\n        <div><el-button class=\"btn mt-2\" v-on:click=\"clearIndexFlag\" type=\"primary\">Clear Flag</el-button></div>\n      </div>\n    </div>\n\n    <div class=\"om3-transform-control-container mt-2\" v-if=\"chooseMode === 'Custom'\">\n      <div>\n        <el-switch v-model=\"isOpenTransform\" name=\"OM3 Transform\" />\n        <label>{{ \"Data Transform\" }}</label>\n      </div>\n      <div class=\"mt-2 \" v-if=\"isOpenTransform\">\n\n        <div><el-button class=\"btn mt-2\" text @click=\"dialogFormVisible = true\" type=\"primary\"\n            v-if=\"chooseLineType === 'Single'\">Choose Data</el-button>\n        </div>\n        <el-dialog v-model=\"dialogFormVisible\" title=\"Single Line Transform\">\n          <label>Please choose a table,which inclues two columns(t interger,v double precision)(t should be a positive\n            integer starting from zero)</label>\n          <el-form>\n            <el-form-item label=\"Table\">\n              <el-select v-model=\"singleLineTableName\" placeholder=\"Please select a table for transform\">\n                <el-option v-for=\"(item, idx) in allCustomDBTables\" :key=\"idx\" :label=\"item\" :value=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <label>Please select a date and time, which will be linearly mapped to t during visualization </label>\n            <el-form-item label=\"Date Range\">\n              <el-date-picker v-model=\"lineDateRange\" type=\"daterange\" start-placeholder=\"Start Date\"\n                end-placeholder=\"End Date\" :default-value=\"[new Date(2010, 9, 1), new Date(2010, 10, 1)]\" />\n            </el-form-item>\n            <el-form-item label=\"Time Range\">\n              <div class=\"example-basic\">\n                <el-time-picker v-model=\"lineStartTime\" arrow-control placeholder=\"Start Time\" />\n                <el-time-picker v-model=\"lineEndTime\" arrow-control placeholder=\"End Time\" />\n              </div>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n              <el-button type=\"primary\" v-loading.fullscreen.lock=\"fullscreenLoading\"\n                v-on:click=\"performTransformForSingeLine\">\n                Confirm\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n\n        <div><el-button class=\"btn mt-2\" text @click=\"multiLineTransformDialogVisible = true\" type=\"primary\"\n            v-if=\"chooseLineType === 'Multi'\">Choose Data</el-button>\n        </div>\n        <el-dialog v-model=\"multiLineTransformDialogVisible\" title=\"Multi Line Transform\">\n\n          <label>Please choose tables,which inclues two columns(t interger,v double precision)(t should be a positive\n            integer starting from zero). All the data you choose should be the same length</label>\n          <el-form>\n            <el-form-item label=\"Table\">\n              <el-select class=\"multi-line-select\" v-model=\"multiLineTableNames\" multiple\n                placeholder=\"Please select table for transform\">\n                <el-option v-for=\"(item, idx) in allCustomDBTables\" :key=\"idx\" :label=\"item\" :value=\"item\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-input class=\"mb-4\" v-model=\"customMultiLineClassName\"\n              placeholder=\"Please define a group for the lines you select\" clearable />\n            <label>Please select a date and time, which will be linearly mapped to t during visualization </label>\n            <el-form-item label=\"Date Range\">\n              <el-date-picker v-model=\"lineDateRange\" type=\"daterange\" start-placeholder=\"Start Date\"\n                end-placeholder=\"End Date\" :default-value=\"[new Date(2010, 9, 1), new Date(2010, 10, 1)]\" />\n            </el-form-item>\n            <el-form-item label=\"Time Range\">\n              <div class=\"example-basic\">\n                <el-time-picker v-model=\"lineStartTime\" arrow-control placeholder=\"Start Time\" />\n                <el-time-picker v-model=\"lineEndTime\" arrow-control placeholder=\"End Time\" />\n              </div>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"multiLineTransformDialogVisible = false\">Cancel</el-button>\n              <el-button type=\"primary\" v-loading.fullscreen.lock=\"fullscreenLoading\"\n                v-on:click=\"perfromTransformForMulitLine\">\n                Confirm\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n      </div>\n    </div>\n\n    <div class=\"choose_container choose_line_type_container ms-1\">\n      <el-radio-group v-model=\"chooseLineType\" size=\"medium\" @change=\"handleLineTypeChange\">\n        <el-radio-button label=\"Single\"></el-radio-button>\n        <el-radio-button label=\"Multi\"></el-radio-button>\n      </el-radio-group>\n\n    </div>\n    <div class=\"progressive-container ms-1 mt-2\" v-if=\"chooseLineType==='Single'\">\n      <span>Progressive</span>\n        <el-switch v-model=\"progressive\" name=\"Progressive\"  @change=\"handleProgressiveChange\"/>\n    </div>\n\n\n\n    <div class=\"table-choose-container mt-2 ms-1\" v-if=\"chooseLineType == 'Single'\">\n      <el-select v-model=\"currentTable\" placeholder=\"Select\" size=\"medium\" v-if=\"chooseMode === 'Default'\"\n        @change=\"handleTableChange\">\n        <el-option v-for=\"(item, idx) in allDefaultTables\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n      <el-select v-model=\"currentTable\" placeholder=\"Select\" size=\"medium\" v-on:click=\"loadCustomTableAndInfo\"\n        v-if=\"chooseMode === 'Custom'\" @change=\"handleTableChange\">\n        <el-option v-for=\"(item, idx) in allCustomTables\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n    </div>\n\n    <div class=\"class-choose-container mt-2 ms-1\" v-if=\"chooseLineType == 'Multi'\">\n      <el-select v-model=\"currentMultiClass\" placeholder=\"Select\" size=\"medium\" @change=\"handleMultiLineClassChange\"\n        v-if=\"chooseMode === 'Default'\">\n        <el-option v-for=\"(item, idx) in Array.from(allMultLineClass.keys())\" :key=\"idx\" :label=\"item\" :value=\"item\">\n        </el-option>\n      </el-select>\n      <el-select v-model=\"currentMultiClass\" placeholder=\"Select\" size=\"medium\" @change=\"handleMultiLineClassChange\"\n        v-if=\"chooseMode === 'Custom'\">\n        <el-option v-for=\"(item, idx) in Array.from(allCustomMultiLineClass.keys())\" :key=\"idx\" :label=\"item\"\n          :value=\"item\">\n        </el-option>\n      </el-select>\n    </div>\n\n\n\n\n  </div>\n</template>\n<script>\nimport store from \"@/store\";\nimport { defineComponent, ref, computed, watch, reactive } from \"vue\";\nimport { ElLoading } from 'element-plus'\nimport { ElNotification } from 'element-plus'\nimport { clearFlagDB } from \"@/indexdb\";\nexport default defineComponent({\n  data() {\n    return {\n      testConnectResult: \"Test Connection\",\n      createDBConn: \"Create Connection\",\n      initOm3DB: \"Init OM3 DB\",\n      clearOm3DB: \"Clear OM3 DB\",\n      customDBHostName: \"\",\n      customDBPassword: '',\n      customDBName: '',\n      customUserName: \"\",\n      isOpenDbSetup: false,\n      isOpenTransform: false,\n      lineDateRange: [new Date(2010, 9, 1), new Date(2010, 10, 1)],\n      lineStartTime: new Date(2010, 9, 1),\n      lineEndTime: new Date(2010, 10, 1),\n      fullscreenLoading: false,\n      singleLineTableName: \"\",\n      multiLineTableNames: [],\n      customMultiLineClassName: \"\",\n    }\n\n  },\n  components: {\n\n  },\n  methods: {\n    updateTestConnRes(res) {\n      this.testConnectResult = res\n    },\n    updateDBCreateConn(res) {\n      this.createDBConn = res;\n    },\n    updateInitDB(res) {\n      this.initOm3DB = res\n    },\n    updateClearDB(res) {\n      this.clearOm3DB = res;\n    },\n    openFullScreenLoading() {\n      this.fullscreenLoading = true;\n    },\n    closeFullScreenLoading() {\n      this.fullscreenLoading = false;\n    },\n    openNotification(title, msg, type) {\n      ElNotification({\n        title: title,\n        message: msg,\n        type: type,\n      })\n    },\n    handleTestConn() {\n      store.dispatch(\"testCustomDBConn\", { hostName: this.customDBHostName, possword: this.customDBPassword, dbName: this.customDBName, userName: this.customUserName }).then((res) => {\n        const result = res.data['data']['result'];\n        if (result === 'success') {\n          this.storeDBConfig()\n          this.updateTestConnRes(\"Test Success\")\n          this.openNotification(\"Test Connection\", \"Test Connection Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateTestConnRes(\"Test Fail\")\n          this.openNotification(\"Test Connection\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    storeDBConfig() {\n      localStorage.setItem(\"customDBHostName\", this.customDBHostName)\n      localStorage.setItem(\"customDBPassword\", this.customDBPassword)\n      localStorage.setItem(\"customDBName\", this.customDBName)\n      localStorage.setItem(\"customUserName\", this.customUserName)\n    },\n    restoreDBConfig() {\n      const customDBHostName = localStorage.getItem(\"customDBHostName\")\n      const customDBPassword = localStorage.getItem(\"customDBPassword\");\n      const customDBName = localStorage.getItem(\"customDBName\");\n      const customUserName = localStorage.getItem(\"customUserName\");\n      if (customDBHostName) {\n        this.customDBHostName = customDBHostName;\n      }\n      if (customDBPassword) {\n        this.customDBPassword = customDBPassword;\n      }\n      if (customDBName) {\n        this.customDBName = customDBName;\n      }\n      if (customUserName) {\n        this.customUserName = customUserName;\n      }\n    },\n    createCustomDBConn() {\n      store.dispatch(\"createCustomDBConn\", { hostName: this.customDBHostName, possword: this.customDBPassword, dbName: this.customDBName, userName: this.customUserName }).then((res) => {\n        const result = res.data['data']['result'];\n        if (result === 'success') {\n          this.updateDBCreateConn(\"Create Success\")\n          this.openNotification(\"Create Connection\", \"Create Connection Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateDBCreateConn(\"Create Fail\")\n          this.openNotification(\"Create Connection\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    initOM3DBEnv() {\n      store.dispatch(\"initOM3DB\").then((res) => {\n        console.log(res)\n        const result = res.data['result'];\n        if (result === 'success') {\n          this.updateInitDB(\"Init Success\")\n          this.openNotification(\"Init OM3 ENV\", \"Init OM3 ENV Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateInitDB(\"Init Fail\")\n          this.openNotification(\"Init OM3 ENV\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    clearOM3DBEnv() {\n      console.log(\"clear om3 env\")\n      store.dispatch(\"clearOM3Table\").then((res) => {\n        console.log(res)\n        const result = res.data['result'];\n        if (result === 'success') {\n          this.updateClearDB(\"Clear Success\")\n          this.openNotification(\"Clear OM3 ENV\", \"Clear OM3 ENV Success\", \"success\")\n        } else {\n\n          console.error(res.data['msg'])\n          this.updateClearDB(\"Clear Fail\")\n          this.openNotification(\"Clear OM3 ENV\", res.data['msg'], \"error\")\n        }\n      })\n    },\n    performTransformForSingeLine() {\n      let startDateStr = this.lineDateRange[0].toISOString().split(\"T\")[0];\n      let endDateStr = this.lineDateRange[1].toISOString().split(\"T\")[0];\n      let startTimeStr = this.lineStartTime.toISOString().split(\"T\")[1].split('Z')[0];\n      let endTimeStr = this.lineEndTime.toISOString().split(\"T\")[1].split('Z')[0];\n      const startFullTime = startDateStr + \" \" + startTimeStr;\n      const endFullTime = endDateStr + \" \" + endTimeStr;\n      this.openFullScreenLoading();\n      store.dispatch(\"performTransformForSingeLine\", { startTime: startFullTime, endTime: endFullTime, tableName: this.singleLineTableName }).then((res) => {\n        if (res.data['code'] === 200) {\n          console.log(\"single line transform success\")\n          //  add tishi\n        } else {\n          console.error(res.data['msg'])\n        }\n        this.closeFullScreenLoading()\n        this.dialogFormVisible = false;\n      })\n    },\n    perfromTransformForMulitLine() {\n      let startDateStr = this.lineDateRange[0].toISOString().split(\"T\")[0];\n      let endDateStr = this.lineDateRange[1].toISOString().split(\"T\")[0];\n      let startTimeStr = this.lineStartTime.toISOString().split(\"T\")[1].split('Z')[0];\n      let endTimeStr = this.lineEndTime.toISOString().split(\"T\")[1].split('Z')[0];\n      const startFullTime = startDateStr + \" \" + startTimeStr;\n      const endFullTime = endDateStr + \" \" + endTimeStr;\n      this.openFullScreenLoading()\n      store.dispatch(\"performTransformForMultiLine\", { startTime: startFullTime, endTime: endFullTime, tableNames: Array.from(this.multiLineTableNames.values()), multiLineClassName: this.customMultiLineClassName }).then((res) => {\n        if (res.data['code'] === 200) {\n          console.log(\"multi line transform success\")\n          //  add tishi\n        } else {\n          console.error(res.data['msg'])\n        }\n        this.closeFullScreenLoading()\n        this.multiLineTransformDialogVisible = false;\n      })\n      console.log(startFullTime, endFullTime, this.customMultiLineClassName, Array.from(this.multiLineTableNames.values()))\n    }\n\n\n  },\n\n  watch: {\n    isOpenDbSetup(newV, oldV) {\n      if (newV) {\n        this.restoreDBConfig()\n      } else {\n        this.updateDBCreateConn(\"Create Connection\")\n        this.updateTestConnRes(\"Test Connection\")\n      }\n    },\n    isOpenTransform(newV, oldV) {\n      if (newV) {\n        store.dispatch(\"getAllCustomTables\").then((res) => {\n          if (res['code'] === 200) {\n            this.allCustomDBTables = res['data']['result'];\n          } else {\n            console.error(res['msg'])\n          }\n        })\n      }\n    }\n  },\n  setup() {\n    const progressive = ref(store.state.controlParams.progressive);\n    const chooseMode = ref(\"Default\");\n    const chooseLineType = ref(\"Single\");\n    const dialogFormVisible = ref(false);\n\n    const multiLineTransformDialogVisible = ref(false)\n\n    const allAlgoritem = store.state.allAlgoritem;\n\n    const currentSampleAlgorithm = ref(\n      store.state.controlParams.currentSampleMethod\n    );\n\n    const currentTable = ref(store.state.controlParams.currentTable);\n\n    const currentCustomTable = ref(store.state.controlParams.currentCustomTable)\n    const currentMultiClass = ref(store.state.controlParams.currentMultiLineClass);\n\n\n\n    const allSampleAlgoritem = store.state.controlParams.sampleMethods;\n\n    let allTables = computed(() => {\n      return store.state.allTables;\n    });\n    const allCustomTables = computed(() => {\n      return store.state.allCustomTables;\n    })\n\n    const allDefaultTables = computed(() => {\n      return store.state.allDefaultTables;\n    })\n\n    let allMultLineClass = computed(() => {\n      return store.state.allMultiLineClassInfoMap\n    })\n\n    let allCustomMultiLineClass = computed(() => {\n      return store.state.allCustomMultiLineClassInfoMap\n    })\n\n\n\n    const handleSampleMethodChange = () => {\n      store.commit(\"alterSampleMethod\", currentSampleAlgorithm.value);\n    };\n\n\n    const handleModeChange = () => {\n      store.commit(\"alterMode\", chooseMode.value);\n      chooseLineType.value = \"Single\"\n      store.commit(\"alterLineType\", chooseLineType.value);\n    }\n    const handleLineTypeChange = () => {\n      store.commit(\"alterLineType\", chooseLineType.value)\n      store.dispatch(\"getAllMultiLineClassInfo\");\n    }\n    const handleMultiLineClassChange = () => {\n      store.commit(\"alterCurrentMulitLineClass\", currentMultiClass.value)\n    }\n\n    const handleTableChange = () => {\n      store.commit(\"alterTable\", currentTable);\n    };\n\n    const handleCustomTableChange = () => {\n      store.commit(\"alterCustomTable\", currentCustomTable.value)\n    }\n\n    const loadCustomTableAndInfo = () => {\n      store.dispatch(\"loadCustomTableAndInfo\");\n    }\n\n    const handleProgressiveChange = () => {\n      store.commit(\"alterProgressive\", progressive.value);\n    }\n\n    const clearIndexFlag=()=>{\n      clearFlagDB()\n    }\n\n\n\n    return {\n      allAlgoritem,\n      chooseMode,\n      chooseLineType,\n      handleModeChange,\n      currentSampleAlgorithm,\n      allSampleAlgoritem,\n      handleSampleMethodChange,\n      currentTable,\n      allTables,\n      allDefaultTables,\n      handleTableChange,\n      handleLineTypeChange,\n      allMultLineClass,\n      currentMultiClass,\n      handleMultiLineClassChange,\n      dialogFormVisible,\n      handleCustomTableChange,\n      loadCustomTableAndInfo,\n      allCustomTables,\n      allCustomMultiLineClass,\n      multiLineTransformDialogVisible,\n      progressive,\n      handleProgressiveChange,\n      clearIndexFlag\n  \n    };\n  },\n});\n</script>\n<style scoped>\n.data-control-panel {\n  min-width: 200px;\n  max-width: 210px;\n  flex-grow: 0.15;\n}\n\n.choose_container {\n  margin-top: 10px;\n}\n\n.btn {\n  width: 100%;\n  margin-left: 0px;\n}\n\n.multi-line-select {\n  width: 100%;\n}\n</style>","import { render } from \"./LeftSideDataControlPanel.vue?vue&type=template&id=94fda858&scoped=true\"\nimport script from \"./LeftSideDataControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./LeftSideDataControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./LeftSideDataControlPanel.vue?vue&type=style&index=0&id=94fda858&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-94fda858\"]])\n\nexport default __exports__","<template>\n  <div class=\"display-content-panel ms-1\">\n    <device-control-panel></device-control-panel>\n    <div id=\"content-container\"></div>\n  </div>\n</template>\n<script>\nimport { defineComponent, onMounted, ref, watch } from \"vue\";\nimport DeviceControlPanel from \"./DeviceControlPanel.vue\";\nimport * as d3 from \"d3\";\nimport store, { LineChartObj, emitter } from \"../store\";\nimport {drawWaveletContent,drawOrdinaryWaveletContent} from '../application/draw-svg-panel';\nimport {drawViewChangeLineChart} from \"../application/line-interaction\";\nimport {drawMultiTimeSeries as drawStocksTimeSeries} from \"../application/multi-interaction\"\nimport {drawMultiTimeSeriesM4} from \"../application/m4interaction\";\nimport {drawMultiHaarTimeSeries} from \"../application/haarinteraction\";\n\nexport default defineComponent({\n  components: { DeviceControlPanel },\n  setup() {\n    function drawContent(lineChartObj) {\n      console.log(lineChartObj);\n    \n      let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n      };\n      const pading = { top: 20, bottom: 20, left: 40, right: 20 };\n      const svg = d3.select(\"#content-container\").append(\"svg\");\n      document\n        .getElementById(\"content-container\")\n        .addEventListener(\"mouseup\", () => {\n          interactiveInfo.isMouseDown = false;\n        });\n      svg\n        .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n        .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${lineChartObj.x},${lineChartObj.y})`)\n        .on(\"mousedown\", function (e) {\n          interactiveInfo.isMouseDown = true;\n          interactiveInfo.startX = e.x;\n          interactiveInfo.startY = e.y;\n        })\n        .on(\"mousemove\", function (e) {\n          if (interactiveInfo.isMouseDown) {\n            interactiveInfo.offsetX = e.x - interactiveInfo.startX;\n            interactiveInfo.offsetY = e.y - interactiveInfo.startY;\n            d3.select(this).attr(\n              \"transform\",\n              `translate(${lineChartObj.x + interactiveInfo.offsetX},${\n                lineChartObj.y + interactiveInfo.offsetY\n              })`\n            );\n            interactiveInfo.isMove = true;\n          }\n        })\n        .on(\"mouseup\", function () {\n          if (interactiveInfo.isMouseDown) {\n            lineChartObj.x += interactiveInfo.offsetX;\n            lineChartObj.y += interactiveInfo.offsetY;\n            interactiveInfo.isMouseDown = false;\n            // interactiveInfo.isMove=false;\n          }\n        })\n        .on(\"click\", function (e) {\n          if (!interactiveInfo.isMove) {\n            if (lineChartObj.isChoosed) {\n              d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#fff\");\n              lineChartObj.isChoosed = false;\n            } else {\n              d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#84fcb6\");\n              lineChartObj.isChoosed = true;\n            }\n          } else {\n            interactiveInfo.isMove = false;\n          }\n        })\n        .style(\"background-color\", \"#fff\");\n      let xScale = null;\n      if (lineChartObj.isSample) {\n\n        if(lineChartObj.algorithm==='haar'){\n          xScale = d3\n          .scaleLinear()\n          .domain([0, lineChartObj.width*4])\n          .range([0, lineChartObj.width]);\n        }else{\n          xScale = d3\n          .scaleLinear()\n          .domain([0, lineChartObj.width])\n          .range([0, lineChartObj.width]);\n        }\n        \n      } else {\n        xScale = d3\n          .scaleTime()\n          .domain([lineChartObj.timeRange[0], lineChartObj.timeRange[1]])\n          .range([0, lineChartObj.width]);\n      }\n      const yScale = d3\n        .scaleLinear()//lineChartObj.data.min, lineChartObj.data.max\n        .domain([lineChartObj.data.min, lineChartObj.data.max])\n        .range([lineChartObj.height, 0]);\n\n      const xAxis = d3.axisBottom(xScale);\n      const yAxis = d3.axisLeft(yScale);\n      xAxis.ticks(0)\n      yAxis.ticks(0)\n\n      const xAxisG = svg\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          `translate(${pading.left},${lineChartObj.height + pading.top})`\n        )\n        .call(xAxis);\n      const yAxisG = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${pading.left},${pading.top})`)\n        .call(yAxis);\n      const lineG = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${pading.left},${pading.top})`);\n      let line = null;\n      if (lineChartObj.isSample) {\n        line = d3\n          .line()\n          .x((d, i) => xScale(d.x))\n          .y((d, i) => {\n            d.y=yScale(d.y);\n            return d.y;\n          });\n\n      } else {\n        line = d3\n          .line()\n          .x((d, i) => d.x)\n          .y((d, i) => lineChartObj.height-d.y);\n      }\n      console.log(lineChartObj.data.val)\n      lineG\n        .append(\"path\")\n        .datum(lineChartObj.data.val)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", line);\n\n      // svg\n      //   .append(\"text\")\n      //   .text(\n      //     lineChartObj.isSample\n      //       ? `${lineChartObj.algorithm} size:${lineChartObj.data.val.length}`\n      //       : `${lineChartObj.algorithm} size:${lineChartObj.data.val.length} ${lineChartObj.timeRange[0]\n      //           .toISOString()\n      //           .replace(/[TZ]/, \" \")}-${lineChartObj.timeRange[1]\n      //           .toISOString()\n      //           .replace(/[TZ]/, \" \")}`\n      //   )\n      //   .attr(\"x\", lineChartObj.width / 2 + pading.left)\n      //   .attr(\"y\", pading.top)\n      //   .attr(\"text-anchor\", \"middle\")\n      //   .attr(\"font-size\", 10);\n\n      svg\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"1px\")\n        .style(\"border-color\", \"#fff\");\n        svg.on(\"click\",()=>{\n          const payload={\n            width:500\n          }\n          store.dispatch(\"loadDataForSampleByM41\",payload)\n        })\n    }\n\n    emitter.on(\"add_line_chart_obj\", drawContent);\n    emitter.on(\"add_wavelet_chart_obj\",drawWaveletContent);\n    emitter.on(\"add_view_change_query_obj\",drawViewChangeLineChart);\n    emitter.on(\"add_multi_timeseries_obj\",drawStocksTimeSeries);\n    emitter.on(\"add_multi_timeseries_m4_obj\",drawMultiTimeSeriesM4);\n    emitter.on(\"add_multi_haar_timeseries_obj\",drawMultiHaarTimeSeries)\n    //#e5e5e5\n  }\n});\n</script>\n<style scoped>\n.display-content-panel {\n  height: 100%;\n  flex-grow: 1;\n  background-color:\"#fff\" ;\n}\n\n</style>","<template>\n  <div class=\"device-control-panel\">\n    <div class=\"d-flex justify-content-center\">\n      <div class=\"btn-group\">\n        <ul class=\"device-dimensions-menu dropdown-menu\">\n          <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n          <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n          <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n          <li>\n            <hr class=\"dropdown-divider\" />\n          </li>\n          <li><a class=\"dropdown-item\" href=\"#\">Separated link</a></li>\n        </ul>\n      </div>\n      <i class=\"bi bi-arrow-clockwise\"></i>\n      <div class=\"d-flex ms-2\">\n        <input type=\"number\" class=\"form-control form-control-sm dim-input\" v-model=\"widthRef\" />\n        <span style=\"line-height: 31px\">×</span>\n        <input type=\"number\" class=\"form-control form-control-sm dim-input\" v-model=\"heightRef\" />\n        <button type=\"button\" class=\"btn btn-sm btn-secondary ms-2\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-clockwise\"\n            viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\" />\n            <path\n              d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\" />\n          </svg>\n        </button>\n      </div>\n      <div class=\"ms-2\" v-if=\"false\">\n        <el-date-picker v-model=\"dateRangeRef\" type=\"datetimerange\" range-separator=\"To\"\n          :start-placeholder=\"'2019-07-13 00:00:00'\" :end-placeholder=\"'2020-04-29 00:00:00'\">\n        </el-date-picker>\n      </div>\n      <button id=\"create_panel_btn\" type=\"button\" class=\"btn btn-secondary ms-2\" @click.prevent=\"handleCreatePanel\">\n        create\n      </button>\n    </div>\n  </div>\n</template>\n<script>\nimport store from \"@/store\";\nimport { computed, defineComponent, ref } from \"vue\";\nimport * as dateFormat from \"date-format\";\n\nexport default defineComponent({\n  setup() {\n    const dateRangeRef = ref([\n      new Date(\"2019-07-11 00:00:00\"),\n      new Date(\"2020-05-19 00:00:00\"),\n    ]);\n    const widthRef = ref(600);\n    const heightRef = ref(600);\n    const currentDB = computed(() => {\n      return store.state.controlParams.currentDB;\n    });\n\n    const handleCreatePanel = () => {\n      const maxLevel = store.state.controlParams.tableMaxLevel;\n\n      if (\n        store.state.controlParams.currentLineType==='Single'&&\n        store.state.controlParams.currentSampleMethod === \"ViewChangeQueryFinal\"\n      ) {\n        const payload = {\n          startTime: 0,\n          endTime: 2 ** maxLevel - 1,\n          width: widthRef.value,\n          height: heightRef.value,\n          name: \"load_shape_search\",\n        };\n        store.dispatch(\"loadViewChangeQueryWSMinMaxMissDataInitData\", payload);\n        return;\n      }else if(store.state.controlParams.currentLineType==='Multi'){\n        const payload = {\n          startTime: 0,\n          endTime: 2 ** maxLevel - 1,\n          width: widthRef.value,\n          height: heightRef.value,\n          name: \"load_shape_search\",\n        };\n        store.dispatch(\"loadMultiTimeSeriesInitData\", payload);\n        return;\n      }else{\n        console.log(\"multi wavle\");\n          const payload = {\n            width: widthRef.value,\n            height: heightRef.value,\n            type: store.state.controlParams.currentTimeBoxType,\n          };\n          store.dispatch(\"loadMultiTimeSeriesInitData\", payload);\n      }\n\n\n\n    };\n\n    return {\n      dateRangeRef,\n      handleCreatePanel,\n      widthRef,\n      heightRef,\n      currentDB,\n    };\n  },\n});\n</script>\n<style scoped>\n.device-control-panel {\n  min-height: 25px;\n  background-color: #fff;\n}\n\n.device-dimensions-menu-show {\n  position: absolute;\n  inset: 0px auto auto 0px;\n  margin: 0px;\n  transform: translate(0px, 40px);\n}\n\n.dim-input {\n  max-width: 4rem;\n}\n</style>","import { render } from \"./DeviceControlPanel.vue?vue&type=template&id=5adbeb70&scoped=true\"\nimport script from \"./DeviceControlPanel.vue?vue&type=script&lang=js\"\nexport * from \"./DeviceControlPanel.vue?vue&type=script&lang=js\"\n\nimport \"./DeviceControlPanel.vue?vue&type=style&index=0&id=5adbeb70&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5adbeb70\"]])\n\nexport default __exports__","//@ts-nocheck\nimport * as d3 from \"d3\";\n\nexport function AxisDistortion(d) {\n  const scale = d3.scaleLinear();\n  let cacheSumDistortion = null;\n  let cacheDistortion = null;\n\n  function fisheye(_) {\n    const cols = d.length;\n    let sumDistortion;\n    if (cacheDistortion === d) {\n      sumDistortion = cacheSumDistortion;\n    } else {\n      let [pointer, sumD] = d.reduce(\n        ([p, s], v) => [p + v, s.concat([p + v])],\n        [0, [0]]\n      );\n      const ratio = cols / pointer;\n      sumD = sumD.map((d) => d * ratio);\n      cacheSumDistortion = sumD;\n      cacheDistortion = d;\n      sumDistortion = sumD;\n    }\n    let x = scale(_);\n    let startIndex = sumDistortion.findIndex(\n      (d, i) => d <= x && (i >= cols - 1 || sumDistortion[i + 1] > x)\n    );\n    if (startIndex >= cols - 1) return cols;\n    if (startIndex < 0) return 0;\n    return (\n      startIndex +\n      (x - sumDistortion[startIndex]) /\n        (sumDistortion[startIndex + 1] - sumDistortion[startIndex])\n    );\n  }\n\n  fisheye.changeDistortion = function (_) {\n    d = _;\n    return fisheye;\n  };\n\n  fisheye.copy = function () {\n    return AxisDistortion(JSON.parse(JSON.stringify(d)));\n  };\n\n  fisheye.domain = function (_) {\n    if (!_) return scale.domain();\n    scale.domain(_);\n    return fisheye;\n  };\n\n  fisheye.range = function (_) {\n    if (!_) return scale.range();\n    scale.range(_);\n    return fisheye;\n  };\n\n  fisheye.nice = scale.nice;\n  fisheye.ticks = scale.ticks;\n  fisheye.tickFormat = scale.tickFormat;\n\n  return fisheye;\n}\n\nexport function FisheyeDistortion(scale, d, a) {\n  function fisheye(_) {\n    let x = scale(_),\n      left = x < a,\n      range = d3.extent(scale.range()),\n      min = range[0],\n      max = range[1],\n      m = left ? a - min : max - a;\n    if (m == 0) m = max - min;\n    return ((left ? -1 : 1) * m * (d + 1)) / (d + m / Math.abs(x - a)) + a;\n  }\n\n  fisheye.distortion = function (_) {\n    if (!arguments.length) return d;\n    d = +_;\n    return fisheye;\n  };\n\n  fisheye.focus = function (_) {\n    if (!arguments.length) return a;\n    a = +_;\n    return fisheye;\n  };\n\n  fisheye.copy = function () {\n    return FisheyeDistortion(scale.copy(), d, a);\n  };\n\n  fisheye.domain = function (_) {\n    if (!_) return scale.domain();\n    scale.domain(_);\n    return fisheye;\n  };\n\n  fisheye.range = function (_) {\n    if (!_) return scale.range();\n    scale.range(_);\n    return fisheye;\n  };\n\n  fisheye.nice = scale.nice;\n  fisheye.ticks = scale.ticks;\n  fisheye.tickFormat = scale.tickFormat;\n  return fisheye;\n}\n","import store, { WaveletLineChartObj, SimpleBrushChartObj } from '../store/index'\nimport { WaveletTree } from '../helper/tree'\nimport { AxisDistortion, FisheyeDistortion } from '../helper/distortion'\nimport * as d3 from 'd3'\nimport axios from 'axios'\nimport { waveletDecode } from '../helper/wavlet-decoder'\nimport { formatDataForWaveletBrush } from '../helper/format-data'\nimport { computeTimeRangeChild } from '../helper/util'\n\n\n\nexport function drawWaveletContent(waveletObj: WaveletLineChartObj) {\n    const initTimeRange = [0, 2 ** store.state.controlParams.tableMaxLevel - 1];\n    console.log(waveletObj);\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    const padding = { top: 20, bottom: 20, left: 40, right: 20 };\n    const root: WaveletTree = waveletObj.root;\n    const cols = waveletObj.width;\n    let distortion = waveletObj.distortion;\n    let renderData: Array<any> = [];\n    root.clearListeners(true);\n    const fisheye = FisheyeDistortion(d3.scaleLinear(), 0, 0).domain([0, cols]).range([0, cols]);\n    //@ts-ignore\n    const xScale = AxisDistortion(distortion).domain([0, cols]).range([0, cols]);\n    //@ts-ignore\n    const yScale = d3.scaleLinear().domain([root.yArray[2], root.yArray[3]]).range([waveletObj.height, 0]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    let distortionCache = distortion;\n    let cacheData: Array<any> = [];\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    svg.attr(\"width\", cols + padding.left + padding.right)\n        .attr(\"height\", waveletObj.height + padding.top + padding.bottom)\n        .attr(\"transform\", `translate(${waveletObj.x},${waveletObj.y})`)\n        .style(\"background-color\", \"#fff\");\n\n    svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", `translate(${padding.left},${waveletObj.height + padding.top})`).call(xAxis);\n    svg.append(\"g\").attr(\"class\", \"y axis\").attr(\"transform\", `translate(${padding.left},${padding.top})`).call(yAxis);\n\n    const rerender = () => {\n        //@ts-ignore\n        let [pointer, , mergedDistortion] = distortion.reduce(([pointer, previous, d], v) => {\n            if (v === previous) {\n                const arr = d.pop();\n                //@ts-ignore\n                arr[1] += v;\n                //@ts-ignore\n                d.push(arr);\n                return [pointer + v, v, d];\n            }\n            //@ts-ignore\n            d.push([pointer, pointer + v, v, null]);\n            return [pointer + v, v, d];\n        }, [0, null, []]);\n        mergedDistortion = mergedDistortion.map((d: any) => {\n            return d.map((dd: number, i: number) => (i > 2 ? dd : (dd / pointer) * cols))\n        });\n        root.clearListeners(true);\n        xScale.changeDistortion(distortion);\n        //@ts-ignore\n        svg.select(\".x.axis\").call(xAxis);\n        if (cacheData) {\n            renderData = cacheData;\n        }\n        mergedDistortion.forEach((distortionSlice: any) => {\n            root.getDetailData(distortionSlice.slice(0, 2), distortionSlice[2], (partialData: any) => {\n                distortionSlice[3] = partialData;\n                if (!mergedDistortion.filter((m: any) => !m[3]).length) {\n                    const data = mergedDistortion.reduce((p: any, v: any) => p.concat(v[3]), []).sort((a: any, b: any) => a.x - b.x);\n                    cacheData = data;\n                    renderData = data;\n                }\n            });\n        });\n    }\n    let zoomDetail = 0;\n    //@ts-ignore\n    const calDistortion = (pointerX, refresh = false) => {\n        if (refresh) {\n            fisheye.focus(cols / 2);\n            let pointer = 0;\n            //@ts-ignore\n            distortionCache = distortion.map((_, i) => {\n                const fishRes = fisheye(i + 1);\n                let result = fishRes - pointer;\n                if (result > 1) {\n                    result = 1 / Math.round(result);\n                } else {\n                    result = Math.round(1 / result);\n                }\n                pointer = fishRes;\n                return result;\n            });\n        }\n        const distortionEdgeValue = distortionCache[0];\n        distortion = distortionCache.slice(Math.max(0, Math.round(cols / 2 - pointerX)), Math.round((cols * 3) / 2 - pointerX));\n        if (pointerX < cols / 2) {\n            distortion = distortion.concat(new Array(cols - distortion.length).fill(distortionEdgeValue));\n        } else {\n            distortion = new Array(cols - distortion.length).fill(distortionEdgeValue).concat(distortion);\n        }\n    }\n\n    const zoomIn = (pointerX: number) => {\n        fisheye.distortion(++zoomDetail);\n        calDistortion(pointerX, true);\n    }\n\n    const zoomOut = (pointerX: number) => {\n        if (zoomDetail === 0) return;\n        fisheye.distortion(--zoomDetail);\n        calDistortion(pointerX, true);\n    }\n    svg.on(\"mousemove\", function (e) {\n        if (waveletObj.isChoosed) {\n            const pointerX = e.offsetX - 40;\n            if (zoomDetail !== 0) {\n                calDistortion(pointerX);\n                rerender()\n            }\n        } else {\n            if (interactiveInfo.isMouseDown) {\n                interactiveInfo.offsetX = e.x - interactiveInfo.startX;\n                interactiveInfo.offsetY = e.y - interactiveInfo.startY;\n                d3.select(this).attr(\n                    \"transform\",\n                    `translate(${waveletObj.x + interactiveInfo.offsetX},${waveletObj.y + interactiveInfo.offsetY\n                    })`\n                );\n                interactiveInfo.isMove = true;\n            }\n        }\n\n    });\n\n    svg.on(\"mousedown\", function (e) {\n        if (waveletObj.isChoosed) {\n            const pointerX = e.offsetX - 40;\n            switch (e.which) {\n                case 1:\n                    zoomIn(pointerX);\n                    break;\n                case 2:\n                    zoomDetail = 0;\n                    distortion = new Array(cols).fill(1);\n                    distortionCache = distortion;\n                    break;\n                case 3:\n                    zoomOut(pointerX);\n                    break;\n            }\n            svg.select(\".title\").text(waveletObj.algorithm + \" method:\" + waveletObj.denoiseMethod + \" threshold:\" + waveletObj.denoiseThreshold + \" level:\" + zoomDetail)\n            rerender();\n        } else {\n            interactiveInfo.isMouseDown = true;\n            interactiveInfo.startX = e.x;\n            interactiveInfo.startY = e.y;\n        }\n\n    });\n    svg.on(\"mouseup\", function (e) {\n        if (interactiveInfo.isMouseDown && !waveletObj.isChoosed) {\n            waveletObj.x += interactiveInfo.offsetX;\n            waveletObj.y += interactiveInfo.offsetY;\n            interactiveInfo.isMouseDown = false;\n            interactiveInfo.isMove = false;\n        }\n    });\n    svg.on(\"contextmenu\", function (e) {\n        if (waveletObj.isChoosed) {\n            d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#fff\");\n            waveletObj.isChoosed = false;\n        } else {\n            d3.select(this)\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"1px\")\n                .style(\"border-color\", \"#84fcb6\");\n            waveletObj.isChoosed = true;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    });\n    // svg.on(\"wheel\", function (e) {\n    //     const pointerX = e.offsetX - 40;\n    //     if (e.deltaY > 0) {\n    //         zoomIn(pointerX);\n    //     } else {\n    //         zoomOut(pointerX);\n    //     }\n    //     rerender();\n    // });\n    svg.append(\"text\")\n        .attr(\"class\", 'title')\n        .text(waveletObj.algorithm + \" method:\" + waveletObj.denoiseMethod + \" threshold:\" + waveletObj.denoiseThreshold + \" level:\" + zoomDetail)\n        .attr(\"x\", waveletObj.width / 2 + padding.left)\n        .attr(\"y\", padding.top)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", 10);\n\n    rerender();\n\n    const line = d3.line().x((d: any) => xScale(d.x)).y((d: any) => yScale(d.y));\n\n    let lineG: any = null;\n\n    function drawToSvg(renderData: any, line: any) {\n        if (lineG) {\n            //@ts-ignore\n            lineG.remove();\n            lineG = null;\n        }\n        lineG = svg.append('g').attr(\"transform\", `translate(${padding.left},${padding.top})`);\n        lineG.append('path')\n            .datum(renderData)\n            .attr('fill', 'none')\n            .attr('stroke', 'steelblue')\n            .attr('stroke-width', 1.5)\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"d\", line);\n\n        //@ts-ignore\n        // requestAnimationFrame(drawToSvg.bind(this,renderData,line));\n    }\n\n    setInterval(() => {\n        drawToSvg(renderData, line)\n    }, 100)\n\n    //requestAnimationFrame(drawToSvg.bind(null,renderData,line));\n}\n\nexport function drawOrdinaryWaveletContent(lineChartObj: SimpleBrushChartObj) {\n    console.log(lineChartObj);\n    const initTimeRange = [0, 2 ** store.state.controlParams.tableMaxLevel - 1];\n    const maxLevel = store.state.controlParams.tableMaxLevel;\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    let currentLevel = Math.log2(lineChartObj.width);\n    const pading = { top: 20, bottom: 20, left: 40, right: 20 };\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mouseup\", () => {\n            interactiveInfo.isMouseDown = false;\n        });\n    svg\n        .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n        .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${lineChartObj.x},${lineChartObj.y})`)\n        // .on(\"mousedown\", function (e) {\n        //     interactiveInfo.isMouseDown = true;\n        //     interactiveInfo.startX = e.x;\n        //     interactiveInfo.startY = e.y;\n        // })\n        // .on(\"mousemove\", function (e) {\n        //     if (interactiveInfo.isMouseDown) {\n        //         interactiveInfo.offsetX = e.x - interactiveInfo.startX;\n        //         interactiveInfo.offsetY = e.y - interactiveInfo.startY;\n        //         d3.select(this).attr(\n        //             \"transform\",\n        //             `translate(${lineChartObj.x + interactiveInfo.offsetX},${lineChartObj.y + interactiveInfo.offsetY\n        //             })`\n        //         );\n        //         interactiveInfo.isMove = true;\n        //     }\n        // })\n        // .on(\"mouseup\", function () {\n        //     if (interactiveInfo.isMouseDown) {\n        //         lineChartObj.x += interactiveInfo.offsetX;\n        //         lineChartObj.y += interactiveInfo.offsetY;\n        //         interactiveInfo.isMouseDown = false;\n        //         // interactiveInfo.isMove=false;\n        //     }\n        // })\n        // .on(\"click\", function (e) {\n        //     if (!interactiveInfo.isMove) {\n        //         if (lineChartObj.isChoosed) {\n        //             d3.select(this)\n        //                 .style(\"border\", \"solid\")\n        //                 .style(\"border-width\", \"1px\")\n        //                 .style(\"border-color\", \"#fff\");\n        //             lineChartObj.isChoosed = false;\n        //         } else {\n        //             d3.select(this)\n        //                 .style(\"border\", \"solid\")\n        //                 .style(\"border-width\", \"1px\")\n        //                 .style(\"border-color\", \"#84fcb6\");\n        //             lineChartObj.isChoosed = true;\n        //         }\n        //     } else {\n        //         interactiveInfo.isMove = false;\n        //     }\n        // })\n        .style(\"background-color\", \"#fff\");\n    let lineG: any = null\n    let xScale: any = d3\n        .scaleLinear()\n        .domain([0, lineChartObj.width])\n        .range([0, lineChartObj.width]);\n    let xTimeRangeScale = d3\n        .scaleLinear()\n        .domain(initTimeRange)\n        .range([0, lineChartObj.width]);\n\n    const yScale = d3\n        .scaleLinear()\n        .domain([lineChartObj.data.min, lineChartObj.data.max])\n        .range([lineChartObj.height, 0]);\n    let xAxisG: any = null;\n    let yAxisG: any = null;\n    function draw(timeRange: Array<number>) {\n\n        xScale.domain([0, lineChartObj.width]).range([0, lineChartObj.width]);\n        yScale.domain([lineChartObj.data.min, lineChartObj.data.max]).range([lineChartObj.height, 0]);\n\n        xTimeRangeScale.domain(timeRange).range([0, lineChartObj.width]);\n        const xAxis = d3.axisBottom(xTimeRangeScale);\n        const yAxis = d3.axisLeft(yScale);\n\n        if (xAxisG != null) {\n            xAxisG.remove();\n            xAxisG = null;\n        }\n        if (yAxisG != null) {\n            yAxisG.remove();\n            yAxisG = null;\n        }\n        xAxisG = svg\n            .append(\"g\")\n            .attr(\n                \"transform\",\n                `translate(${pading.left},${lineChartObj.height + pading.top})`\n            ).attr(\"class\", 'x axis')\n            .call(xAxis);\n        yAxisG = svg\n            .append(\"g\")\n            .attr(\"transform\", `translate(${pading.left},${pading.top})`)\n            .attr(\"class\", 'y axis')\n            .call(yAxis);\n\n        let line = d3\n            .line()\n            .x((d: any, i) => xScale(d.x))\n            .y((d: any, i) => yScale(d.y));\n        if (lineG != null) {\n            lineG.remove();\n            lineG = null;\n        }\n        lineG =\n            svg\n                .append(\"g\")\n                .attr(\"transform\", `translate(${pading.left},${pading.top})`)\n                .append(\"path\")\n                .datum(lineChartObj.data.val)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-linecap\", \"round\")\n                .attr(\"d\", line);\n    }\n    draw(initTimeRange);\n    svg\n        .append(\"text\")\n        .text('brush line chart'\n        )\n        .attr(\"x\", lineChartObj.width / 2 + pading.left)\n        .attr(\"y\", pading.top)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", 10);\n\n\n    const rect = svg.append('rect')\n        .attr('x', pading.left)\n        .attr('y', pading.top)\n        .attr('width', lineChartObj.width / 2)\n        .attr('height', lineChartObj.height)\n        .attr('stroke-width', 2)\n        .attr('stroke', 'red')\n        .attr('fill', 'none');\n\n\n    svg.on('mousemove', function (e) {\n        const offsetX = e.offsetX;\n        let rectX = offsetX - lineChartObj.width / 4;\n        if (rectX < pading.left) {\n            rectX = pading.left;\n        }\n        if (rectX > pading.left + lineChartObj.width - lineChartObj.width / 2) {\n            rectX = pading.left + lineChartObj.width - lineChartObj.width / 2;\n        }\n        rect.attr('x', rectX);\n    });\n    svg.on('click', function (e) {\n        const offsetX = e.offsetX;\n        let rectX = offsetX - lineChartObj.width / 4;\n        if (offsetX < pading.left || offsetX > pading.left + lineChartObj.width) {\n            console.log(\"failed\");\n            return\n        }\n        if (rectX < pading.left) {\n            rectX = pading.left;\n        }\n        if (rectX > pading.left + lineChartObj.width - lineChartObj.width / 2) {\n            rectX = pading.left + lineChartObj.width - lineChartObj.width / 2;\n        }\n        if (currentLevel == maxLevel) {\n            return;\n        }\n        const combinedUrl = `${'postgres'}/line_chart/wavelet_brush_progressive?table_name=${store.state.controlParams.currentTable}&end=${lineChartObj.data.rowData[0][1] + lineChartObj.width - 1}&start=${lineChartObj.data.rowData[0][1]}&width=${lineChartObj.width}&current_level=${currentLevel}&offset=${rectX + lineChartObj.width / 4 - pading.left}`;\n        console.log(rectX + lineChartObj.width / 4 - pading.left, [rectX - pading.left, rectX + lineChartObj.width / 2 - pading.left])\n        axios.get(combinedUrl).then(res => {\n            const decodeRes = waveletDecode(lineChartObj.data.rowData, { mintd: res.data[1], minvd: res.data[2], maxvd: res.data[3], maxtd: res.data[4] }, [rectX - pading.left, rectX + lineChartObj.width / 2 - pading.left]);\n            currentLevel++;\n            const { result, rowData, maxv, minv } = formatDataForWaveletBrush(decodeRes, [store.state.controlParams.tableMaxLevel, currentLevel]);\n            lineChartObj.data.max = maxv;\n            lineChartObj.data.min = minv;\n            lineChartObj.data.rowData = [res.data[0], ...rowData];\n            lineChartObj.data.val = result;\n           \n            store.commit(\"updateBrushLineChartObj\", lineChartObj);\n            console.log(res.data)\n            const timeRange = computeTimeRangeChild(currentLevel, maxLevel, [res.data[0][1], res.data[0][1] + lineChartObj.width - 1]);\n            console.log(timeRange)\n            draw(timeRange);\n        });\n    })\n    svg\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"1px\")\n        .style(\"border-color\", \"#fff\");\n\n}\n\n","let allTables: Array<{ table_fullname: string }> = [];\nlet allMockTables: Array<{ table_fullname: string }> = [];\nlet allDrinkTables: Array<{ table_fullname: string }> = [];\nlet tableMap = new Map<string, number>();\nlet mockTableMap=new Map<string,number>();\nlet drinkTableMap=new Map<string,number>();\nconst str = `[{\"table_fullname\":\"m4waveletdata.sp_au2102_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic1909_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_if2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ap005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma909_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_bu2012_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cs2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu1909_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_j2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_if1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_bu2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_m2101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2011_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2012_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_al2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2002_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_bu2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jm2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_al2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_c2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma911_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ap007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ih1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_al2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu1911_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_m2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i1909_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2102_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic2012_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_hc2101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu1910_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jm2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_hc2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ap010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fg009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2012_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2011_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ih2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_m2011_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_hc1910_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_c2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_al2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2004_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_c2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_al2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ih2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_a2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2011_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2101_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2004_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_au2104_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_if2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_a2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_hc2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2105_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2003_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ih2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2011_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jm2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ap001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fg001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_if2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2002_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_jd2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_m2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_if1909_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_m2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_j2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_a2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_i2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_j2005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ma009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fg005_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf007_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_bu1912_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cf001_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2012_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_fu2004_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ic2006_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_cu2009_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2002_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2008_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_hc2010_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_ag2004_wavelet_1m\"}]`\nconst mockStr=`[{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_0_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_1_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_2_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_3_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_4_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_5_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_6_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_7_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_8_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_9_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_10_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_11_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_12_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_13_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_14_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_15_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_16_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_17_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_18_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_19_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_20_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_21_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_22_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_23_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_24_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_25_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_26_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_27_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_28_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_29_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_30_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_31_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_32_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_33_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_34_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_35_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_36_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_37_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_38_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_39_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_40_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_41_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_42_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_43_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_44_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_45_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_46_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_47_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_48_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_49_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_50_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_51_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_52_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_53_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_54_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_55_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_56_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_57_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_58_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_59_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_60_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_61_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_62_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_63_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_64_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_65_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_66_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_67_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_68_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_69_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_70_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_71_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_72_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_73_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_74_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_75_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_76_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_77_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_78_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_79_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_80_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_81_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_82_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_83_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_84_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_85_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_86_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_87_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_88_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_89_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_90_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_91_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_92_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_93_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_94_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_95_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_96_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_97_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_98_wavelet_8m\"},{\"table_fullname\":\"m4multiserieswaveletdata.multitimeseries_99_wavelet_8m\"}]`\nconst drinkStr=`[{\"table_fullname\":\"m4waveletdata.sp_drinkxbk7610_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxbu4707_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxcc6740_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxdc6359_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxdk3500_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxhv0618_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxjb3156_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxjr8022_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxmc7070_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxmj8002_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxpc6771_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxsa0297_wavelet_1m\"},{\"table_fullname\":\"m4waveletdata.sp_drinkxsf3079_wavelet_1m\"}]`\nexport default function getAllTableName() {\n    if (allTables.length === 0) {\n        const objs = JSON.parse(str);\n        for (let i = 0; i < 20; i++) {\n            allTables.push(objs[i]);\n            tableMap.set(objs[i]['table_fullname'], i)\n        }\n    }\n    return {\n        allTables,\n        tableMap,\n    }\n} \nexport function getMockTableName(){\n    if(allDrinkTables.length===0){\n        const objs=JSON.parse(drinkStr);\n        for(let i=0;i<13;i++){\n            allDrinkTables.push(objs[i]);\n            drinkTableMap.set(objs[i]['table_fullname'],i);\n        }\n    }\n    return {\n        allTables:allDrinkTables,\n        tableMap:drinkTableMap,\n    }\n}","\nimport TrendTree from \"@/helper/tend-query-tree\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport store, { MultiTimeSeriesObj } from \"../store\";\nimport { formatToRenderDataForTrend, getIndexTime } from \"../helper/format-data\"\nimport { computeLosedDataRange, canCut, getLevelData, computeTimeFilterBaseLevelInfo, computeColTimeRange, computeLosedDataRangeV1 } from \"@/helper/util\";\nimport getAllTableName, { getMockTableName } from \"../constant\"\nimport axios from \"axios\";\nimport { batchLoadDataForRangeLevelForMinMaxMiss } from \"@/api/build_tree\";\n\ntype AllInteraction = \"pan\" | \"zoom_in\" | \"zoom_out\" | \"resize\" | \"time\";\n\nfunction batchComputeTimeSE(currentLevel: number, width: number, timeRange: Array<number>, dataNum: number, dataManagers: Array<LevelDataManager>) {\n    //const startT=new Date().getTime()\n    const allColumnInfos = new Array<Array<NoUniformColObj>>();\n    for (let j = 0; j < dataManagers.length; j++) {\n\n        allColumnInfos[j] = [];\n        dataManagers[j].columnInfos=allColumnInfos[j];\n    }\n    for (let i = 0; i < width; i++) {\n        for (let j = 0; j < dataManagers.length; j++) {\n            allColumnInfos[j].push(new NoUniformColObj(i, timeRange[0], timeRange[1], currentLevel, width, dataNum, dataManagers[0].maxLevel,dataManagers[j].dataName));\n        }\n    }\n    const tR = timeRange[1] - timeRange[0] + 1;\n    const tS = timeRange[0];\n    for (let i = timeRange[0] + 1; i <= timeRange[1]; i++) {\n        const pre = Math.floor(width * ((i - 1) - tS) / tR);\n        const next = Math.floor(width * (i - tS) / tR);\n        if (pre !== next) {\n            for (let j = 0; j < dataManagers.length; j++) {\n                allColumnInfos[j][pre].setTEnd(i - 1);\n                allColumnInfos[j][next].setTStart(i);\n            }\n        }\n    }\n    //console.log(allColumnInfos)\n    // console.log(\"compute time:\",new Date().getTime());\n    return allColumnInfos;\n}\n\nfunction rebuildColObj(currentLevel: number, width: number, timeRange: Array<number>, dataNum: number, dataManagers: Array<LevelDataManager>, allColumnInfos: Array<Array<NoUniformColObj>>) {\n    for (let i = 0; i < width; i++) {\n        for (let j = 0; j < dataManagers.length; j++) {\n            allColumnInfos[j][i].rebuild(i, timeRange[0], timeRange[1], currentLevel, width, dataNum, dataManagers[0].maxLevel,dataManagers[j].dataName);\n        }\n    }\n    const tR = timeRange[1] - timeRange[0] + 1;\n    const tS = timeRange[0];\n    for (let i = timeRange[0] + 1; i <= timeRange[1]; i++) {\n        const pre = Math.floor(width * ((i - 1) - tS) / tR);\n        const next = Math.floor(width * (i - tS) / tR);\n        if (pre !== next) {\n            for (let j = 0; j < dataManagers.length; j++) {\n                allColumnInfos[j][pre].setTEnd(i - 1);\n                allColumnInfos[j][next].setTStart(i);\n            }\n        }\n    }\n    // console.log(\"compute time:\",new Date().getTime());\n    return allColumnInfos;\n}\n\n\n\nexport async function batchViewChange(multiTimeSeriesObj: MultiTimeSeriesObj, params: { inter: AllInteraction }) {\n    const dataManagers = multiTimeSeriesObj.dataManagers;\n    const managerMap = new Map<string, LevelDataManager>();\n    const lineNum = dataManagers.length;\n    const width = multiTimeSeriesObj.width;\n    const maxLevel = multiTimeSeriesObj.maxLevel;\n    const currentLevel = multiTimeSeriesObj.currentLevel;\n    const timeRange = multiTimeSeriesObj.timeRange;\n    console.log(multiTimeSeriesObj)\n\n    const allPromises=[];\n    for(let i=0;i<multiTimeSeriesObj.columnInfos.length;i++){\n        const dataManager=multiTimeSeriesObj.dataManagers[i];\n        if(!dataManager.isShow){\n            continue;\n        }\n        allPromises.push(new Promise((resolve,rej)=>{\n            dataManager.viewChangeInteractionFinal1(10,width,timeRange,null,null).then((nonCol)=>{\n                multiTimeSeriesObj.columnInfos[i]=nonCol;\n                resolve(null)\n            })\n        }))\n    }\n    await Promise.all(allPromises);\n    return multiTimeSeriesObj.columnInfos;\n\n    \n}\n\nasync function batchLoadDataForMultiLine1(allLoedData: Array<{ tn: string, lr: Array<Array<number>> }>, maxLevel: number, dataManagers: Map<string, LevelDataManager>) {\n    if (allLoedData.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/multi_series_batch_load_data1`, {\n        multi_series_load_data: allLoedData,\n    });\n\n    const result = data.data;\n    const loseDataMap = new Map<string, Array<Array<number>>>();\n    for (let i = 0; i < allLoedData.length; i++) {\n        loseDataMap.set(allLoedData[i].tn, allLoedData[i].lr);\n    }\n    //console.log(result)\n    if (result && result.length) {\n        for (let i = 0; i < result.length; i++) {\n            const currentLineRes = result[i]['d'];\n            const resultArray = [];\n            for (let j = 0; j < currentLineRes[0].length; j++) {\n                resultArray.push({ l: maxLevel - currentLineRes[0][j], i: currentLineRes[1][j], dif: [currentLineRes[2][j], currentLineRes[3][j], currentLineRes[4][j], currentLineRes[5][j]] });\n            }\n            dataManagers.get(result[i]['tn'])?.constructTreeForBatchLoad(loseDataMap.get(result[i]['tn'])!, resultArray)\n        }\n    }\n    //console.log(\"line1\")\n}\n\nasync function batchLoadDataForMultiLineV1(allLoedData: Array<{ tn: string, lr: Array<Array<number>> }>, maxLevel: number, dataManagers: Map<string, LevelDataManager>) {\n    if (allLoedData.length === 0) {\n        return [];\n    }\n\n    const { data } = await axios.post(`postgres/line_chart/multi_series_batch_load_data1`, {\n        multi_series_load_data: allLoedData,\n    });\n    const result = data.data;\n    let func:any=null;\n    if(store.state.controlParams.currentTimeBoxType === \"stock\"){\n        func=getAllTableName;\n    }else if(store.state.controlParams.currentTimeBoxType === \"mock\"){\n        func=getMockTableName\n    }\n    \n\n\n    const { tableMap } = func();\n    for (let i = 0; i < allLoedData.length; i++) {\n        const colNum = tableMap.get(allLoedData[i].tn);\n        if (colNum === undefined) {\n            throw new Error(\"cannot find table index\");\n        }\n        const minidf = `minid${colNum}`;\n        const minvdf = `minvd${colNum}`;\n        const maxvdf = `maxvd${colNum}`;\n        const maxidf = `maxid${colNum}`;\n\n        const tempRes: Array<{ l: number, i: number, dif: Array<number> }> = [];\n        result.forEach((v: any, i: number) => {\n            tempRes.push({ l: maxLevel - v['l'], i: v['i'], dif: [v[minidf], v[minvdf], v[maxvdf], v[maxidf]] });\n        })\n        dataManagers.get(allLoedData[i]['tn'])?.constructTreeForBatchLoad1(allLoedData[i].lr, tempRes)\n    }\n}\n\nasync function batchLoadDataForMultiLine(allLoedData: Array<{ tn: string, lr: Array<Array<number>> }>, maxLevel: number, dataManagers: Map<string, LevelDataManager>) {\n    if (allLoedData.length === 0) {\n        return [];\n    }\n    const { data } = await axios.post(`postgres/line_chart/multi_series_batch_load_data`, {\n        multi_series_load_data: allLoedData,\n    });\n    const result = data.data;\n    const { tableMap } = store.state.controlParams.currentTimeBoxType === \"stock\" ? getAllTableName() : getMockTableName();\n    for (let i = 0; i < allLoedData.length; i++) {\n        const colNum = tableMap.get(allLoedData[i].tn);\n        if (colNum === undefined) {\n            throw new Error(\"cannot find table index\");\n        }\n        const minidf = `minid${colNum}`;\n        const minvdf = `minvd${colNum}`;\n        const maxvdf = `maxvd${colNum}`;\n        const maxidf = `maxid${colNum}`;\n\n        const tempRes: Array<{ l: number, i: number, dif: Array<number> }> = [];\n\n        result.forEach((v: any, i: number) => {\n            tempRes.push({ l: maxLevel - v['l'], i: v['i'], dif: [v[minidf], v[minvdf], v[maxvdf], v[maxidf]] });\n        })\n        dataManagers.get(allLoedData[i]['tn'])?.constructTreeForBatchLoad1(allLoedData[i].lr, tempRes)\n    }\n}\n\nexport async function batchGetData(dataManagers: Array<LevelDataManager>, level: number, start: number, end: number, maxLevel: number, width: number, params: { inter: AllInteraction, noRet: boolean }) {\n    \n    if (level > maxLevel) {\n        return []\n    }\n    const allPromises=[];\n    if (params.inter !== \"zoom_out\") {\n        for(let i=0;i<dataManagers.length;i++){\n            allPromises.push(new Promise((resolve,reject)=>{\n                dataManagers[i].getDataMinMaxMiss(level,start,end,true).then(()=>{\n                    resolve(null);\n                })\n            }))\n        }\n    }\n    const renderDatas = [];\n    if (!params.noRet) {\n        for (let i = 0; i < dataManagers.length; i++) {\n            const data = dataManagers[i].levelIndexObjs[level].getDataByIndex(start, end);\n            data.start = getIndexTime(level, data.start, maxLevel).startT;\n            data.end = getIndexTime(level, data.end, maxLevel).endT;\n            const { renderData, minv, maxv } = formatToRenderDataForTrend([maxLevel, level], data, width);\n\n            renderDatas.push({ renderData, minv, maxv });\n        }\n\n    }\n\n    return await Promise.all(allPromises);\n}\n\nexport async function viewChangeInteraction(multiTimeSeriesObj: MultiTimeSeriesObj, callback: any) {\n    const allPromises = [];\n    const allColumnInfos = new Array(multiTimeSeriesObj.dataManagers.length);\n    for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n        allPromises.push(new Promise((resolve, reject) => {\n            multiTimeSeriesObj.dataManagers[i].viewChangeInteraction(multiTimeSeriesObj.currentLevel, multiTimeSeriesObj.width, multiTimeSeriesObj.timeRange, null).then(uniformOobj => {\n                allColumnInfos[i] = uniformOobj;\n                resolve(null);\n            })\n        }))\n    }\n    Promise.all(allPromises).then((res) => {\n        multiTimeSeriesObj.columnInfos = allColumnInfos;\n        callback()\n    })\n}\n\nexport async function loadData(multiTimeSeriesObj: MultiTimeSeriesObj, level: number, start: number, end: number, width: number, callback: any) {\n    const allPromises = [];\n    const allColumnInfos = new Array(multiTimeSeriesObj.dataManagers.length);\n    allPromises.push(new Promise((resolve, reject) => {\n        multiTimeSeriesObj.dataManagers.forEach((manager, i) => {\n            manager.getData(level, start, end, true).then(() => {\n                manager.viewChangeInteraction(level, width, multiTimeSeriesObj.timeRange, null).then((uniformOobj) => {\n                    allColumnInfos[i] = uniformOobj;\n                    resolve(null);\n                }\n\n                )\n            })\n        })\n    }))\n    Promise.all(allPromises).then(() => {\n        multiTimeSeriesObj.columnInfos = allColumnInfos;\n        callback()\n    })\n\n\n}\n\n\n\nexport async function zoomInIneraction(multiTimeSeriesObj: MultiTimeSeriesObj, callback: any) {\n    const allPromises = [];\n    const allColumnInfos = new Array(multiTimeSeriesObj.dataManagers.length);\n    const baseInfo = computeTimeFilterBaseLevelInfo(multiTimeSeriesObj.timeRange, multiTimeSeriesObj.width, multiTimeSeriesObj.maxLevel);\n    const computeColInfoT = computeColTimeRange(multiTimeSeriesObj.currentLevel, multiTimeSeriesObj.width, multiTimeSeriesObj.timeRange, 2 ** multiTimeSeriesObj.maxLevel, multiTimeSeriesObj.maxLevel)\n    multiTimeSeriesObj.currentLevel = baseInfo[0];\n    for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n        allPromises.push(new Promise((resolve, reject) => {\n            multiTimeSeriesObj.dataManagers[i].getData(baseInfo[0], baseInfo[1], baseInfo[2], true).then(() => {\n               console.log(\"data\")\n            })\n\n        }))\n    }\n    Promise.all(allPromises).then((res) => {\n        multiTimeSeriesObj.columnInfos = allColumnInfos;\n        //multiTimeSeriesObj.currentLevel=baseInfo[0];\n        callback()\n    })\n}\n\nexport async function panInIneraction(multiTimeSeriesObj: MultiTimeSeriesObj, callback: any) {\n    const allPromises = [];\n    const allColumnInfos = new Array(multiTimeSeriesObj.dataManagers.length);\n    const baseInfo = computeTimeFilterBaseLevelInfo(multiTimeSeriesObj.timeRange, multiTimeSeriesObj.width, multiTimeSeriesObj.maxLevel);\n    const computeColInfoT = computeColTimeRange(multiTimeSeriesObj.currentLevel, multiTimeSeriesObj.width, multiTimeSeriesObj.timeRange, 2 ** multiTimeSeriesObj.maxLevel, multiTimeSeriesObj.maxLevel)\n    for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n        allPromises.push(new Promise((resolve, reject) => {\n            multiTimeSeriesObj.dataManagers[i].getData(baseInfo[0], baseInfo[1], baseInfo[2], true).then(() => {\n                console.log(\"getdata\")\n            })\n\n        }))\n    }\n    Promise.all(allPromises).then((res) => {\n        multiTimeSeriesObj.columnInfos = allColumnInfos;\n        multiTimeSeriesObj.currentLevel = baseInfo[0];\n        callback()\n    })\n}","import { formatNonPowDataForViewChange } from \"@/helper/format-data\";\nimport { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport store, { MultiTimeSeriesObj } from \"@/store\";\nimport * as d3 from 'd3';\nimport { batchViewChange, batchGetData } from \"../batch/m5batch\";\n\n\n\n\n\nlet nameMap: any = [\n    //green\n    {\n        \"marutisktr\": \"汽车-#0e7735\"\n    },\n    {\n        \"tatamotorssktr\": \"汽车-#329a51\"\n    },\n    {\n        \"eichermotsktr\": \"汽车-#60ba6c\"\n    },\n    {\n        \"heromotocosktr\": \"摩托-#94d391\"\n    },\n    {\n        \"mmsktr\": \"汽车-#c0e6ba\"\n    },\n    //oranges\n    // {\n    //     \"bajfinancesktr\": \"金融-#b93d02\"\n    // },\n    {\n        \"axisbanksktr\": \"金融-#d14904\"\n    },\n    {\n        \"indusindbksktr\": \"金融-#e4580b\"\n    },\n    // {\n    //     \"bajajfinsvsktr\": \"金融-#f87f2c\"\n    // },\n    {\n        \"kotakbanksktr\": \"金融-#fda55e\"\n    },\n\n\n    //color\n    {\n        \"sbinsktr\": \"银行-#353535\"\n    },\n    {\n        \"icicibanksktr\": \"银行-#4d4d4d\"\n    },\n    {\n        \"hdfcsktr\": \"银行-#626262\"\n    },\n    {\n        \"hdfcbanksktr\": \"银行-#757575\"\n    },\n    //blue\n    {\n        \"infysktr\": \"信息-#125ca4\"\n    },\n    {\n        \"techmsktr\": \"信息-#3181bd\"\n    },\n    {\n        \"hcltechsktr\": \"信息-#5ba3cf\"\n    },\n    {\n        \"tcssktr\": \"信息-#8fc1de\"\n    },\n    //purples\n    {\n        \"coalindiasktr\": \"煤炭-#5c3696\"\n    },\n    {\n        \"ongcsktr\": \"石油气-#684ea2\"\n    },\n    {\n        \"iocsktr\": \"石油气-#7566ae\"\n    },\n    {\n        \"bpclsktr\": \"石油-#827cb9\"\n    },\n    {\n        \"powergridsktr\": \"电网-#928ec3\"\n    },\n    {\n        \"ntpcsktr\": \"光伏-#a3a0cc\"\n    },\n\n    //red\n    {\n        \"britanniasktr\": \"食品-#b21218\"\n    },\n    {\n        \"nestleindsktr\": \"雀巢-#dc2a25\"\n    },\n    {\n        \"tataconsumsktr\": \"饮料-#f6573f\"\n    },\n    //teals \n    {\n        \"drreddysktr\": \"制药-#127273\"\n    },\n    {\n        \"sunpharmasktr\": \"制药-#2b8b8c\"\n    },\n    {\n        \"divislabsktr\": \"制药-#4da5a4\"\n    },\n    //greys\n    {\n        \"jswsteelsktr\": \"钢铁-#353535\"\n    },\n    {\n        \"tatasteelsktr\": \"钢铁-#4d4d4d\"\n    },\n    {\n        \"ltsktr\": \"工程建筑-#626262\"\n    },\n    {\n        \"uplsktr\": \"农药-#757575\"\n    },\n    {\n        \"reliancesktr\": \"信实工业-#888888\"\n    },\n    {\n        \"grasimsktr\": \"纺织-#9d9d9d\"\n    },\n    //warmgreys\n    {\n        \"ultracemcosktr\": \"水泥-#665c5a\"\n    },\n    {\n        \"shreecemsktr\": \"水泥-#7e7673\"\n    },\n    {\n        \"asianpaintsktr\": \"涂料-#98908c\"\n    },\n    {\n        \"hindalcosktr\": \"铝铜-#b3aaa7\"\n    },\n\n\n    {\n        \"itcsktr\": \"贸易-#d8b5a5\"\n    },\n    {\n        \"adaniportssktr\": \"港口运营-#fcbfd2\"\n    },\n    {\n        \"titansktr\": \"珠宝-#ffbf79\"\n    },\n    {\n        \"hindunilvrsktr\": \"联合利华-#d9d9d9\"\n    },\n\n\n\n]\n\n\nlet namedMap = new Map<any, any>()\nfor (let i = 0; i < nameMap.length; i++) {\n    const key = Object.keys(nameMap[i])[0];\n    namedMap.set(key, nameMap[i][key])\n}\n\n\n\nclass InteractionInfo {\n    type: string\n    showInfo: Array<boolean>\n    timeRange: Array<number>\n    width: number\n    level: number\n    constructor(type: string) {\n        this.type = type;\n        this.showInfo = [];\n        this.timeRange = [];\n        this.width = 0;\n        this.level = 0;\n    }\n    setShowInfo(showInfo: Array<boolean>) {\n        this.showInfo = showInfo;\n    }\n    setRangeW(timeRange: Array<number>, width: number, level: number) {\n        this.timeRange = [timeRange[0], timeRange[1]];\n        this.width = width;\n        this.level = level;\n    }\n\n}\n\nlet interactionStack: Array<InteractionInfo> = [];\n\n\n\nexport function drawMultiTimeSeries(multiTimeSeriesObj: MultiTimeSeriesObj) {\n    let realTimeStampRange: Array<number> = [multiTimeSeriesObj.startTimeStamp, multiTimeSeriesObj.endTimeStamp];\n    let nodeIndexRange: Array<number> = [multiTimeSeriesObj.timeRange[0], multiTimeSeriesObj.timeRange[1]]\n\n    let isInit = false;\n    let isResizing = false;\n    let isRebacking = false;\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    //const pading = { top: 20, bottom: 80, left: 45, right: 250 };\n    const pading = { top: 20, bottom: 80, left: 45, right: 20 };\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    svg\n        .attr(\"width\", multiTimeSeriesObj.width + pading.left + pading.right)\n        .attr(\"height\", multiTimeSeriesObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${multiTimeSeriesObj.x},${multiTimeSeriesObj.y})`)\n        .style(\"background-color\", \"#fff\");\n\n    const foreignId = `foreign${multiTimeSeriesObj.width + Math.random()}`;\n    const foreigG = svg.append(\"g\").attr(\"transfrom\", `translate(${pading.left},${pading.top})`)\n    let foreignObj: any = foreigG.append(\"foreignObject\").attr(\"id\", foreignId).attr(\"x\", pading.left).attr(\"y\", pading.top).attr('width', multiTimeSeriesObj.width).attr('height', multiTimeSeriesObj.height);\n    const canvas = document.createElement(\"canvas\");\n    (canvas as any).__data__ = {}\n    document.getElementById(foreignId)?.appendChild(canvas);\n    canvas.width = multiTimeSeriesObj.width;\n    canvas.height = multiTimeSeriesObj.height;\n    let ctx = canvas.getContext(\"2d\");\n\n\n    //const timeRangeScale = d3.scaleLinear().domain([1493733884409, 1493829248294]).range([0, 2 ** 20 - 1]);\n    const indexToTimeStampScale = d3.scaleLinear().domain([nodeIndexRange[0], nodeIndexRange[1]]).range([realTimeStampRange[0], realTimeStampRange[1]]);\n    const xScale: any = d3.scaleLinear().domain([0, multiTimeSeriesObj.width]).range([0, multiTimeSeriesObj.width]);\n    let showTimeXScale: any = d3.scaleTime().domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, multiTimeSeriesObj.width]);\n    let yScale: any = d3.scaleLinear().domain([multiTimeSeriesObj.minv, multiTimeSeriesObj.maxv]).range([multiTimeSeriesObj.height, 0]);\n\n    let xReScale = d3.scaleLinear().domain([0, multiTimeSeriesObj.width]).range([0, multiTimeSeriesObj.dataManagers[0].realDataRowNum - 1]);\n    let showXTimeScale: any = d3.scaleTime().domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, multiTimeSeriesObj.width]);\n\n\n    let zoomAxis = d3.axisBottom(showTimeXScale);\n    let yAxis = d3.axisLeft(yScale);\n    if (store.state.controlParams.currentMode === 'Default') {\n        yAxis = d3.axisLeft(yScale).tickFormat((val) => {\n            //@ts-ignore\n            return 100 * val + \"%\"\n        })\n    }\n\n    let xAxis = d3.axisBottom(showXTimeScale)\n    const yReScale = d3.scaleLinear().domain([multiTimeSeriesObj.minv, multiTimeSeriesObj.maxv]).range([multiTimeSeriesObj.height, 0]);\n    const timeBrushObj = d3.brushX().extent([[0, 10], [multiTimeSeriesObj.width, 40]]);\n    const timeBoxBrushObj = d3.brush().extent([[pading.left, pading.top], [multiTimeSeriesObj.width + pading.left, multiTimeSeriesObj.height + pading.top]]);\n\n    timeBoxBrushObj.on(\"end\", timeBoxBrushed);\n\n    timeBrushObj.on(\"end\", brushed);\n    timeBrushObj.on(\"start\", () => {\n        console.log(\"start\")\n    })\n    const timeBoxG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${pading.top + 50 + multiTimeSeriesObj.height - 20})`).call(timeBrushObj).call(timeBrushObj.move, [0, multiTimeSeriesObj.width]);\n    foreigG.call(timeBoxBrushObj)\n\n\n    let zoomAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top + 50})`).attr(\"class\", 'x axis').call(zoomAxis)\n    let xAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis)\n    let yAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n\n\n    //@ts-ignore\n\n\n\n\n    function updateCanvasWidth() {\n\n        //@ts-ignore\n        canvas.style.width = multiTimeSeriesObj.width;\n        svg\n            .attr(\"width\", multiTimeSeriesObj.width + pading.left + pading.right)\n            .attr(\"height\", multiTimeSeriesObj.height + pading.top + pading.bottom)\n        foreignObj.attr(\"width\", multiTimeSeriesObj.width);\n        xScale.domain([0, multiTimeSeriesObj.width]).range([0, multiTimeSeriesObj.width]);\n        showTimeXScale.domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, multiTimeSeriesObj.width]);\n        //showTimeXScale.range([0, multiTimeSeriesObj.width]);\n        if (zoomAxisG != null) {\n            zoomAxisG.remove();\n            zoomAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top + 50})`).attr(\"class\", 'x axis').call(zoomAxis)\n        }\n        timeBrushObj.extent([[0, 10], [multiTimeSeriesObj.width, 40]]);\n        timeBrushObj.on(\"end\", brushed);\n        timeBrushObj.on(\"start\", () => {\n            console.log(\"start\")\n        })\n        const tempReScale = d3.scaleLinear().domain([0, nodeIndexRange[1]]).range([0, multiTimeSeriesObj.width]);\n\n        timeBoxG.call(timeBrushObj).call(timeBrushObj.move, [tempReScale(multiTimeSeriesObj.timeRange[0]), tempReScale(multiTimeSeriesObj.timeRange[1])]);\n        ctx = canvas.getContext(\"2d\");\n    }\n\n    let lengendG: any = null;\n\n\n    function drawLengend(leftOffset: number, multiTimeSeriesObj: MultiTimeSeriesObj, colorArray: Array<string>) {\n\n        if (lengendG !== null) {\n            lengendG.remove()\n        }\n        //lengendG = svg.append('g').attr(\"width\", 100).attr(\"height\", 700).attr(\"transform\", `translate(${leftOffset},${pading.top - 15})`);\n        let showNum = 0;\n        for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n            const dataManager = multiTimeSeriesObj.dataManagers[i];\n            if (dataManager.isShow) {\n                if (store.state.controlParams.currentMode === 'Default') {\n                    let nameStrs = dataManager.dataName.split(\".\")[1].split(\"_\")\n                    if (nameStrs[1][nameStrs[1].length - 1] !== 'r') {\n                        nameStrs[1] = nameStrs[1] + 'r';\n                    }\n                    if (!namedMap.has(nameStrs[1])) {\n                        dataManager.isShow = false;\n                        continue\n                    }\n                    // lengendG.append(\"rect\").attr(\"x\", 10).attr(\"y\", showNum * 15).attr('width', 10).attr(\"height\", 10).attr(\"fill\", namedMap.get(nameStrs[1]).split(\"-\")[1]).on(\"click\", () => {\n                    //     dataManager.isShow = !dataManager.isShow\n                    //     draw();\n                    // });\n\n                    // lengendG.append('text').attr(\"x\", 20).attr(\"y\", showNum * 15 + 11).text(nameStrs[1].slice(0, nameStrs[1].lastIndexOf(\"sktr\")).toUpperCase() )//+ namedMap.get(nameStrs[1]).split(\"-\")[0]\n\n                    showNum++;\n                } else {\n                    let nameStrs = dataManager.dataName.split(\".\")[1].split(\"_\");\n                    let showName = nameStrs[1]\n                    for (let i = 2; i < nameStrs.length - 2; i++) {\n                        showName = showName + \"_\" + nameStrs[i];\n                    }\n                    const showColor = colorArray[dataManager.md5Num! % 46];\n                    // lengendG.append(\"rect\").attr(\"x\", 10).attr(\"y\", showNum * 15).attr('width', 10).attr(\"height\", 10).attr(\"fill\", showColor).on(\"click\", () => {\n                    //     dataManager.isShow = !dataManager.isShow\n                    //     draw();\n                    // });\n\n                    // lengendG.append('text').attr(\"x\", 20).attr(\"y\", showNum * 15 + 11).text(showName)\n\n                    showNum++;\n                }\n\n            }\n        }\n\n    }\n\n\n    function draw() {\n        const colorArray1 = [\"#b3de69\", \"#fdb462\", \"#80b1d3\", \"#fb8072\", \"#bebada\", \"#ffffb3\", \"#8dd3c7\", \"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\", \"#393b79\", \"#5254a3\", \"#6b6ecf\", \"#9c9ede\", \"#637939\", \"#8ca252\", \"#b5cf6b\", \"#cedb9c\", \"#8c6d31\", \"#bd9e39\", \"#e7ba52\", \"#843c39\", \"#ad494a\", \"#d6616b\", \"#e7969c\", \"#7b4173\", \"#a55194\", \"#ce6dbd\", \"#de9ed6\"];\n\n        drawLengend(multiTimeSeriesObj.width + pading.left + 10, multiTimeSeriesObj, colorArray1)\n        canvas.width = multiTimeSeriesObj.width;\n\n        const curMinMax = computeMinMax(multiTimeSeriesObj);\n        yScale = d3.scaleLinear().domain([curMinMax.min, curMinMax.max]).range([multiTimeSeriesObj.height, 0]);\n        yAxis = d3.axisLeft(yScale);\n        if (store.state.controlParams.currentMode === 'Default') {\n            yAxis = d3.axisLeft(yScale).tickFormat((val) => {\n                //@ts-ignore\n                return 100 * val + \"%\"\n            })\n        }\n        if (yAxisG !== null && yAxisG !== undefined) {\n            yAxisG.remove();\n        }\n        yAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n\n\n\n        showXTimeScale = d3.scaleTime().domain([new Date(Math.floor(indexToTimeStampScale(multiTimeSeriesObj.timeRange[0]))), new Date(Math.floor(indexToTimeStampScale(multiTimeSeriesObj.timeRange[1])))]).range([0, multiTimeSeriesObj.width]);\n        xAxis = d3.axisBottom(showXTimeScale);\n        if (xAxisG !== null && xAxisG !== undefined) {\n            xAxisG.remove();\n        }\n        xAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis)\n\n\n        const columnInfos = multiTimeSeriesObj.columnInfos;\n        ctx?.clearRect(0, 0, multiTimeSeriesObj.width, multiTimeSeriesObj.height);\n        for (let i = 0; i < columnInfos.length; i++) {\n            if (multiTimeSeriesObj.dataManagers[i].isShow) {\n                formatNonPowDataForViewChange(columnInfos[i], multiTimeSeriesObj.width, 2 ** multiTimeSeriesObj.maxLevel, null);\n                if (multiTimeSeriesObj.dataManagers[i]) {\n                    ctx?.beginPath();\n\n                    if (store.state.controlParams.currentMode === 'Default') {\n                        //ctx.strokeStyle = colorArray1[i];\n                        const dataManager = multiTimeSeriesObj.dataManagers[i];\n                        let nameStrs = dataManager.dataName.split(\".\")[1].split(\"_\")\n                        if (nameStrs[1][nameStrs[1].length - 1] !== 'r') {\n                            nameStrs[1] = nameStrs[1] + 'r';\n                        }\n                        //@ts-ignore\n                        ctx.strokeStyle = namedMap.get(nameStrs[1]).split(\"-\")[1]//colorArray1[i];\n                    } else {\n                        //@ts-ignore\n                        ctx.strokeStyle = colorArray1[multiTimeSeriesObj.dataManagers[i].md5Num! % 46];\n                    }\n\n\n                    //@ts-ignore\n                    ctx.strokeWidth = 1;\n                    const columnInfo = columnInfos[i];\n                    for (let i = 0; i < columnInfo.length; i++) {\n                        if (columnInfo[i].isMis) {\n                            continue\n                        }\n                        if (columnInfo[i].minVTimeRange[0] < columnInfo[i].maxVTimeRange[0]) {\n                            ctx?.moveTo(columnInfo[i].positionInfo.minX, yScale(columnInfo[i].vRange[0]));\n                            ctx?.lineTo(columnInfo[i].positionInfo.maxX, yScale(columnInfo[i].vRange[1]));\n                        } else {\n                            ctx?.moveTo(columnInfo[i].positionInfo.minX, yScale(columnInfo[i].vRange[1]));\n                            ctx?.lineTo(columnInfo[i].positionInfo.maxX, yScale(columnInfo[i].vRange[0]));\n                        }\n                        if (i <= columnInfo.length - 2 && columnInfo[i].endV !== undefined && columnInfo[i + 1] !== undefined) {\n                            ctx?.moveTo(columnInfo[i].positionInfo.endX, yScale(columnInfo[i].endV!));\n                            ctx?.lineTo(columnInfo[i + 1].positionInfo.startX, yScale(columnInfo[i + 1].startV!));\n                        }\n\n                    }\n                    const stack = [];\n                    for (let i = 0; i < columnInfo.length - 1; i++) {\n                        if (!columnInfo[i].isMis && columnInfo[i + 1].isMis) {\n                            stack.push(columnInfo[i]);\n                            for (let j = i + 1; j < columnInfo.length; j++) {\n                                if (columnInfo[j - 1].isMis && !columnInfo[j].isMis) {\n                                    const co = stack.pop()\n                                    if (columnInfo[j].startV === undefined || co?.endV === undefined) {\n                                        console.error(\"error nonUniform\");\n                                    }\n                                    ctx?.moveTo(co!.positionInfo.endX, yScale(co!.endV));\n                                    if (columnInfo[j].startV !== undefined) {\n                                        ctx?.lineTo(columnInfo[j].positionInfo.startX, yScale(columnInfo[j].startV!))\n                                    } else {\n                                        ctx?.lineTo(columnInfo[j].positionInfo.minX, yScale((columnInfo[j].vRange[0] + columnInfo[j].vRange[1]) / 2))\n                                    }\n\n                                }\n                            }\n                        }\n                    }\n                    ctx?.stroke();\n                }\n\n            }\n        }\n\n    }\n\n    function resizeW(width: number) {\n        isResizing = true;\n        //timeboxStack = [];\n        const currentLevel = multiTimeSeriesObj.currentLevel;\n        // multiTimeSeriesObj.currentLevel = 10;//currentLevel + 1\n        multiTimeSeriesObj.width = width;\n        updateCanvasWidth();\n\n        if (currentLevel + 1 >= multiTimeSeriesObj.maxLevel - 1) {\n            return\n        }\n\n        //@ts-ignore\n        canvas.style.width = multiTimeSeriesObj.width\n        batchGetData(multiTimeSeriesObj.dataManagers, multiTimeSeriesObj.currentLevel, 0, nodeIndexRange[1], multiTimeSeriesObj.maxLevel, width, { inter: \"resize\", noRet: true }).then(res => {\n     \n            batchViewChange(multiTimeSeriesObj, { inter: \"resize\" }).then((allColumnInfos) => {\n                multiTimeSeriesObj.pow = false;\n                multiTimeSeriesObj.columnInfos = allColumnInfos;\n\n\n\n                draw();\n            })\n        })\n\n\n\n    }\n\n    function zoomIn(timeRange: Array<number>) {\n\n        //timeboxStack = [];\n        const currentLevel = multiTimeSeriesObj.currentLevel;\n        multiTimeSeriesObj.currentLevel = 10;//currentLevel + 1\n        const width = multiTimeSeriesObj.width;\n        multiTimeSeriesObj.timeRange[1] = timeRange[1]//Math.floor(multiTimeSeriesObj.timeRange[1] / 2);\n        multiTimeSeriesObj.timeRange[0] = timeRange[0]\n        if (currentLevel + 1 >= multiTimeSeriesObj.maxLevel - 1) {\n            return\n        }\n\n\n        const needLoadLevel = 2 ** Math.ceil(Math.log2(width))\n        batchGetData(multiTimeSeriesObj.dataManagers, 10, 0, 2 ** 10 - 1, multiTimeSeriesObj.maxLevel, width, { inter: \"zoom_in\", noRet: true }).then(res => {\n\n            batchViewChange(multiTimeSeriesObj, { inter: \"zoom_in\" }).then((allColumnInfos) => {\n                multiTimeSeriesObj.pow = false;\n                multiTimeSeriesObj.columnInfos = allColumnInfos;\n                draw();\n            })\n        });\n\n\n\n    }\n\n\n    //@ts-ignore\n    function brushed({ selection }) {\n       \n        if (!isInit) {\n            isInit = true\n            return;\n        }\n        if (isResizing) {\n            isRebacking = false;\n            return;\n        }\n        if (isRebacking) {\n            isRebacking = false;\n            return\n        }\n        const timeRange = [Math.floor(xReScale(selection[0])), Math.floor(xReScale(selection[1]))];\n        if (timeRange[0] < 0) {\n            timeRange[0] = 0;\n        }\n        if (timeRange[1] > nodeIndexRange[1]) {\n            timeRange[1] = nodeIndexRange[1]\n        }\n        const interInfo = new InteractionInfo(\"zoom\")\n        interInfo.setRangeW(multiTimeSeriesObj.timeRange, multiTimeSeriesObj.width, multiTimeSeriesObj.currentLevel);\n        interactionStack.push(interInfo);\n        zoomIn([timeRange[0], timeRange[1]])\n    }\n\n\n\n\n\n    let timeboxStack: Array<Array<boolean>> = [];\n\n    //@ts-ignore\n    function timeBoxBrushed({ selection }) {\n        if (selection === null) {\n            return;\n        }\n        const lastRes = [];\n        for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n            lastRes.push(multiTimeSeriesObj.dataManagers[i].isShow);\n        }\n        //if(interactionStack[interactionStack.length-1].type==='timebox')\n        const timeBoxStartTime = new Date().getTime();\n        const interInfo = new InteractionInfo(\"timebox\");\n        interInfo.setShowInfo(lastRes);\n        interactionStack.push(interInfo);\n        // console.log(selection);\n        const startX = selection[0][0] - 40;\n        const endX = selection[1][0] - 40;\n        // console.log(showTimeXScale.invert(startX));\n        // console.log(showTimeXScale.invert(endX));\n        const vMinY = selection[1][1] - 20;\n        const vMaxY = selection[0][1] - 20;\n        const vMin = yScale.invert(vMinY);\n        const vMax = yScale.invert(vMaxY);\n        const allColumnInfos = multiTimeSeriesObj.columnInfos;\n\n        for (let i = 0; i < allColumnInfos.length; i++) {\n            let isChoose = multiTimeSeriesObj.dataManagers[i].isShow;\n            for (let j = Math.floor(startX); j <= Math.floor(endX); j++) {\n                isChoose = isChoose && (allColumnInfos[i][j].vRange[0] >= vMin && allColumnInfos[i][j].vRange[1] <= vMax)\n            }\n            multiTimeSeriesObj.dataManagers[i].isShow = false;\n            if (isChoose) {\n                multiTimeSeriesObj.dataManagers[i].isShow = true\n                //console.log(multiTimeSeriesObj.dataManagers[i].dataName);\n            }\n\n        }\n        let minV = Infinity;\n        let maxV = -Infinity;\n        for (let i = 0; i < allColumnInfos.length; i++) {\n            if (multiTimeSeriesObj.dataManagers[i].isShow) {\n                for (let j = 0; j <= allColumnInfos[i].length; j++) {\n                    minV = Math.min(minV, allColumnInfos[i][j] ? allColumnInfos[i][j].vRange[0] : minV);\n\n                    maxV = Math.max(maxV, allColumnInfos[i][j] ? allColumnInfos[i][j].vRange[1] : maxV);\n                }\n            }\n        }\n        // multiTimeSeriesObj.maxv = -10;\n        // multiTimeSeriesObj.minv = 10\n        draw();\n        //zoomIn([timeRangeScale(1493740845000),timeRangeScale(1493805314000)])\n    }\n    let isMouseover = false;\n    let startOffsetX = 0;\n    const dragRect = svg\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"height\", multiTimeSeriesObj.height + pading.top + pading.bottom)\n        .attr(\"width\", multiTimeSeriesObj.width + pading.left + pading.right)\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 4)\n        .attr(\"fill\", \"none\")\n        .on(\"mouseover\", () => {\n            document.body.style.cursor = 'ew-resize';\n            isMouseover = true;\n        })\n        .on(\"mousedown\", (e) => {\n            if (isMouseover) {\n                startOffsetX = e.offsetX;\n                interactiveInfo.isMouseDown = true;\n            }\n        })\n        .on(\"mouseup\", () => {\n            console.log()\n        })\n        .on(\"mousemove\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                svg.attr(\"width\", multiTimeSeriesObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n                dragRect.attr(\"width\", multiTimeSeriesObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n            }\n        })\n        .on(\"mouseleave\", () => {\n            if (!interactiveInfo.isMouseDown) {\n                document.body.style.cursor = 'default';\n            }\n        })\n\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mousemove\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                svg.attr(\"width\", multiTimeSeriesObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n                dragRect.attr(\"width\", multiTimeSeriesObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n            }\n        });\n\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mouseup\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                interactiveInfo.isMouseDown = false;\n                isMouseover = false;\n                document.body.style.cursor = 'default';\n                let preWidth = multiTimeSeriesObj.width;\n                multiTimeSeriesObj.width = multiTimeSeriesObj.width + (e.offsetX - startOffsetX);\n                if (multiTimeSeriesObj.width === preWidth) {\n                    return\n                }\n                const interInfo = new InteractionInfo(\"resize\")\n                interInfo.setRangeW(multiTimeSeriesObj.timeRange, multiTimeSeriesObj.width, multiTimeSeriesObj.currentLevel);\n                interactionStack.push(interInfo);\n                resizeW(multiTimeSeriesObj.width)\n            }\n        });\n    svg.on(\"contextmenu\", (e) => {\n\n        if (interactionStack.length > 0) {\n            const interInfo = interactionStack.pop();\n\n            if (interInfo?.type === 'timebox') {\n                const curStats = interInfo.showInfo;\n                for (let i = 0; i < multiTimeSeriesObj.dataManagers.length; i++) {\n                    multiTimeSeriesObj.dataManagers[i].isShow = curStats![i];\n                }\n                draw();\n            } else if (interInfo?.type === 'resize') {\n\n                resizeW(interInfo.width);\n            } else if (interInfo?.type === 'zoom') {\n                isRebacking = true;\n                zoomIn(interInfo.timeRange)\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n\n    let i = 0;\n    canvas.addEventListener(\"click\", (e) => {\n        // if (i < 50) {\n        //     zoomIn([timeRangeScale(1493740845000), timeRangeScale(1493807899000)])\n        //     i++;\n        // }\n    });\n    draw();\n}\n\nfunction computeMinMax(multiTimeSeriesObj: MultiTimeSeriesObj) {\n    let min = Infinity;\n    let max = -Infinity;\n    for (let i = 0; i < multiTimeSeriesObj.columnInfos.length; i++) {\n        if (multiTimeSeriesObj.dataManagers[i].isShow) {\n            const columInfo = multiTimeSeriesObj.columnInfos[i];\n            for (let j = 0; j < columInfo.length; j++) {\n                if (columInfo[j].vRange[0] < min) {\n                    min = columInfo[j].vRange[0];\n                }\n\n                if (columInfo[j].vRange[1] > max) {\n                    max = columInfo[j].vRange[1];\n                }\n\n            }\n        } else {\n            // console.log(multiTimeSeriesObj.dataManagers[i].dataName)\n        }\n    }\n    return {\n        min,\n        max\n    }\n}\n","import { emitter, MultiTimeSeriesM4Obj } from \"@/store\";\nimport * as d3 from 'd3';\n//@ts-ignore\nimport * as seedRandom from \"seedrandom\";\nimport store from \"../store\"\n\n//const isInit=false\n\nexport function drawMultiTimeSeriesM4(multiTimeSeriesObj: MultiTimeSeriesM4Obj) {\n\n    const initTimeRange = [0, 2 ** multiTimeSeriesObj.maxLevel - 1];\n    console.log(initTimeRange);\n\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    //let currentLevel = multiTimeSeriesObj.currentLevel;\n    const pading = { top: 20, bottom: 20, left: 40, right: 20 };\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mouseup\", () => {\n            interactiveInfo.isMouseDown = false;\n        });\n    svg\n        .attr(\"width\", multiTimeSeriesObj.width + pading.left + pading.right)\n        .attr(\"height\", multiTimeSeriesObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${multiTimeSeriesObj.x},${multiTimeSeriesObj.y})`)\n        .style(\"background-color\", \"#fff\");\n\n    const foreignId = `foreign${multiTimeSeriesObj.width}`;\n    let foreignObj: any = svg.append(\"foreignObject\").attr(\"id\", foreignId).attr(\"x\", pading.left).attr(\"y\", pading.top).attr('width', multiTimeSeriesObj.width).attr('height', multiTimeSeriesObj.height);\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(foreignId)?.appendChild(canvas);\n    canvas.width = multiTimeSeriesObj.width;\n    canvas.height = multiTimeSeriesObj.height;\n    let ctx = canvas.getContext(\"2d\");\n\n    const xScale: any = d3.scaleLinear().domain([0, multiTimeSeriesObj.width]).range([0, multiTimeSeriesObj.width]);\n    //multiTimeSeriesObj.minv, multiTimeSeriesObj.maxv\n    console.log(\"jelo\")\n    const yScale: any = d3.scaleLinear().domain([-43.33507, 38.054184]).range([multiTimeSeriesObj.height, 0]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const xAxisG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis);\n    const yAxisG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n    let timeRange = [0, 0];\n    let allSum = 0;\n    function draw() {\n        timeRange = multiTimeSeriesObj.timeRange;\n        console.log(timeRange)\n        console.log(multiTimeSeriesObj);\n        const allRenderData = multiTimeSeriesObj.renderData;\n        ctx?.clearRect(0, 0, multiTimeSeriesObj.width, multiTimeSeriesObj.height);\n        let sum = 0;\n\n        //const colorArray=[\"#5677a4\",\"#a7c9e6\",\"#e68b39\",\"#f5c283\",\"#f5c283\",\"#99d083\",\"#b29b3c\",\"#ecd06e\",\"#5a9693\",\"#8fbab6\",\"#d4605b\",\"#f1a29b\",\"#77706e\",\"#b8b0ad\",\"#c97694\",\"#f3c1d1\",\"#aa7ba0\",\"#cea7c7\",\"#987862\",\"#d2b6a7\"]\n        const colorArray1=[\"#1f77b4\",\"#aec7e8\",\"#ff7f0e\",\"#ffbb78\",\"#2ca02c\",\"#98df8a\",\"#d62728\",\"#ff9896\",\"#9467bd\",\"#c5b0d5\",\"#8c564b\",\"#c49c94\",\"#e377c2\",\"#f7b6d2\",\"#7f7f7f\",\"#c7c7c7\",\"#bcbd22\",\"#dbdb8d\",\"#17becf\",\"#9edae5\"];\n        //@ts-ignore\n        for (let i = 0; i < allRenderData.length; i++) {\n\n            const rng = seedRandom(i)\n            //@ts-ignore\n            ctx.strokeStyle = colorArray1[19-i]//`rgb(${rng() * 255},${rng() * 255},${rng() * 255})`;\n            ctx?.beginPath();\n            const renderData = allRenderData[i].data\n            sum += renderData.length;\n            for (let j = 0; j < renderData.length; j++) {\n\n                renderData[j].y = yScale(renderData[j].v)\n                if (j === 0) {\n                    ctx?.moveTo(renderData[j].x, renderData[j].y);\n                } else {\n                    ctx?.lineTo(renderData[j].x, renderData[j].y);\n                }\n            }\n            ctx?.stroke();\n        }\n        console.log(sum);\n        allSum += sum;\n        console.log(\"all:\", allSum);\n    }\n    function redraw(multObj: MultiTimeSeriesM4Obj) {\n        multiTimeSeriesObj = multObj;\n        draw();\n\n    }\n    //@ts-ignore\n    emitter.on(\"update_multi_timeseries_m4_obj\", redraw);\n    draw();\n\n    function downZoomIn() {\n        let width = 2 ** 20\n        let lastEnd = 2 ** 20;\n        let lastStart = 0;\n        //136597 935172\n        return () => {\n            width = width - 50000;\n            let start = Math.floor(Math.random() * 50000) + lastStart;\n            lastStart = start;\n            let end = start + width - 1;\n            const payload = {\n                width: multiTimeSeriesObj.width,\n                height: multiTimeSeriesObj.height,\n                type: store.state.controlParams.currentTimeBoxType,\n                start: start,\n                end: end,\n            };\n            console.log(start, end);\n            store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n        }\n    }\n \n\n    function zoomIn() {\n        console.log(\"zoom in\")\n        const payload = {\n            width: multiTimeSeriesObj.width,\n            height: multiTimeSeriesObj.height,\n            type: store.state.controlParams.currentTimeBoxType,\n            start: timeRange[0],\n            end: timeRange[1] - 20000,\n        };\n        store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n        //draw();\n    }\n    function zoomOut() {\n        console.log(\"zooom out\")\n        const payload = {\n            width: multiTimeSeriesObj.width,\n            height: multiTimeSeriesObj.height,\n            type: store.state.controlParams.currentTimeBoxType,\n            start: timeRange[0],\n            end: Math.floor(timeRange[1] * 2 + 1),\n        };\n        store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n        //draw();\n    }\n\n    function pan(offset: number) {\n        console.log(\"pan\")\n        const payload = {\n            width: multiTimeSeriesObj.width,\n            height: multiTimeSeriesObj.height,\n            type: store.state.controlParams.currentTimeBoxType,\n            start: timeRange[0] + offset,\n            end: timeRange[1] + offset,\n        };\n        store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n        // draw();\n    }\n    function resize(width: number) {\n        console.log(\"resize\")\n        const payload = {\n            width: width,\n            height: multiTimeSeriesObj.height,\n            type: store.state.controlParams.currentTimeBoxType,\n            start: timeRange[0],\n            end: timeRange[1],\n        };\n        store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n        // draw();\n    }\n    function timeBox(info: { startX: number, width: number, vMin: number, vMax: number }) {\n        console.time(\"timebox\")\n        const allRenderData = multiTimeSeriesObj.renderData;\n        let sum = 0;\n        //@ts-ignore\n        for (let i = 0; i < allRenderData.length; i++) {\n            const renderData = allRenderData[i].data\n            let flag = true;\n            for (let j = 0; j < renderData.length; j++) {\n\n                //renderData[j].y = yScale(renderData[j].v)\n                if (renderData[j].x >= info.startX && renderData[j].x <= info.startX + info.width) {\n                    flag = flag && (renderData[j].v <= info.vMax && renderData[j].v >= info.vMin)\n                }\n            }\n            if (flag) {\n                sum++\n            }\n        }\n        console.log(sum);\n        console.timeEnd(\"timebox\")\n\n    }\n    function doTimeBox(){\n        const allTime=[];\n        for(let i=0;i<50;i++){\n            const startX=Math.random()*500;\n            const width=Math.random()*200+300;\n            const vMin=Math.random()*(multiTimeSeriesObj.maxv-multiTimeSeriesObj.minv)//+Math.random()*multiTimeSeriesObj.minv;\n            const vMax=Math.random()*multiTimeSeriesObj.minv+800;\n            const startT=new Date().getMilliseconds();\n            timeBox({startX,width,vMin,vMax});\n            allTime.push((new Date().getMilliseconds()-startT).toFixed(4));\n        }\n        console.log(allTime);\n    }\n\n    \n    const zoomArray:Array<Array<number>>=[]\n    function zoomInIn(index:number) {\n            const zoomInfo=zoomArray[index];\n            const payload = {\n                width: multiTimeSeriesObj.width,\n                height: multiTimeSeriesObj.height,\n                type: store.state.controlParams.currentTimeBoxType,\n                start: zoomInfo[0],\n                end: zoomInfo[1],\n            };\n            store.dispatch(\"loadMultiTimeSeriesM4Data\", payload);\n    }\n    let i=49;\n    canvas.addEventListener(\"click\", (e) => {\n        doTimeBox();\n       \n\n\n    });\n\n\n\n\n\n}","import { MultiHaarTimeSeriesObj } from \"@/store\";\nimport * as d3 from 'd3';\n\nexport function drawMultiHaarTimeSeries(multiTimeSeriesObj: MultiHaarTimeSeriesObj) {\n    const initTimeRange = [0, 2 ** multiTimeSeriesObj.maxLevel - 1];\n\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    //let currentLevel = multiTimeSeriesObj.currentLevel;\n    const pading = { top: 20, bottom: 20, left: 40, right: 20 };\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mouseup\", () => {\n            interactiveInfo.isMouseDown = false;\n        });\n    svg\n        .attr(\"width\", multiTimeSeriesObj.width + pading.left + pading.right)\n        .attr(\"height\", multiTimeSeriesObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${multiTimeSeriesObj.x},${multiTimeSeriesObj.y})`)\n        .style(\"background-color\", \"#fff\");\n\n    const foreignId=`foreign${multiTimeSeriesObj.width}`;\n    let foreignObj: any = svg.append(\"foreignObject\").attr(\"id\", foreignId).attr(\"x\", pading.left).attr(\"y\", pading.top).attr('width', multiTimeSeriesObj.width).attr('height', multiTimeSeriesObj.height);\n    const canvas = document.createElement(\"canvas\");\n    document.getElementById(foreignId)?.appendChild(canvas);\n    canvas.width = multiTimeSeriesObj.width;\n    canvas.height = multiTimeSeriesObj.height;\n    let ctx = canvas.getContext(\"2d\");\n\n    const xScale: any = d3.scaleLinear().domain([0, multiTimeSeriesObj.width]).range([0,multiTimeSeriesObj.width]);\n    const yScale: any = d3.scaleLinear().domain([multiTimeSeriesObj.minv, multiTimeSeriesObj.maxv]).range([multiTimeSeriesObj.height,0 ]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const xAxisG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${multiTimeSeriesObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis);\n    const yAxisG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n\n    function draw() {\n            console.log(multiTimeSeriesObj);\n            const allRenderData=multiTimeSeriesObj.allRenderData;\n            ctx?.clearRect(0,0,multiTimeSeriesObj.width,multiTimeSeriesObj.height);\n            //@ts-ignore\n            //ctx?.strokeStyle=\"steelblue\";\n            for(let i=0;i<allRenderData.length;i++){\n                ctx?.beginPath();\n                const renderData=allRenderData[i].renderData\n                for(let j=0;j<renderData.length;j++){\n                    renderData[j].y=yScale(renderData[j].v)\n                    if(j===0){\n                        ctx?.moveTo(xScale(renderData[j].x),renderData[j].y);\n                    }else{\n                        ctx?.lineTo(xScale(renderData[j].x),renderData[j].y);\n                    }\n                }\n                ctx?.stroke();\n            }\n    }\n    draw();\n\n}","import { render } from \"./DisplayContentPanel.vue?vue&type=template&id=1bd4215f&scoped=true\"\nimport script from \"./DisplayContentPanel.vue?vue&type=script&lang=js\"\nexport * from \"./DisplayContentPanel.vue?vue&type=script&lang=js\"\n\nimport \"./DisplayContentPanel.vue?vue&type=style&index=0&id=1bd4215f&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1bd4215f\"]])\n\nexport default __exports__","\nimport { defineComponent } from \"vue\";\nimport GlobalHeader from \"./components/GlobalHeader.vue\";\nimport LeftSideDataControlPanel from \"./components/LeftSideDataControlPanel.vue\";\nimport DispalyContentPanel from \"./components/DisplayContentPanel.vue\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport store from \"./store\";\n\nexport default defineComponent({\n  components: { GlobalHeader, LeftSideDataControlPanel, DispalyContentPanel },\n  setup(){\n    store.dispatch(\"loadDefaultTableAndInfo\");\n    store.dispatch(\"getAllFlags\");\n    \n    \n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=864f9004&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_HelloWorld, { msg: \"Welcome to Your Vue.js + TypeScript App\" })\n  ]))\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d988826c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"hello\" }\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<p data-v-d988826c> For a guide and recipes on how to configure / customize this project,<br data-v-d988826c> check out the <a href=\\\"https://cli.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vue-cli documentation</a>. </p><h3 data-v-d988826c>Installed CLI Plugins</h3><ul data-v-d988826c><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>babel</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-router\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>router</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-vuex\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vuex</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>eslint</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-typescript\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>typescript</a></li></ul><h3 data-v-d988826c>Essential Links</h3><ul data-v-d988826c><li data-v-d988826c><a href=\\\"https://vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>Core Docs</a></li><li data-v-d988826c><a href=\\\"https://forum.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>Forum</a></li><li data-v-d988826c><a href=\\\"https://chat.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>Community Chat</a></li><li data-v-d988826c><a href=\\\"https://twitter.com/vuejs\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>Twitter</a></li><li data-v-d988826c><a href=\\\"https://news.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>News</a></li></ul><h3 data-v-d988826c>Ecosystem</h3><ul data-v-d988826c><li data-v-d988826c><a href=\\\"https://router.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vue-router</a></li><li data-v-d988826c><a href=\\\"https://vuex.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vuex</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/vue-devtools#vue-devtools\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vue-devtools</a></li><li data-v-d988826c><a href=\\\"https://vue-loader.vuejs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>vue-loader</a></li><li data-v-d988826c><a href=\\\"https://github.com/vuejs/awesome-vue\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" data-v-d988826c>awesome-vue</a></li></ul>\", 7)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"h1\", null, _toDisplayString(_ctx.msg), 1),\n    _hoisted_2\n  ]))\n}","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'HelloWorld',\n  props: {\n    msg: String,\n  },\n});\n","import { render } from \"./HelloWorld.vue?vue&type=template&id=d988826c&scoped=true&ts=true\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=ts\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=ts\"\n\nimport \"./HelloWorld.vue?vue&type=style&index=0&id=d988826c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d988826c\"]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue';\nimport store from '../store'\nimport HelloWorld from '@/components/HelloWorld.vue'; // @ is an alias to /src\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    HelloWorld,\n  },\n \n});\n","import { render } from \"./Home.vue?vue&type=template&id=34c54b5e&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/chun/project/jsproject/om3/responsive_linechart_web/om3_client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport Home from '../views/Home.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/about',\n    name: 'About',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport axios from 'axios'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ElementPlus from 'element-plus';\n\n\nimport 'element-plus/dist/index.css';\n\naxios.defaults.baseURL=\"http://127.0.0.1:3000\"//\n\nlet myCookie=localStorage.getItem(\"om3_cookie\");\nif(myCookie===null||myCookie===''){\n    myCookie='user_cookie='+uuidv4()\n    localStorage.setItem(\"om3_cookie\",myCookie);\n}\nconsole.log(\"mycookie:\",myCookie)\naxios.defaults.headers.common['Authorization'] = myCookie\n\n//computeDensity()\n\ncreateApp(App).use(ElementPlus).use(store).use(router).mount('#app');\n\n\n","\n\nimport { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport store, { ViewChangeLineChartObj } from \"@/store\";\nimport * as d3 from 'd3';\nimport { formatRenderDataForViewChange, formatNonPowDataForViewChange } from '../helper/format-data';\nclass InteractionInfo {\n    type: string\n    showInfo: Array<boolean>\n    timeRange: Array<number>\n    width: number\n    level: number\n    constructor(type: string) {\n        this.type = type;\n        this.showInfo = [];\n        this.timeRange = [];\n        this.width = 0;\n        this.level = 0;\n    }\n    setShowInfo(showInfo: Array<boolean>) {\n        this.showInfo = showInfo;\n    }\n    setRangeW(timeRange: Array<number>, width: number, level: number) {\n        this.timeRange = [timeRange[0], timeRange[1]];\n        this.width = width;\n        this.level = level;\n    }\n\n}\nlet interactionStack: Array<InteractionInfo> = [];\n\nexport function drawViewChangeLineChart(lineChartObj: ViewChangeLineChartObj) {\n    let realTimeStampRange: Array<number> = [];\n    let nodeIndexRange: Array<number> = []\n    realTimeStampRange = [lineChartObj.startTime,lineChartObj.endTime];\n\n    nodeIndexRange = [lineChartObj.timeRange[0],lineChartObj.timeRange[1]];\n   \n    let isInit = false;\n    let isResizing = false;\n    let isRebacking = false;\n    let interactiveInfo = {\n        startX: 0,\n        startY: 0,\n        offsetX: 0,\n        offsetY: 0,\n        isMouseDown: false,\n        isMove: false,\n    };\n    const pading = { top: 20, bottom: 80, left: 45, right: 45 };\n    const svg = d3.select(\"#content-container\").append(\"svg\");\n    svg\n        .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n        .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        .attr(\"transform\", `translate(${lineChartObj.x},${lineChartObj.y})`)\n        .style(\"background-color\", \"#fff\");\n    const foreignId = `foreign${lineChartObj.width + Math.random()}`;\n    const foreigG = svg.append(\"g\").attr(\"transfrom\", `translate(${pading.left},${pading.top})`)\n    let foreignObj: any = foreigG.append(\"foreignObject\").attr(\"id\", foreignId).attr(\"x\", pading.left).attr(\"y\", pading.top).attr('width', lineChartObj.width).attr('height', lineChartObj.height);\n    const canvas = document.createElement(\"canvas\");\n    (canvas as any).__data__ = {}\n    document.getElementById(foreignId)?.appendChild(canvas);\n    canvas.width = lineChartObj.width;\n    canvas.height = lineChartObj.height;\n    let ctx = canvas.getContext(\"2d\");\n\n    const indexToTimeStampScale = d3.scaleLinear().domain([nodeIndexRange[0], nodeIndexRange[1]]).range([realTimeStampRange[0], realTimeStampRange[1]]);\n    const xScale: any = d3.scaleLinear().domain([0, lineChartObj.width]).range([0, lineChartObj.width]);\n    let showTimeXScale: any = d3.scaleTime().domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, lineChartObj.width]);\n    let yScale: any = d3.scaleLinear().domain([lineChartObj.data.minv, lineChartObj.data.maxv]).range([lineChartObj.height, 0]);\n    let xReScale = d3.scaleLinear().domain([0, lineChartObj.width]).range([0, lineChartObj.dataManager.realDataRowNum - 1]);\n    let showXTimeScale: any = d3.scaleTime().domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, lineChartObj.width]);\n\n    let zoomAxis = d3.axisBottom(showTimeXScale);\n    let yAxis = d3.axisLeft(yScale)\n    let xAxis = d3.axisBottom(showXTimeScale)\n    const timeBrushObj = d3.brushX().extent([[0, 10], [lineChartObj.width, 40]]);\n\n    timeBrushObj.on(\"end\", brushed);\n    timeBrushObj.on(\"start\", () => {\n        console.log(\"start\")\n    })\n    const timeBoxG = svg.append(\"g\").attr(\"transform\", `translate(${pading.left},${pading.top + 50 + lineChartObj.height - 20})`).call(timeBrushObj).call(timeBrushObj.move, [0, lineChartObj.width]);\n    let zoomAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${lineChartObj.height + pading.top + 50})`).attr(\"class\", 'x axis').call(zoomAxis)\n    let xAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${lineChartObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis)\n    let yAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n\n\n    function updateCanvasWidth() {\n\n        //@ts-ignore\n        canvas.style.width = lineChartObj.width;\n        svg\n            .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n            .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        foreignObj.attr(\"width\", lineChartObj.width);\n        xScale.domain([0, lineChartObj.width]).range([0, lineChartObj.width]);\n        showTimeXScale.domain([new Date(realTimeStampRange[0]), new Date(realTimeStampRange[1])]).range([0, lineChartObj.width]);\n        //showTimeXScale.range([0, lineChartObj.width]);\n        if (zoomAxisG != null) {\n            zoomAxisG.remove();\n            zoomAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${lineChartObj.height + pading.top + 50})`).attr(\"class\", 'x axis').call(zoomAxis)\n        }\n        timeBrushObj.extent([[0, 10], [lineChartObj.width, 40]]);\n        timeBrushObj.on(\"end\", brushed);\n        timeBrushObj.on(\"start\", () => {\n            console.log(\"start\")\n        })\n        const tempReScale=d3.scaleLinear().domain([0, lineChartObj.dataManager.realDataRowNum - 1]).range([0,lineChartObj.width]);\n\n        timeBoxG.call(timeBrushObj).call(timeBrushObj.move, [tempReScale(lineChartObj.timeRange[0]), tempReScale(lineChartObj.timeRange[1])]);\n        ctx = canvas.getContext(\"2d\");\n    }\n\n\n\n\n    function draw(nonUniformColObjs?: Array<NoUniformColObj>,type?:string) {\n        canvas.width = lineChartObj.width;\n        yScale = d3.scaleLinear().domain([lineChartObj.data.minv, lineChartObj.data.maxv]).range([lineChartObj.height, 0]);\n        yAxis = d3.axisLeft(yScale)\n        if (yAxisG !== null && yAxisG !== undefined) {\n            yAxisG.remove();\n        }\n        yAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${pading.top})`).attr(\"class\", 'y axis').call(yAxis);\n\n\n\n        showXTimeScale = d3.scaleTime().domain([new Date(Math.floor(indexToTimeStampScale(lineChartObj.timeRange[0]))), new Date(Math.floor(indexToTimeStampScale(lineChartObj.timeRange[1])))]).range([0, lineChartObj.width]);\n        xAxis = d3.axisBottom(showXTimeScale);\n        if (xAxisG !== null && xAxisG !== undefined) {\n            xAxisG.remove();\n        }\n        xAxisG = svg.append(\"g\").attr('style', 'user-select:none').attr(\"transform\", `translate(${pading.left},${lineChartObj.height + pading.top})`).attr(\"class\", 'x axis').call(xAxis)\n\n\n        if (foreignObj == null && nonUniformColObjs) {\n            foreignObj = svg.append(\"foreignObject\")\n                .attr(\"id\", \"foreign\")\n                .attr('x', pading.left)\n                .attr('y', pading.top)\n                .attr('width', lineChartObj.width)\n                .attr('height', lineChartObj.height);\n            const canvas = document.createElement(\"canvas\");\n            document.getElementById(\"foreign\")?.appendChild(canvas);\n            canvas.width = lineChartObj.width;\n            canvas.height = lineChartObj.height;\n            ctx = canvas.getContext(\"2d\");\n        }\n\n\n        if (nonUniformColObjs && ctx) {\n            formatNonPowDataForViewChange(nonUniformColObjs,lineChartObj.width,lineChartObj.maxLen,null)\n            // console.log(nonUniformColObjs);\n            ctx.clearRect(0, 0, lineChartObj.width, lineChartObj.height);\n            ctx.beginPath();\n            ctx.strokeStyle = \"steelblue\"\n            \n            \n            for (let i = 0; i < nonUniformColObjs.length; i++) {\n                if (nonUniformColObjs[i].isMis) {\n                    continue\n                }\n                if (nonUniformColObjs[i].minVTimeRange[0] < nonUniformColObjs[i].maxVTimeRange[0]) {\n                    ctx.moveTo(nonUniformColObjs[i].positionInfo.minX, yScale(nonUniformColObjs[i].vRange[0]));\n                    ctx.lineTo(nonUniformColObjs[i].positionInfo.maxX, yScale(nonUniformColObjs[i].vRange[1]));\n                } else {\n                    ctx.moveTo(nonUniformColObjs[i].positionInfo.minX, yScale(nonUniformColObjs[i].vRange[1]));\n                    ctx.lineTo(nonUniformColObjs[i].positionInfo.maxX, yScale(nonUniformColObjs[i].vRange[0]));\n                }\n                if (i <= nonUniformColObjs.length - 2 && nonUniformColObjs[i].endV !== undefined && nonUniformColObjs[i + 1] !== undefined) {\n                    ctx.moveTo(nonUniformColObjs[i].positionInfo.endX, yScale(nonUniformColObjs[i].endV!));\n                    ctx.lineTo(nonUniformColObjs[i + 1].positionInfo.startX, yScale(nonUniformColObjs[i + 1].startV!));\n                }\n\n            }\n            const stack = [];\n            for (let i = 0; i < nonUniformColObjs.length - 1; i++) {\n                if (!nonUniformColObjs[i].isMis && nonUniformColObjs[i + 1].isMis) {\n                    stack.push(nonUniformColObjs[i]);\n                    for (let j = i + 1; j < nonUniformColObjs.length; j++) {\n                        if (nonUniformColObjs[j - 1].isMis && !nonUniformColObjs[j].isMis) {\n                            const co = stack.pop()\n                            if (nonUniformColObjs[j].startV === undefined || co?.endV === undefined) {\n                                console.error(\"error nonUniform\");\n                            }\n                            ctx.moveTo(co!.positionInfo.endX, yScale(co!.endV));\n                            if (nonUniformColObjs[j].startV !== undefined) {\n                                ctx.lineTo(nonUniformColObjs[j].positionInfo.startX, yScale(nonUniformColObjs[j].startV!))\n                            } else {\n                                ctx.lineTo(nonUniformColObjs[j].positionInfo.minX, yScale((nonUniformColObjs[j].vRange[0] + nonUniformColObjs[j].vRange[1]) / 2))\n                            }\n\n                        }\n                    }\n                }\n            }\n            ctx.stroke();\n        } else {\n            console.log(\"error\")\n        }\n\n    }\n\n    // draw(!lineChartObj.isPow ? lineChartObj.nonUniformColObjs : undefined);\n\n\n    //@ts-ignore\n    function brushed({ selection }) {\n        if (!isInit) {\n            isInit = true\n            return;\n        }\n        if (isResizing) {\n            isRebacking = false;\n            return;\n        }\n        if (isRebacking) {\n            isRebacking = false;\n            return\n        }\n        const timeRange = [Math.floor(xReScale(selection[0])), Math.floor(xReScale(selection[1]))];\n        if (timeRange[0] < 0) {\n            timeRange[0] = 0;\n        }\n        if (timeRange[1] > nodeIndexRange[1]) {\n            timeRange[1] = nodeIndexRange[1]\n        }\n        const interInfo = new InteractionInfo(\"zoom\")\n        interInfo.setRangeW(lineChartObj.timeRange, lineChartObj.width, lineChartObj.currentLevel);\n        interactionStack.push(interInfo);\n        //debugger\n        lineChartObj.dataManager.viewChangeInteractionFinal1(lineChartObj.currentLevel, lineChartObj.width, [timeRange[0], timeRange[1]], null,draw).then((columnsInfos) => {\n            //lineChartObj.nonUniformColObjs = columnsInfos;\n            //const nonUniformRenderData = formatNonPowDataForViewChange(columnsInfos, lineChartObj.width, lineChartObj.maxLen, yScale);\n            lineChartObj.timeRange[0] = timeRange[0];\n            lineChartObj.timeRange[1] = timeRange[1];\n            //@ts-ignore\n            //lineChartObj.nonUniformColObjs = nonUniformRenderData;\n\n            draw(columnsInfos);\n        })\n    }\n\n    function resizeW(width: number) {\n        isResizing = true;\n\n        const currentLevel = lineChartObj.currentLevel;\n\n        lineChartObj.width = width;\n        updateCanvasWidth();\n\n        if (currentLevel + 1 >= lineChartObj.dataManager.maxLevel - 1) {\n            return\n        }\n        //@ts-ignore\n        canvas.style.width = lineChartObj.width;\n        lineChartObj.dataManager.viewChangeInteractionFinal1(lineChartObj.currentLevel, lineChartObj.width, [lineChartObj.timeRange[0], lineChartObj.timeRange[1]], null,draw).then((columnsInfos) => {\n            //const nonUniformRenderData = formatNonPowDataForViewChange(columnsInfos, lineChartObj.width, 2 ** lineChartObj.dataManager.maxLevel, yScale);\n            //@ts-ignore\n            //lineChartObj.nonUniformColObjs = nonUniformRenderData;\n            draw(columnsInfos);\n        })\n    }\n    let isMouseover = false;\n    let startOffsetX = 0;\n    const dragRect = svg\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"height\", lineChartObj.height + pading.top + pading.bottom)\n        .attr(\"width\", lineChartObj.width + pading.left + pading.right)\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 4)\n        .attr(\"fill\", \"none\")\n        .on(\"mouseover\", () => {\n            document.body.style.cursor = 'ew-resize';\n            isMouseover = true;\n        })\n        .on(\"mousedown\", (e) => {\n            if (isMouseover) {\n                startOffsetX = e.offsetX;\n                interactiveInfo.isMouseDown = true;\n            }\n        })\n        .on(\"mouseup\", () => {\n            console.log()\n        })\n        .on(\"mousemove\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                svg.attr(\"width\", lineChartObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n                dragRect.attr(\"width\", lineChartObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n            }\n        })\n        .on(\"mouseleave\", () => {\n            if (!interactiveInfo.isMouseDown) {\n                document.body.style.cursor = 'default';\n            }\n        })\n\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mousemove\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                svg.attr(\"width\", lineChartObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n                dragRect.attr(\"width\", lineChartObj.width + pading.right + pading.left + (e.offsetX - startOffsetX));\n            }\n        });\n\n    document\n        .getElementById(\"content-container\")!\n        .addEventListener(\"mouseup\", (e) => {\n            if (interactiveInfo.isMouseDown) {\n                interactiveInfo.isMouseDown = false;\n                isMouseover = false;\n                document.body.style.cursor = 'default';\n                let preWidth = lineChartObj.width;\n                lineChartObj.width = lineChartObj.width + (e.offsetX - startOffsetX);\n                if (lineChartObj.width === preWidth) {\n                    return\n                }\n                const interInfo = new InteractionInfo(\"resize\")\n                interInfo.setRangeW(lineChartObj.timeRange, lineChartObj.width, lineChartObj.currentLevel);\n                interactionStack.push(interInfo);\n                resizeW(lineChartObj.width)\n            }\n        });\n\n    return draw\n}\n\nfunction computeMinMax(columInfo: Array<NoUniformColObj>) {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (let j = 0; j < columInfo.length; j++) {\n        if (columInfo[j].vRange[0] < min) {\n            min = columInfo[j].vRange[0];\n        }\n\n        if (columInfo[j].vRange[1] > max) {\n            max = columInfo[j].vRange[1];\n        }\n\n    }\n\n    return {\n        min,\n        max\n    }\n}\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DisplayContentPanel.vue?vue&type=style&index=0&id=1bd4215f&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!./HelloWorld.vue?vue&type=style&index=0&id=d988826c&scoped=true&lang=css\"","import store, { emitter, getAvgTime, GlobalState, MultiTimeSeriesObj, ViewChangeLineChartObj, ws } from \".\";\nimport { Commit, ActionContext, ActionHandler } from 'vuex'\nimport axios from \"axios\";\nimport { constructMinMaxMissTrendTree, constructTrendTree } from '../helper/wavlet-decoder';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as d3 from \"d3\";\nimport LevelDataManager from \"@/model/level-data-manager\";\nimport { NoUniformColObj } from \"@/model/non-uniform-col-obj\";\nimport { formatToRenderDataForTrend, getGlobalMinMaxInfo } from \"@/helper/format-data\";\nimport md5 from \"md5\"\nimport { arrayBufferToBase64, base64ToArrayBuffer, getLevelData, openLoading } from \"@/helper/util\";\nimport { ElLoading } from 'element-plus'\nimport { drawViewChangeLineChart } from \"@/application/line-interaction\";\nimport { indexGetData, indexPutData, initIndexDB } from \"@/indexdb\";\n\n\nasync function get(state: GlobalState, url: string) {\n\n    url = 'postgres' + url;\n\n    //const loading = openLoading();\n    const { data } = await axios.get(url);\n    //loading.close();\n    return data;\n}\n\n\n\nasync function getBuffer(state: GlobalState, url: string) {\n\n    url = 'postgres' + url;\n    // localStorage.removeItem(url)\n    try {\n        const timeGetCache = new Date().getTime()\n        const cacheFlag = await indexGetData(url)\n\n        if (cacheFlag && cacheFlag !== '' && cacheFlag !== undefined && cacheFlag !== null) {\n            //@ts-ignore\n            const flagBuffer = base64ToArrayBuffer(cacheFlag!);\n            console.log(url, \"use flag cache:\", flagBuffer.byteLength);\n            return flagBuffer\n        }\n\n    } catch (err) {\n        console.error(err)\n    }\n\n\n    //const loading = openLoading();\n    const { data } = await axios.get(url, { responseType: 'arraybuffer' });\n    if (data) {\n        indexPutData(url, arrayBufferToBase64(data));\n        console.log(url, \" store in indexdb\")\n    }\n    // loading.close();\n    return data;\n}\n\n\n\nconst loadViewChangeQueryWSMinMaxMissDataInitData: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: number, endTime: number, width: number, height: number }) => {\n    let maxLevel = 0\n    const currentTable = context.state.controlParams.currentTable;\n    let lineInfo: any = null\n    if (context.state.controlParams.currentMode === 'Default') {\n        lineInfo = context.state.defaultTableMap.get(currentTable);\n    } else {\n        lineInfo = context.state.customTableMap.get(currentTable);\n    }\n\n    if (lineInfo === undefined) {\n        throw new Error(\"cannot get class info\");\n    }\n    maxLevel = lineInfo['level'];\n    const startTimeStamp = new Date(lineInfo.start_time).getTime();\n    let endTimeStamp = 0\n    if (lineInfo.end_time !== '') {\n        endTimeStamp = new Date(lineInfo.end_time).getTime();\n    }\n    let timeInterval = 0;\n    if (lineInfo.interval !== 0) {\n        timeInterval = lineInfo.interval;\n    }\n    //@ts-ignore\n    const combinedUrl = `/line_chart/init_wavelet_bench_min_max_miss?width=${2 ** (Math.ceil(Math.log2(payload.width)))}&table_name=${context.state.controlParams.currentTable}&mode=${context.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n    data.then(tempRes => {\n        if (tempRes['code'] === 200) {\n            const finalRes = tempRes['data']['result'];\n            const currentLevel = Math.ceil(Math.log2(payload.width));\n\n            const { trendTree, dataManager } = constructMinMaxMissTrendTree(finalRes, payload.width);\n            dataManager.maxLevel = maxLevel\n            dataManager.realDataRowNum = lineInfo['max_len']\n            const { minv, maxv } = getGlobalMinMaxInfo(getLevelData(dataManager.levelIndexObjs[dataManager.levelIndexObjs.length - 1].firstNodes[0]));\n\n            const viewChangeQueryObj: ViewChangeLineChartObj = {\n                id: uuidv4(),\n                width: payload.width,\n                height: payload.height,\n                x: Math.random() * 60,\n                y: Math.random() * 60,\n                root: trendTree,\n                data: { powRenderData: [], noPowRenderData: [], minv: minv!, maxv: maxv! },\n                timeRange: [0, lineInfo['max_len']],\n                startTime: startTimeStamp,\n                endTime: endTimeStamp,\n                algorithm: \"\",\n                dataManager: dataManager,\n                params: [0, 0],\n                currentLevel: Math.ceil(Math.log2(payload.width)),\n                isPow: false,\n                nonUniformColObjs: [],\n                maxLen: lineInfo['max_len']\n            }\n            const drawer = drawViewChangeLineChart(viewChangeQueryObj)\n            dataManager.getDataMinMaxMiss(currentLevel + 1, 0, 2 ** (currentLevel + 1) - 1).then(() => {\n                const minV = dataManager.levelIndexObjs[0].firstNodes[0].yArray[1];\n                const maxV = dataManager.levelIndexObjs[0].firstNodes[0].yArray[2];\n                const yScale = d3.scaleLinear().domain([minV, maxV]).range([payload.height, 0]);\n\n                dataManager.viewChangeInteractionFinal1(Math.ceil(Math.log2(payload.width)), payload.width, [0, lineInfo['max_len'] - 1], yScale, drawer).then(res => {\n                    drawer(res)\n                    //context.commit(\"addViewChangeQueryNoPowLineChartObj\", { trendTree, dataManager, data: res, startTime: payload.startTime, endTime: payload.endTime, algorithm: \"trendtree\", width: payload.width, height: payload.height });\n                });\n            });\n\n        } else {\n            console.error(tempRes['msg'])\n        }\n\n    });\n}\n\nconst loadMultiTimeSeriesInitData: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { width: number, height: number, type: string }) => {\n    const currentLevel = Math.ceil(Math.log2(payload.width));\n    let maxLevel = 0\n    const currentMulitLineClass = context.state.controlParams.currentMultiLineClass;\n    let lineClassInfo: any = null\n    if (context.state.controlParams.currentMode === 'Default') {\n        lineClassInfo = context.state.allMultiLineClassInfoMap.get(currentMulitLineClass);\n    } else {\n        lineClassInfo = context.state.allCustomMultiLineClassInfoMap.get(currentMulitLineClass);\n    }\n\n    if (lineClassInfo === undefined) {\n        throw new Error(\"cannot get class info\");\n    }\n    maxLevel = lineClassInfo['level'];\n    const combinedUrl = `/line_chart/init_multi_timeseries?width=${2 ** currentLevel}&class_name=${currentMulitLineClass}&mode=${context.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n\n    data.then(res => {\n        let dataManagers: Array<LevelDataManager> = [];\n        let globalMaxV = -Infinity;\n        let globalMinV = Infinity;\n        for (let i = 0; i < res.length; i++) {\n            const { dataManager } = constructMinMaxMissTrendTree(res[i].d, payload.width, res[i].tn);\n\n            dataManager.maxLevel = maxLevel;\n            dataManager.realDataRowNum = lineClassInfo['max_len'];\n\n            const { minv, maxv } = getGlobalMinMaxInfo(getLevelData(dataManager.levelIndexObjs[dataManager.levelIndexObjs.length - 1].firstNodes[0]));\n            globalMaxV = Math.max(maxv!, globalMaxV);\n            globalMinV = Math.min(minv!, globalMinV);\n            dataManager.md5Num = parseInt(\"0x\" + md5(dataManager.dataName).slice(0, 8))\n            dataManagers.push(dataManager);\n        }\n\n        dataManagers = dataManagers.sort((a, b) => {\n            return parseInt(\"0x\" + md5(a.dataName).slice(0, 8)) - parseInt(\"0x\" + md5(b.dataName).slice(0, 8))\n        })\n\n        const allPromises = [];\n        const columnsInfoArray: Array<Array<NoUniformColObj>> = new Array(dataManagers.length);\n        for (let i = 0; i < dataManagers.length; i++) {\n            allPromises.push(new Promise((resolve, reject) => {\n                dataManagers[i].viewChangeInteractionFinal1(currentLevel, payload.width, [0, dataManagers[i].realDataRowNum - 1], null, null).then((noUniformColObjs: Array<NoUniformColObj>) => {\n                    columnsInfoArray[i] = noUniformColObjs;\n                    dataManagers[i].columnInfos = noUniformColObjs\n                    resolve(null);\n                }).catch((error) => {\n                    reject(error);\n                });\n            }));\n        }\n        Promise.all(allPromises).then(() => {\n            const startTimeStamp = new Date(lineClassInfo.start_time).getTime();\n            let endTimeStamp = 0\n            if (lineClassInfo.end_time !== '') {\n                endTimeStamp = new Date(lineClassInfo.end_time).getTime();\n            }\n            let timeInterval = 0;\n            if (lineClassInfo.interval !== 0) {\n                timeInterval = lineClassInfo.interval;\n            }\n\n            context.commit(\"addMultiTimeSeriesObj\", {\n                className: lineClassInfo.name,\n                lineAmount: lineClassInfo.amount,\n                startTimeStamp: startTimeStamp,\n                endTimeStamp: endTimeStamp,\n                timeIntervalMs: timeInterval, dataManagers: dataManagers, columnInfos: columnsInfoArray, startTime: 0, endTime: dataManagers[0].realDataRowNum - 1, algorithm: \"multitimeseries\", width: payload.width, height: payload.height, pow: false, minv: globalMinV, maxv: globalMaxV, maxLevel\n            })\n        }).catch(error => {\n            throw error\n        });\n\n    });\n}\n\nconst getAllTables: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllTables`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        const allTables = res.map((v: any) => v['table_fullname'].split(\".\")[1]);\n        context.commit(\"updateAllTables\", { tables: allTables });\n    })\n}\n\n\n\nasync function getAllFlagsFunc(context: ActionContext<GlobalState, GlobalState>, lineType: string, isLoading: boolean) {\n\n    const combinedUrl1 = `/line_chart/getAllFlagNames?line_type=${lineType}`;\n    const allFlagNames = await get(context.state, combinedUrl1);\n    const flagMap: any = {}\n\n    let loading = null;\n    if (isLoading) {\n        loading = openLoading(\"Loading Order Coefficients. First load may take a long time, Please Wait!\")\n    }\n    for (let i = 0; i < allFlagNames['data'].length; i++) {\n        const combinedUrl2 = `/line_chart/getSingleFlag?name=${allFlagNames['data'][i]}&line_type=${lineType}`\n        const tempFlagInfo = await getBuffer(context.state, combinedUrl2);\n\n        //@ts-ignore\n        flagMap[allFlagNames['data'][i].split(\".\")[0]] = Buffer.from(tempFlagInfo)\n    }\n    if (loading) {\n        loading.close()\n    }\n\n    return flagMap;\n}\n\nconst getAllFlags: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    initIndexDB().then(() => {\n        console.log(\"indexdb init success\");\n    }).catch(() => {\n        console.error(\"indexdb init error\");\n    })\n    const lineType = store.state.controlParams.currentLineType\n    getAllFlagsFunc(context, lineType, true).then(res => {\n        context.commit(\"updateAllFlags\", { flags: res });\n        getAllFlagsFunc(context, \"Multi\", false).then(res => {\n            context.commit(\"updateAllFlags\", { flags: res });\n        })\n    })\n\n\n}\n\n\n\n\nconst getAllMultiLineClassInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllMultiLineClassInfo?mode=${store.state.controlParams.currentMode}`;\n    const data = get(context.state, combinedUrl);\n    data.then(res => {\n        context.commit(\"updateMultiLineClassInfo\", { info: res });\n    });\n}\n\n\nconst testCustomDBConn: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return axios.post(\"postgres/line_chart/testDBConnection\", {\n        host_name: payload.hostName,\n        user_name: payload.userName,\n        password: payload.possword,\n        db_name: payload.dbName,\n    })\n}\n\nconst createCustomDBConn: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return axios.post(\"postgres/line_chart/createCustomDBConn\", {\n        host_name: payload.hostName,\n        user_name: payload.userName,\n        password: payload.possword,\n        db_name: payload.dbName,\n    })\n}\nconst initOM3DB: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return get(context.state, \"/line_chart/initOM3DBEnv\")\n}\nconst clearOM3Table: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { hostName: string, possword: string, dbName: string, userName: string }) => {\n    return get(context.state, \"/line_chart/clearOM3Table\")\n}\n\nconst getAllCustomTables: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllCustomTables`;\n    return get(context.state, combinedUrl);\n}\n\nconst performTransformForSingeLine: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: string, endTime: string, tableName: string }) => {\n    const combinedUrl = `/line_chart/performTransformForSingeLine?start_time=${payload.startTime}&end_time=${payload.endTime}&table_name=${payload.tableName}`;\n    return get(context.state, combinedUrl);\n}\nconst performTransformForMultiLine: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>, payload: { startTime: string, endTime: string, tableNames: Array<string>, multiLineClassName: string }) => {\n    const combinedUrl = `/line_chart/performTransformForMultiLine?start_time=${payload.startTime}&end_time=${payload.endTime}&table_name=${payload.tableNames}&line_class=${payload.multiLineClassName}`;\n    return get(context.state, combinedUrl);\n}\n\nconst loadCustomTableAndInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllCustomTableAndInfo?mode=${context.state.controlParams.currentMode}`;\n    get(context.state, combinedUrl).then((res) => {\n        if (res['code'] === 200) {\n            context.commit(\"updateCustomTableAndInfo\", { customTables: res['data']['table_name'], customTableInfo: res['data']['table_info'] })\n        } else {\n            console.log(res['msg'])\n        }\n    })\n}\n\nconst loadDefaultTableAndInfo: ActionHandler<GlobalState, GlobalState> = (context: ActionContext<GlobalState, GlobalState>) => {\n    const combinedUrl = `/line_chart/getAllDefaultTableAndInfo?mode=${context.state.controlParams.currentMode}`;\n    get(context.state, combinedUrl).then((res) => {\n        if (res['code'] === 200) {\n            context.commit(\"updateDefaultTableAndInfo\", { tables: res['data']['table_name'], tableInfo: res['data']['table_info'] })\n        } else {\n\n            console.log(res['msg'])\n        }\n    })\n}\n\n\n\nexport {\n    getAllTables,\n    getAllCustomTables,\n    getAllFlags,\n    loadMultiTimeSeriesInitData,\n    loadViewChangeQueryWSMinMaxMissDataInitData,//final method\n    getAllMultiLineClassInfo,\n    testCustomDBConn,\n    createCustomDBConn,\n    initOM3DB,\n    clearOM3Table,\n    performTransformForSingeLine,\n    loadCustomTableAndInfo,\n    performTransformForMultiLine,\n    loadDefaultTableAndInfo,\n}\n\n\n\n","\nlet isOpen = false\n\nfunction base64StringToArray(str: string) {\n    // 假设要存储的 Base64 数据为 base64String\n    const byteCharacters = atob(str);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    return byteArray\n}\n\nlet indexDb: any = null\n\nexport function initIndexDB() {\n    const request = indexedDB.open(\"om_flag_db\", 1);\n\n    request.onupgradeneeded = function (event) {\n        //@ts-ignore\n        const db = event.target.result\n        const objectStore = db.createObjectStore(\"om3_flag\", { keyPath: \"url\" });\n    }\n    return new Promise((resolve, rej) => {\n        request.onerror = function (event) {\n            console.log(event);\n            console.error(\"indexdb error, which will case flag cannot store in local\",)\n            rej(\"\")\n        }\n        request.onsuccess = function (event) {\n            //@ts-ignore\n            const db = event.target.result;\n            indexDb = db;\n            isOpen = true\n            resolve('');\n\n            // 在这里进行后续操作，例如读取或写入数据\n        };\n    })\n\n}\n\nexport function getIndexDB() {\n    return indexDb\n}\n\nexport function indexPutData(url: string, str: string) {\n    if(!isOpen){\n        indexDb()\n        return\n    }\n\n    const transaction = indexDb.transaction([\"om3_flag\"], \"readwrite\");\n    const objectStore = transaction.objectStore(\"om3_flag\");\n    const dta = { url: url, binaryData: base64StringToArray(str) }\n    objectStore.put(dta);\n}\n\nexport function indexGetData(url: string) {\n    if(!isOpen){\n        initIndexDB()\n        return false\n    }\n\n    const transaction = indexDb.transaction([\"om3_flag\"], \"readonly\");\n    const objectStore = transaction.objectStore(\"om3_flag\");\n\n    return new Promise((resolve, reject) => {\n        if (indexDb === null) {\n            resolve('')\n        }\n        const getRequest = objectStore.get(url);\n\n        getRequest.onsuccess = function (event: any) {\n            const result = event.target.result;\n            if (result) {\n                const byteArray = result.binaryData;\n                //@ts-ignore\n                const byteCharacters = Array.from(byteArray, byte => String.fromCharCode(byte)).join('');\n                const base64String = btoa(byteCharacters);\n                // 使用转换后的 Base64 数据\n                resolve(base64String)\n            } else {\n                // 数据不存在\n                resolve('')\n            }\n        };\n\n        getRequest.onerror = function (event: any) {\n            reject(\"get flag fail\")\n            // 读取失败\n        };\n    })\n}\n\nexport function clearFlagDB() {\n    if (isOpen && indexDb) {\n        indexDb.close();\n        indexedDB.deleteDatabase(\"om_flag_db\");\n        isOpen=false\n        console.warn(\"clear indexdb flag\");\n    }\n\n}"],"sourceRoot":""}